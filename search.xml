<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>前端常见面试题积累</title>
    <url>/post/f36c.html</url>
    <content><![CDATA[<p>分享个人面试过程中常见的问题，也包含自己对问题的理解。不断完善…..</p>
<span id="more"></span>

<!-- ########################## 1.在js中当对象使用new关键字的时候，程序内部都做了什么？ ########################## -->
<h3 id="new关键字的原理"><a href="#new关键字的原理" class="headerlink" title="new关键字的原理"></a>new关键字的原理</h3><p>当对象使用new关键字创建的时候，程序内部都做了什么？<br>&nbsp;&nbsp;&nbsp;1.开辟内存地址，里面放置一个空的对象<br>&nbsp;&nbsp;&nbsp;2.this指向了空的对象<br>&nbsp;&nbsp;&nbsp;3.构造函数的参数给空的对象赋值<br>&nbsp;&nbsp;&nbsp;4.将赋值后的对象返回给外面使用</p>
<hr>
<!-- ########################## 1.end ########################## -->

<!-- ########################## 2.跨域问题 ########################## -->
<h3 id="跨域的产生原因和如何解决？"><a href="#跨域的产生原因和如何解决？" class="headerlink" title="跨域的产生原因和如何解决？"></a>跨域的产生原因和如何解决？</h3><p>关于跨域，我想要整理一篇独立的文章去解释的理解，这里直接链接到 <a href="/post/9ff3.html">关于跨域，我想说…..</a></p>
<!-- *** -->

]]></content>
      <categories>
        <category>前端面试题</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>知识积累</tag>
      </tags>
  </entry>
  <entry>
    <title>那些开发中的css技巧</title>
    <url>/post/cc46.html</url>
    <content><![CDATA[<p>在开发中合理利用 css，可以大大提高开发效率。积累以便 Ctrl + C</p>
<span id="more"></span>

<h3 id="1-去除-safari-浏览器输入框的小图标以及密码输入的钥匙图标"><a href="#1-去除-safari-浏览器输入框的小图标以及密码输入的钥匙图标" class="headerlink" title="1. 去除 safari 浏览器输入框的小图标以及密码输入的钥匙图标"></a>1. 去除 safari 浏览器输入框的小图标以及密码输入的钥匙图标</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 去掉Safari浏览器下密码输入框自带的小钥匙图标 */</span></span><br><span class="line"><span class="selector-tag">input</span>::-webkit-credentials-auto-fill-button &#123;</span><br><span class="line">  display: none <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 去掉safari浏览器input右边的小图标/小按钮 */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>::-webkit-contacts-auto-fill-button &#123;</span><br><span class="line">  opacity: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="2-调整浏览器滚动条的样式"><a href="#2-调整浏览器滚动条的样式" class="headerlink" title="2. 调整浏览器滚动条的样式"></a>2. 调整浏览器滚动条的样式</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/</span></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  /* width: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">5px</span>; */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义滚动条轨道 内阴影+圆角*/</span></span><br><span class="line">::-webkit-scrollbar-track &#123;</span><br><span class="line">  border-radius: <span class="number">999px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0px</span> solid transparent;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">0.2</span>) inset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义滑块 内阴影+圆角*/</span></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  border-radius: <span class="number">999px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0px</span> solid transparent;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-clip</span>: content-box;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">0.5</span>) inset;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">0.5</span>) inset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">  background: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="3-毛玻璃效果"><a href="#3-毛玻璃效果" class="headerlink" title="3. 毛玻璃效果"></a>3. 毛玻璃效果</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">hsla</span>(<span class="number">0</span>, <span class="number">0%</span>, <span class="number">100%</span>, <span class="number">0.75</span>);</span><br><span class="line">  -webkit-backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>);</span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="4-手机端点开多选框出现蓝色块"><a href="#4-手机端点开多选框出现蓝色块" class="headerlink" title="4. 手机端点开多选框出现蓝色块"></a>4. 手机端点开多选框出现蓝色块</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  -webkit-tap-highlight-<span class="attribute">color</span>: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="5-鼠标放上出现一个白色的框-带动画"><a href="#5-鼠标放上出现一个白色的框-带动画" class="headerlink" title="5. 鼠标放上出现一个白色的框(带动画)"></a>5. 鼠标放上出现一个白色的框(带动画)</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 默认样式 -- 不显示 */</span></span><br><span class="line"><span class="selector-class">.border</span>:before &#123;</span><br><span class="line">  content: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#ffffff</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.4</span>, <span class="number">0</span>, <span class="number">0.2</span>, <span class="number">1</span>) <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* hover时改变 */</span></span><br><span class="line"><span class="selector-class">.border</span><span class="selector-pseudo">:hover</span>:before &#123;</span><br><span class="line">  transform: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>效果图</strong><br><img src="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/%E9%82%A3%E4%BA%9B%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84css%E6%8A%80%E5%B7%A7/border-animation.gif" alt="边框效果图"></p>
<hr>
<h3 id="6-flex-布局实现简单的瀑布流"><a href="#6-flex-布局实现简单的瀑布流" class="headerlink" title="6. flex 布局实现简单的瀑布流"></a>6. flex 布局实现简单的瀑布流</h3><p><strong>html 部分</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这里需要将文档结构处理成类似的结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;*&amp;^%^%&amp;%*&amp;*&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是item1的描述信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;*&amp;^%^%&amp;%*&amp;*&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题2<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是item2的描述信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;*&amp;^%^%&amp;%*&amp;*&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题3<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是item3的描述信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;*&amp;^%^%&amp;%*&amp;*&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题4<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是item4的描述信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>css 部分</strong></p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">column-count</span>: <span class="number">4</span>; <span class="comment">/* 瀑布流的列数 */</span></span><br><span class="line">  <span class="attribute">column-gap</span>: <span class="number">0</span>; <span class="comment">/* 每列之间的间距 如： 10px;*/</span></span><br><span class="line"></span><br><span class="line">  &amp;-item &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="7-一个交错动画案例（加载…）"><a href="#7-一个交错动画案例（加载…）" class="headerlink" title="7. 一个交错动画案例（加载…）"></a>7. 一个交错动画案例（加载…）</h3><p><strong>html 部分</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;loading&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;dot&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p><strong>scss 部分</strong></p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#222</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.loading</span> &#123;</span><br><span class="line">  <span class="variable">$colors</span>: <span class="number">#7ef9ff</span>, <span class="number">#89cff0</span>, <span class="number">#4682b4</span>, <span class="number">#0f52ba</span>, <span class="number">#000080</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.dot</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">2em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2em</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0.8em</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">background</span>: inherit;</span><br><span class="line">      <span class="attribute">border-radius</span>: inherit;</span><br><span class="line">      <span class="attribute">animation</span>: wave <span class="number">2s</span> ease-out infinite;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@for</span> <span class="variable">$i</span> from <span class="number">1</span> through <span class="number">5</span> &#123;</span><br><span class="line">      &amp;<span class="selector-pseudo">:nth-child</span>(#&#123;$i&#125;) &#123;</span><br><span class="line">        <span class="attribute">background</span>: nth(<span class="variable">$colors</span>, <span class="variable">$i</span>);</span><br><span class="line"></span><br><span class="line">        &amp;<span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">          <span class="attribute">animation-delay</span>: <span class="variable">$i</span> * <span class="number">0.2s</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> wave &#123;</span><br><span class="line">  50%,</span><br><span class="line">  75% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: scale(<span class="number">2.5</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  80%,</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/%E9%82%A3%E4%BA%9B%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84css%E6%8A%80%E5%B7%A7/loading_animation.gif" alt="交错动画演示"></p>
<hr>
<h3 id="8-利用伪类实现按钮边框特效"><a href="#8-利用伪类实现按钮边框特效" class="headerlink" title="8. 利用伪类实现按钮边框特效"></a>8. 利用伪类实现按钮边框特效</h3><p><strong>html 部分</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">data-text</span>=<span class="string">&quot;Start&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn-ghost btn-border-stroke  btn-text-float-up&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn-borders&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;border-top&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;border-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;border-bottom&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;border-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;btn-text&quot;</span>&gt;</span>Start<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>scss 部分</strong></p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="attribute">https</span>://fonts.googleapis.com/css?family=Lato);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#1a1e23</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  --hue: <span class="number">190</span>;</span><br><span class="line">  --ease-in-duration: <span class="number">0.25s</span>;</span><br><span class="line">  --ease-in-exponential: cubic-bezier(<span class="number">0.95</span>, <span class="number">0.05</span>, <span class="number">0.795</span>, <span class="number">0.035</span>);</span><br><span class="line">  --ease-out-duration: <span class="number">0.65s</span>;</span><br><span class="line">  --ease-out-delay: var(--ease-in-duration);</span><br><span class="line">  --ease-out-exponential: cubic-bezier(<span class="number">0.19</span>, <span class="number">1</span>, <span class="number">0.22</span>, <span class="number">1</span>);</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1rem</span> <span class="number">3rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">background-color</span>: hsl(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid hsl(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>);</span><br><span class="line">  <span class="attribute">outline</span>: transparent;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  user-select: none;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.25s</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: hsl(var(--hue), <span class="number">100%</span>, <span class="number">31%</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;-primary &#123;</span><br><span class="line">    --hue: <span class="number">171</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;-ghost &#123;</span><br><span class="line">    <span class="attribute">color</span>: hsl(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">    <span class="attribute">border-color</span>: hsl(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>);</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: white;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;-<span class="attribute">border</span>-stroke &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: hsla(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>, <span class="number">0.35</span>);</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.btn-borders</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.border-top</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">        <span class="attribute">background</span>: hsl(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>);</span><br><span class="line">        <span class="attribute">transform</span>: scaleX(<span class="number">0</span>);</span><br><span class="line">        <span class="attribute">transform-origin</span>: left;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.border-right</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">background</span>: hsl(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>);</span><br><span class="line">        <span class="attribute">transform</span>: scaleY(<span class="number">0</span>);</span><br><span class="line">        <span class="attribute">transform-origin</span>: bottom;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.border-bottom</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">        <span class="attribute">background</span>: hsl(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>);</span><br><span class="line">        <span class="attribute">transform</span>: scaleX(<span class="number">0</span>);</span><br><span class="line">        <span class="attribute">transform-origin</span>: left;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.border-left</span> &#123;</span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">1px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">background</span>: hsl(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>);</span><br><span class="line">        <span class="attribute">transform</span>: scaleY(<span class="number">0</span>);</span><br><span class="line">        <span class="attribute">transform-origin</span>: bottom;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// when unhover, ease-out left, bottom; ease-in right, top</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.border-left</span> &#123;</span><br><span class="line">        <span class="attribute">transition</span>: var(--ease-out-duration) var(--ease-out-delay) var(--ease-out-exponential);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.border-bottom</span> &#123;</span><br><span class="line">        <span class="attribute">transition</span>: var(--ease-out-duration) var(--ease-out-delay) var(--ease-out-exponential);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.border-right</span> &#123;</span><br><span class="line">        <span class="attribute">transition</span>: var(--ease-in-duration) var(--ease-in-exponential);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.border-top</span> &#123;</span><br><span class="line">        <span class="attribute">transition</span>: var(--ease-in-duration) var(--ease-in-exponential);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: hsl(var(--hue), <span class="number">100%</span>, <span class="number">41%</span>);</span><br><span class="line">      <span class="attribute">background</span>: transparent;</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.border-top</span>,</span><br><span class="line">      <span class="selector-class">.border-bottom</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: scaleX(<span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.border-left</span>,</span><br><span class="line">      <span class="selector-class">.border-right</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: scaleY(<span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// when hover, ease-in left, bottom; ease-out right, top</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.border-left</span> &#123;</span><br><span class="line">        <span class="attribute">transition</span>: var(--ease-in-duration) var(--ease-in-exponential);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.border-bottom</span> &#123;</span><br><span class="line">        <span class="attribute">transition</span>: var(--ease-in-duration) var(--ease-in-exponential);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.border-right</span> &#123;</span><br><span class="line">        <span class="attribute">transition</span>: var(--ease-out-duration) var(--ease-out-delay) var(--ease-out-exponential);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="selector-class">.border-top</span> &#123;</span><br><span class="line">        <span class="attribute">transition</span>: var(--ease-out-duration) var(--ease-out-delay) var(--ease-out-exponential);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;-text-<span class="attribute">float</span>-up &#123;</span><br><span class="line">    &amp;<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">content</span>: attr(data-text);</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">justify-content</span>: center;</span><br><span class="line">      <span class="attribute">align-items</span>: center;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">transform</span>: translateY(<span class="number">35%</span>);</span><br><span class="line">      <span class="attribute">transition</span>: <span class="number">0.25s</span> ease-out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// when hover, ease-in top-text; ease-out bottom-text</span></span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.btn-text</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: block;</span><br><span class="line">      <span class="attribute">transition</span>: <span class="number">0.75s</span> <span class="number">0.1s</span> var(--ease-out-exponential);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="comment">// when hover, ease-in bottom-text; ease-out top-text</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.btn-text</span> &#123;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">transform</span>: translateY(-<span class="number">25%</span>);</span><br><span class="line">        <span class="attribute">transition</span>: <span class="number">0.25s</span> ease-out;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">        <span class="attribute">transform</span>: translateY(<span class="number">0</span>);</span><br><span class="line">        <span class="attribute">transition</span>: <span class="number">0.75s</span> <span class="number">0.1s</span> var(--ease-out-exponential);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/%E9%82%A3%E4%BA%9B%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84css%E6%8A%80%E5%B7%A7/button_animation.gif" alt="按钮动画"></p>
<hr>
<h3 id="9-更换旧的网格系统"><a href="#9-更换旧的网格系统" class="headerlink" title="9. 更换旧的网格系统"></a>9. 更换旧的网格系统</h3><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$minColumnWidth</span>: <span class="number">10rem</span>; <span class="comment">// 最小宽度</span></span><br><span class="line"><span class="variable">$gridGap</span>: <span class="number">15px</span>; <span class="comment">// 网格之间的上下间距</span></span><br><span class="line"><span class="selector-class">.grid</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  grid-template-<span class="attribute">columns</span>: repeat(auto-fit, minmax(<span class="variable">$minColumnWidth</span>, <span class="number">1</span>fr));</span><br><span class="line">  grid-gap: <span class="number">2rem</span>;</span><br><span class="line"></span><br><span class="line">  &amp; + <span class="selector-class">.grid</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="variable">$gridGap</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="10-媒体查询适配刘海屏"><a href="#10-媒体查询适配刘海屏" class="headerlink" title="10. 媒体查询适配刘海屏"></a>10. 媒体查询适配刘海屏</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// iphone x/xs/<span class="number">11</span> pro</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">device-width</span>: <span class="number">375px</span>) <span class="keyword">and</span> (<span class="attribute">device-height</span>: <span class="number">812px</span>) <span class="keyword">and</span> (<span class="attribute">-webkit-device-pixel-ratio</span>: <span class="number">3</span>) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//  iphone xr/<span class="number">11</span></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">device-width</span>: <span class="number">414px</span>) <span class="keyword">and</span> (<span class="attribute">device-height</span>: <span class="number">896px</span>) <span class="keyword">and</span> (<span class="attribute">-webkit-device-pixel-ratio</span>: <span class="number">2</span>) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// iphone x/xs/<span class="number">11</span>pro max</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">device-width</span>: <span class="number">414px</span>) <span class="keyword">and</span> (<span class="attribute">device-height</span>: <span class="number">896px</span>) <span class="keyword">and</span> (<span class="attribute">-webkit-device-pixel-ratio</span>: <span class="number">3</span>) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// iphone <span class="number">12</span>mini</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">device-width</span>: <span class="number">360px</span>) <span class="keyword">and</span> (<span class="attribute">device-height</span>: <span class="number">780px</span>) <span class="keyword">and</span> (<span class="attribute">-webkit-device-pixel-ratio</span>: <span class="number">3</span>) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// iphone <span class="number">12</span>/<span class="number">12</span>pro</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">device-width</span>: <span class="number">390px</span>) <span class="keyword">and</span> (<span class="attribute">device-height</span>: <span class="number">844px</span>) <span class="keyword">and</span> (<span class="attribute">-webkit-device-pixel-ratio</span>: <span class="number">3</span>) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// iphone <span class="number">12</span>pro max</span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">device-width</span>: <span class="number">428px</span>) <span class="keyword">and</span> (<span class="attribute">device-height</span>: <span class="number">926px</span>) <span class="keyword">and</span> (<span class="attribute">-webkit-device-pixel-ratio</span>: <span class="number">3</span>) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="11-Ios-新特性适配带有小横条的机型"><a href="#11-Ios-新特性适配带有小横条的机型" class="headerlink" title="11. Ios 新特性适配带有小横条的机型"></a>11. Ios 新特性适配带有小横条的机型</h3><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: constant(safe-area-inset-bottom) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: env(safe-area-inset-bottom) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端知识积累</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>懒人福音</tag>
      </tags>
  </entry>
  <entry>
    <title>JS常用工具类汇总（持续完善....）</title>
    <url>/post/535a.html</url>
    <content><![CDATA[<p>整理项目开发中经常使用的Javascript片段, 以便Ctrl + C</p>
<span id="more"></span>


<h3 id="1-创建a标签-打开新页面"><a href="#1-创建a标签-打开新页面" class="headerlink" title="1. 创建a标签,打开新页面"></a>1. 创建a标签,打开新页面</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建a标签,打开新页面 openURL()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>url 目标地址</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">openURL</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> aLabel = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">  <span class="comment">//设置链接</span></span><br><span class="line">  aLabel.setAttribute(<span class="string">&#x27;href&#x27;</span>, url);</span><br><span class="line">  <span class="comment">//新窗口打开链接</span></span><br><span class="line">  aLabel.setAttribute(<span class="string">&#x27;target&#x27;</span>, <span class="string">&#x27;_blank&#x27;</span>);</span><br><span class="line">  <span class="comment">//设置标签ID</span></span><br><span class="line">  aLabel.setAttribute(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;reportpoint&#x27;</span>);</span><br><span class="line">  <span class="comment">// 防止反复添加</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&#x27;reportpoint&#x27;</span>)) &#123;</span><br><span class="line">    <span class="built_in">document</span>.body.removeChild(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;reportpoint&#x27;</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(aLabel);</span><br><span class="line">  aLabel.click();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="2-防抖函数"><a href="#2-防抖函数" class="headerlink" title="2. 防抖函数"></a>2. 防抖函数</h3><p>防抖函数的原理就是通过延时器控制用户在短时间内进行重复操作的时候取消上一次操作</p>
<figure class="highlight js"><figcaption><span>防抖函数</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防抖函数 debounce()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;function&#125;</span> </span>fn 事件触发的操作</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>delay 多少毫秒内连续触发事件，不会执行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;Function&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span> ;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="built_in">this</span> ; <span class="comment">// 注意this指向</span></span><br><span class="line">    args = <span class="built_in">arguments</span>; <span class="comment">// 拿到函数的入参</span></span><br><span class="line"></span><br><span class="line">    timer &amp;&amp; <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      fn.apply(self, args);</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 假设现有以下点击事件，clickEvent()</span></span><br><span class="line"><span class="keyword">let</span> input1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;input1&#x27;</span>);</span><br><span class="line">input1.addEventListener(<span class="string">&#x27;keyup&#x27;</span>,debounce(action1,<span class="number">1000</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">action1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(input1.value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="3-节流函数"><a href="#3-节流函数" class="headerlink" title="3. 节流函数"></a>3. 节流函数</h3><p>节流函数的原理就是通过控制延时器,当高频事件触发，n秒内只会执行一次</p>
<figure class="highlight js"><figcaption><span>节流函数</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节流函数 throttle()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;function&#125;</span> </span>fn 事件触发的操作</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>delay 多少毫秒内连续触发事件，只会执行一次</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;Function&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span> ;</span><br><span class="line">  <span class="keyword">let</span> flag = <span class="literal">true</span> ; <span class="comment">// 当前是否正在执行...</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flag) <span class="keyword">return</span></span><br><span class="line">    flag = <span class="literal">false</span>; </span><br><span class="line">    <span class="keyword">let</span> self = <span class="built_in">this</span> ; <span class="comment">// 注意this指向</span></span><br><span class="line">    args = <span class="built_in">arguments</span>; <span class="comment">// 拿到函数的入参</span></span><br><span class="line"></span><br><span class="line">    timer &amp;&amp; <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      flag = <span class="literal">true</span>; <span class="comment">// 时间到了，可以继续执行下一次事件</span></span><br><span class="line">      fn.apply(self, args);</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用的规则同 <a href='#防抖函数'> 防抖函数 </a></p>
<hr>
<h3 id="4-将字符串运行成js脚本的几种方式"><a href="#4-将字符串运行成js脚本的几种方式" class="headerlink" title="4. 将字符串运行成js脚本的几种方式"></a>4. 将字符串运行成js脚本的几种方式</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="built_in">eval</span>(<span class="string">&#x27;字符串&#x27;</span>)</span><br><span class="line"><span class="number">2.</span> <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">&#x27;字符串&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> <span class="built_in">setTimeout</span>(<span class="string">&#x27;字符串&#x27;</span>, <span class="number">1000</span>)</span><br><span class="line"><span class="number">4.</span> <span class="built_in">setInterval</span>(<span class="string">&#x27;字符串&#x27;</span>, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="5-浏览器复制内容到剪切板"><a href="#5-浏览器复制内容到剪切板" class="headerlink" title="5. 浏览器复制内容到剪切板"></a>5. 浏览器复制内容到剪切板</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 浏览器复制内容到剪切板 copyText()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>text 需要复制的内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> copyText = <span class="function">(<span class="params">text</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> range = <span class="built_in">document</span>.createRange();</span><br><span class="line">  <span class="keyword">var</span> copyDOM = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">  copyDOM.innerHTML = text;</span><br><span class="line">  <span class="built_in">window</span>.getSelection().removeAllRanges();</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(copyDOM)</span><br><span class="line">  range.selectNode(copyDOM);</span><br><span class="line">  <span class="built_in">window</span>.getSelection().addRange(range);</span><br><span class="line">  <span class="keyword">var</span> successful = <span class="built_in">document</span>.execCommand(<span class="string">&#x27;copy&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span>(successful)&#123;</span><br><span class="line">    <span class="comment">// 复制成功到剪切板</span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 复制失败，一般是因为浏览器不支持复制</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.body.removeChild(copyDOM)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="6-取随机字符串"><a href="#6-取随机字符串" class="headerlink" title="6. 取随机字符串"></a>6. 取随机字符串</h3><p>取随机字符串根据业务的不同会有不一样的取值方式，用作签名的一部分、用做随机密码….<br>这里我采用的是获取长度不定、去除容易混淆的字符oOLl,9gq,Vv,Uu,I1的随机位数的随机字符</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取随机字符串 randomString()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>len 随机字符串的长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomString</span>(<span class="params">len</span>) </span>&#123;</span><br><span class="line">  len = len || <span class="number">32</span>; <span class="comment">// 默认随机生成32位长度字符串</span></span><br><span class="line">  <span class="keyword">var</span> $chars = <span class="string">&#x27;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&#x27;</span>;    <span class="comment">/****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/</span></span><br><span class="line">  <span class="keyword">var</span> maxPos = $chars.length;</span><br><span class="line">  <span class="keyword">var</span> randomStr = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    randomStr += $chars.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * maxPos));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> randomStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="7-异步加载一段js脚本"><a href="#7-异步加载一段js脚本" class="headerlink" title="7. 异步加载一段js脚本"></a>7. 异步加载一段js脚本</h3><p>如： 异步引入网页悬浮脚本、异步引入高德地图、腾讯地图等。</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description </span>异步加载  一段js放在 header</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;object&#125;</span> <span class="variable">url</span></span> - js 的 url</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;function&#125;</span> <span class="variable">callback</span></span> - 成功回调</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123; promise&lt;any&gt;&#125;</span></span>&#125; promise</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> loadScript = <span class="function">(<span class="params">url: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> script: <span class="built_in">any</span> = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>)</span><br><span class="line">      script.type = <span class="string">&#x27;text/javascript&#x27;</span></span><br><span class="line">      <span class="keyword">if</span> (script.readyState) &#123;</span><br><span class="line">        <span class="comment">//IE</span></span><br><span class="line">        script.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            script.readyState == <span class="string">&#x27;loaded&#x27;</span> ||</span><br><span class="line">            script.readyState == <span class="string">&#x27;complete&#x27;</span></span><br><span class="line">          ) &#123;</span><br><span class="line">            script.onreadystatechange = <span class="literal">null</span></span><br><span class="line">            <span class="built_in">Promise</span>.resolve(<span class="number">0</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//Others: Firefox, Safari, Chrome, and Opera</span></span><br><span class="line">        script.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">Promise</span>.resolve(<span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      script.src = url</span><br><span class="line">      <span class="built_in">document</span>.body.appendChild(script)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="built_in">Promise</span>.reject(e)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="8-获取页面高度"><a href="#8-获取页面高度" class="headerlink" title="8. 获取页面高度"></a>8. 获取页面高度</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get page height</span></span><br><span class="line"><span class="keyword">const</span> getPageHeight = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> g = <span class="built_in">document</span></span><br><span class="line">  <span class="keyword">const</span> a = g.body</span><br><span class="line">  <span class="keyword">const</span> f = g.documentElement</span><br><span class="line">  <span class="keyword">const</span> d = g.compatMode === <span class="string">&#x27;BackCompat&#x27;</span> ? a : g.documentElement</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.max(f.scrollHeight, a.scrollHeight, d.clientHeight)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="9-获取页面可视高度"><a href="#9-获取页面可视高度" class="headerlink" title="9. 获取页面可视高度"></a>9. 获取页面可视高度</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get page view height</span></span><br><span class="line"><span class="keyword">const</span> getPageViewHeight = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> d = <span class="built_in">document</span></span><br><span class="line">  <span class="keyword">const</span> a = d.compatMode === <span class="string">&#x27;BackCompat&#x27;</span> ? d.body : d.documentElement</span><br><span class="line">  <span class="keyword">return</span> a.clientHeight</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="10-获取页面可视宽度"><a href="#10-获取页面可视宽度" class="headerlink" title="10. 获取页面可视宽度"></a>10. 获取页面可视宽度</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get page view width</span></span><br><span class="line"><span class="keyword">const</span> getPageViewWidth = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> d = <span class="built_in">document</span></span><br><span class="line">  <span class="keyword">const</span> a = d.compatMode === <span class="string">&#x27;BackCompat&#x27;</span> ? d.body : d.documentElement</span><br><span class="line">  <span class="keyword">return</span> a.clientWidth</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="11-获取页面宽度"><a href="#11-获取页面宽度" class="headerlink" title="11. 获取页面宽度"></a>11. 获取页面宽度</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get page width</span></span><br><span class="line"><span class="keyword">const</span> getPageWidth = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> g = <span class="built_in">document</span></span><br><span class="line">  <span class="keyword">const</span> a = g.body</span><br><span class="line">  <span class="keyword">const</span> f = g.documentElement</span><br><span class="line">  <span class="keyword">const</span> d = g.compatMode === <span class="string">&#x27;BackCompat&#x27;</span> ? a : g.documentElement</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.max(f.scrollWidth, a.scrollWidth, d.clientWidth)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="12-判断当前设备"><a href="#12-判断当前设备" class="headerlink" title="12. 判断当前设备"></a>12. 判断当前设备</h3><h4 id="是否为安卓设备"><a href="#是否为安卓设备" class="headerlink" title="是否为安卓设备"></a>是否为安卓设备</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isAndroidMobileDevice = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="regexp">/android/i</span>.test(navigator.userAgent.toLowerCase())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="是否为苹果设备"><a href="#是否为苹果设备" class="headerlink" title="是否为苹果设备"></a>是否为苹果设备</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isAppleMobileDevice = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="regexp">/iphone|ipod|ipad|Macintosh/i</span>.test(navigator.userAgent.toLowerCase())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="是否为iPhoneX"><a href="#是否为iPhoneX" class="headerlink" title="是否为iPhoneX"></a>是否为iPhoneX</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isIphonex = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// X XS, XS Max, XR</span></span><br><span class="line">  <span class="keyword">const</span> xSeriesConfig = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">devicePixelRatio</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">375</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">812</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">devicePixelRatio</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">414</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">896</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">devicePixelRatio</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">414</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">896</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span> !== <span class="string">&#x27;undefined&#x27;</span> &amp;&amp; <span class="built_in">window</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> isIOS = <span class="regexp">/iphone/gi</span>.test(<span class="built_in">window</span>.navigator.userAgent)</span><br><span class="line">    <span class="keyword">if</span> (!isIOS) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">const</span> &#123; devicePixelRatio, screen &#125; = <span class="built_in">window</span></span><br><span class="line">    <span class="keyword">const</span> &#123; width, height &#125; = screen</span><br><span class="line">    <span class="keyword">return</span> xSeriesConfig.some(</span><br><span class="line">      <span class="function">(<span class="params">item</span>) =&gt;</span></span><br><span class="line">        item.devicePixelRatio === devicePixelRatio &amp;&amp;</span><br><span class="line">        item.width === width &amp;&amp;</span><br><span class="line">        item.height === height</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="是否为手机设备"><a href="#是否为手机设备" class="headerlink" title="是否为手机设备"></a>是否为手机设备</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isMobileUserAgent = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="regexp">/iphone|ipod|android.*mobile|windows.*phone|blackberry.*mobile/i</span>.test(</span><br><span class="line">    <span class="built_in">window</span>.navigator.userAgent.toLowerCase()</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="13-设置cookie"><a href="#13-设置cookie" class="headerlink" title="13. 设置cookie"></a>13. 设置cookie</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description </span>设置 cookie</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params <span class="type">&#123;string&#125;</span> <span class="variable">cookie</span></span> -键名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params <span class="type">&#123;any&#125;</span> <span class="variable">value</span></span> -存入的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params <span class="type">&#123;Hours&#125;</span> <span class="variable">number</span></span> -有效期限</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> setCookie = <span class="function">(<span class="params">name: <span class="built_in">string</span>, value: <span class="built_in">any</span>, Hours: <span class="built_in">number</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">  <span class="keyword">const</span> offset = <span class="number">8</span></span><br><span class="line">  <span class="keyword">const</span> utc = d.getTime() + d.getTimezoneOffset() * <span class="number">60000</span></span><br><span class="line">  <span class="keyword">const</span> nd = utc + <span class="number">3600000</span> * offset</span><br><span class="line">  <span class="keyword">const</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>(nd)</span><br><span class="line">  exp.setTime(exp.getTime() + Hours * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>)</span><br><span class="line">  <span class="built_in">document</span>.cookie =</span><br><span class="line">    name +</span><br><span class="line">    <span class="string">&#x27;=&#x27;</span> +</span><br><span class="line">    <span class="built_in">escape</span>(value) +</span><br><span class="line">    <span class="string">&#x27;;path=/;expires=&#x27;</span> +</span><br><span class="line">    exp.toUTCString() +</span><br><span class="line">    <span class="string">&#x27;;domain=360doc.com;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="14-获取字符串对应的字节数"><a href="#14-获取字符串对应的字节数" class="headerlink" title="14. 获取字符串对应的字节数"></a>14. 获取字符串对应的字节数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description </span>获取字节数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>s 字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> getBytesLength = <span class="function">(<span class="params">s: string</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> s.replace(<span class="regexp">/[^\x00-\xff]/gi</span>, <span class="string">&#x27;--&#x27;</span>).length</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="15-获取本地的时间"><a href="#15-获取本地的时间" class="headerlink" title="15. 获取本地的时间"></a>15. 获取本地的时间</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取本地的时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> getServerTime = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> xmlHttp: XMLHttpRequest</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">srvTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// FF, Opera, Safari, Chrome</span></span><br><span class="line">      xmlHttp = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err1) &#123;</span><br><span class="line">      <span class="comment">// IE</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        xmlHttp = <span class="keyword">new</span> ActiveXObject(<span class="string">&#x27;Msxml2.XMLHTTP&#x27;</span>)</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err2) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          xmlHttp = <span class="keyword">new</span> ActiveXObject(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (eerr3) &#123;</span><br><span class="line">          <span class="comment">// AJAX not supported, use CPU time.</span></span><br><span class="line">          alert(<span class="string">&#x27;AJAX not supported&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    xmlHttp.open(<span class="string">&#x27;HEAD&#x27;</span>, <span class="built_in">window</span>.location.href.toString(), <span class="literal">false</span>)</span><br><span class="line">    xmlHttp.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html&#x27;</span>)</span><br><span class="line">    xmlHttp.send(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> xmlHttp.getResponseHeader(<span class="string">&#x27;Date&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> st = srvTime()</span><br><span class="line">  <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(st <span class="keyword">as</span> <span class="built_in">string</span>)</span><br><span class="line">  <span class="keyword">var</span> timestamp = date.getTime()</span><br><span class="line">  <span class="keyword">return</span> timestamp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="16-获取浏览器的Cookie的值"><a href="#16-获取浏览器的Cookie的值" class="headerlink" title="16. 获取浏览器的Cookie的值"></a>16. 获取浏览器的Cookie的值</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取浏览器的Cookie的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> cookie = <span class="function"><span class="params">name</span> =&gt;</span> <span class="string">`; <span class="subst">$&#123;<span class="built_in">document</span>.cookie&#125;</span>`</span>.split(<span class="string">`; <span class="subst">$&#123;name&#125;</span>=`</span>).pop().split(<span class="string">&#x27;;&#x27;</span>).shift();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取token </span></span><br><span class="line">cookie(<span class="string">&#x27;TOKEN&#x27;</span>)</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="17-颜色RGB转十六进制"><a href="#17-颜色RGB转十六进制" class="headerlink" title="17. 颜色RGB转十六进制"></a>17. 颜色RGB转十六进制</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 颜色RGB转十六进制</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> rgbToHex = <span class="function">(<span class="params">r, g, b</span>) =&gt;</span> <span class="string">&quot;#&quot;</span> + ((<span class="number">1</span> &lt;&lt; <span class="number">24</span>) + (r &lt;&lt; <span class="number">16</span>) + (g &lt;&lt; <span class="number">8</span>) + b).toString(<span class="number">16</span>).slice(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">rgbToHex(<span class="number">0</span>, <span class="number">51</span>, <span class="number">255</span>); </span><br><span class="line"><span class="comment">// Result: #0033ff</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="18-复制到剪贴板-新的API"><a href="#18-复制到剪贴板-新的API" class="headerlink" title="18. 复制到剪贴板(新的API)"></a>18. 复制到剪贴板(新的API)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 复制到剪贴板</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> copyToClipboard = <span class="function">(<span class="params">text</span>) =&gt;</span> navigator.clipboard.writeText(text);</span><br><span class="line">    </span><br><span class="line">copyToClipboard(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="19-清除所有Cookie"><a href="#19-清除所有Cookie" class="headerlink" title="19. 清除所有Cookie"></a>19. 清除所有Cookie</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 清除所有Cookie</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> clearCookies = <span class="built_in">document</span>.cookie.split(<span class="string">&#x27;;&#x27;</span>).forEach(<span class="function"><span class="params">cookie</span> =&gt;</span> <span class="built_in">document</span>.cookie = cookie.replace(<span class="regexp">/^ +/</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="regexp">/=.*/</span>, <span class="string">`=;expires=<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">0</span>).toUTCString()&#125;</span>;path=/`</span>));</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="20-生成随机十六进制颜色"><a href="#20-生成随机十六进制颜色" class="headerlink" title="20. 生成随机十六进制颜色"></a>20. 生成随机十六进制颜色</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成随机十六进制颜色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> randomHex = <span class="function">() =&gt;</span> <span class="string">`#<span class="subst">$&#123;<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">0xffffff</span>).toString(<span class="number">16</span>).padEnd(<span class="number">6</span>, <span class="string">&quot;0&quot;</span>)&#125;</span>`</span>;</span><br><span class="line">    </span><br><span class="line"> <span class="built_in">console</span>.log(randomHex());</span><br><span class="line"><span class="comment">// Result: #92b008</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="21-从URL获取查询参数-–-JS"><a href="#21-从URL获取查询参数-–-JS" class="headerlink" title="21. 从URL获取查询参数 – JS"></a>21. 从URL获取查询参数 – JS</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从URL获取查询参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> getParameters = <span class="function">(<span class="params">URL</span>) =&gt;</span> &#123;</span><br><span class="line">  URL = <span class="built_in">JSON</span>.parse(</span><br><span class="line">    <span class="string">&#x27;&#123;&quot;&#x27;</span> +</span><br><span class="line">      <span class="built_in">decodeURI</span>(URL.split(<span class="string">&quot;?&quot;</span>)[<span class="number">1</span>])</span><br><span class="line">        .replace(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;\\&quot;&#x27;</span>)</span><br><span class="line">        .replace(<span class="regexp">/&amp;/g</span>, <span class="string">&#x27;&quot;,&quot;&#x27;</span>)</span><br><span class="line">        .replace(<span class="regexp">/=/g</span>, <span class="string">&#x27;&quot;:&quot;&#x27;</span>) +</span><br><span class="line">      <span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">JSON</span>.stringify(URL);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">getParameters(<span class="built_in">window</span>.location);</span><br><span class="line"><span class="comment">// Result: &#123; search : &quot;easy&quot;, page : 3 &#125;</span></span><br></pre></td></tr></table></figure>

<p>或者： </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从URL获取查询参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">Object</span>.fromEntries(<span class="keyword">new</span> URLSearchParams(<span class="built_in">window</span>.location.search))</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="22-检查用户的设备是否在暗黑模式"><a href="#22-检查用户的设备是否在暗黑模式" class="headerlink" title="22. 检查用户的设备是否在暗黑模式"></a>22. 检查用户的设备是否在暗黑模式</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 检查用户的设备是否在暗黑模式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="variable">Boolean</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> isDarkMode = <span class="built_in">window</span>.matchMedia &amp;&amp; <span class="built_in">window</span>.matchMedia(<span class="string">&#x27;(prefers-color-scheme: dark)&#x27;</span>).matches</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="23-下载一个Excel文档"><a href="#23-下载一个Excel文档" class="headerlink" title="23. 下载一个Excel文档"></a>23. 下载一个Excel文档</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载一个链接</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params">link, name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!name)&#123;</span><br><span class="line">    name = link.slice(link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> eleLink = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">  eleLink.download = name</span><br><span class="line">  eleLink.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">  eleLink.href = link</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(eleLink)</span><br><span class="line">  eleLink.click()</span><br><span class="line">  <span class="built_in">document</span>.body.removeChild(eleLink)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下载excel</span></span><br><span class="line">download(<span class="string">&#x27;http://111.229.14.189/file/1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="24-浏览器中下载一些DOM内容-JSON文件"><a href="#24-浏览器中下载一些DOM内容-JSON文件" class="headerlink" title="24. 浏览器中下载一些DOM内容/JSON文件"></a>24. 浏览器中下载一些DOM内容/JSON文件</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 浏览器下载静态文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>name 文件名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>content 文件内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">downloadFile</span>(<span class="params">name, content</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> name == <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;The first parameter name is a must&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> content == <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;The second parameter content is a must&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!(content <span class="keyword">instanceof</span> Blob)) &#123;</span><br><span class="line">    content = <span class="keyword">new</span> Blob([content])</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> link = URL.createObjectURL(content)</span><br><span class="line">  download(link, name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用下载</span></span><br><span class="line">downloadFile(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;lalalallalalla&#x27;</span>)</span><br><span class="line">downloadFile(<span class="string">&#x27;1.json&#x27;</span>,<span class="built_in">JSON</span>.stringify(&#123;<span class="attr">name</span>:<span class="string">&#x27;hahahha&#x27;</span>&#125;))</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="25-浏览器下载MP4-PDF-图片等"><a href="#25-浏览器下载MP4-PDF-图片等" class="headerlink" title="25. 浏览器下载MP4/PDF/图片等"></a>25. 浏览器下载MP4/PDF/图片等</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 浏览器下载MP4/PDF/图片等</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="comment">//提供一个link，完成文件下载，link可以是  http://xxx.com/xxx.xls</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">downloadByLink</span>(<span class="params">link,fileName</span>)</span>&#123;</span><br><span class="line">  axios.request(&#123;</span><br><span class="line">    <span class="attr">url</span>: link,</span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&#x27;blob&#x27;</span> <span class="comment">// 关键代码，让axios把响应改成blob</span></span><br><span class="line">  &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> link = URL.createObjectURL(res.data)</span><br><span class="line">    download(link, fileName)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：会有同源策略的限制，需要配置转发</p>
<hr>
<h3 id="26-去除对象中的空元素"><a href="#26-去除对象中的空元素" class="headerlink" title="26. 去除对象中的空元素"></a>26. 去除对象中的空元素</h3><p>给后端发送数据的时候，要判断某个属性是不是空字符串，然后给后端拼参数，这块逻辑抽离出来就是<code>cleanObject</code>，代码实现如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * cleanObject 去除对象中的空元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> cleanObject = <span class="function">(<span class="params">object</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// Object.assign(&#123;&#125;, object)</span></span><br><span class="line">  <span class="keyword">if</span> (!object) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> result = &#123; ...object &#125;;</span><br><span class="line">  <span class="built_in">Object</span>.keys(result).forEach(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> value = result[key];</span><br><span class="line">    <span class="keyword">if</span> (isVoid(value)) &#123;</span><br><span class="line">      <span class="keyword">delete</span> result[key];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否为空</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isVoid = <span class="function">(<span class="params">value</span>) =&gt;</span></span><br><span class="line">  value === <span class="literal">undefined</span> || value === <span class="literal">null</span> || value === <span class="string">&quot;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>使用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> res = cleanObject(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">pageSize</span>:<span class="number">10</span>,</span><br><span class="line">    <span class="attr">page</span>:<span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;res&quot;</span>, res) <span class="comment">// 输出 &#123; page:1,pageSize:10 &#125;</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="27-常用的正则验证"><a href="#27-常用的正则验证" class="headerlink" title="27. 常用的正则验证"></a>27. 常用的正则验证</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 常用的正则验证</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> checkStr = <span class="function"><span class="keyword">function</span>(<span class="params">str, type</span>) </span>&#123; <span class="comment">// 常用正则验证，注意type大小写</span></span><br><span class="line">  <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;phone&#x27;</span>: <span class="comment">// 手机号码</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^1[3|4|5|6|7|8|9][0-9]&#123;9&#125;$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;tel&#x27;</span>: <span class="comment">// 座机</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^(0\d&#123;2,3&#125;-\d&#123;7,8&#125;)(-\d&#123;1,4&#125;)?$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;card&#x27;</span>: <span class="comment">// 身份证</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/(^\d&#123;15&#125;$)|(^\d&#123;18&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>: <span class="comment">// 密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[a-zA-Z]\w&#123;5,17&#125;$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;postal&#x27;</span>: <span class="comment">// 邮政编码</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/[1-9]\d&#123;5&#125;(?!\d)/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;QQ&#x27;</span>: <span class="comment">// QQ号</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[1-9][0-9]&#123;4,9&#125;$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;email&#x27;</span>: <span class="comment">// 邮箱</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[\w-]+(.[\w-]+)*@[\w-]+(.[\w-]+)+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;money&#x27;</span>: <span class="comment">// 金额(小数点2位)</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^\d*(?:.\d&#123;0,2&#125;)?$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;URL&#x27;</span>: <span class="comment">// 网址</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/(http|ftp|https):/</span><span class="regexp">/[\w-_]+(.[\w-_]+)+([\w-.,@?^=%&amp;:/~+#]*[\w-@?^=%&amp;/~+#])?/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;IP&#x27;</span>: <span class="comment">// IP</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/((?:(?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.)&#123;3&#125;(?:25[0-5]|2[0-4]\d|[01]?\d?\d))/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;date&#x27;</span>: <span class="comment">// 日期时间</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;) (\d&#123;2&#125;)(?::\d&#123;2&#125;|:(\d&#123;2&#125;):(\d&#123;2&#125;))$/</span>.test(str) ||</span><br><span class="line">        <span class="regexp">/^(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;number&#x27;</span>: <span class="comment">// 数字</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[0-9]$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;english&#x27;</span>: <span class="comment">// 英文</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[a-zA-Z]+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;chinese&#x27;</span>: <span class="comment">// 中文</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[\u4E00-\u9FA5]+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;lower&#x27;</span>: <span class="comment">// 小写</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[a-z]+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upper&#x27;</span>: <span class="comment">// 大写</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[A-Z]+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;HTML&#x27;</span>: <span class="comment">// HTML标记</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/&lt;(&quot;[^&quot;]*&quot;|&#x27;[^&#x27;]*&#x27;|[^&#x27;&quot;&gt;])*&gt;/</span>.test(str)</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="28-阿拉伯数字转中文大写数字"><a href="#28-阿拉伯数字转中文大写数字" class="headerlink" title="28. 阿拉伯数字转中文大写数字"></a>28. 阿拉伯数字转中文大写数字</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 阿拉伯数字转中文大写数字</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> numberToChinese = <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123; <span class="comment">// 将阿拉伯数字翻译成中文的大写数字</span></span><br><span class="line">  <span class="keyword">let</span> AA = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;零&#x27;</span>, <span class="string">&#x27;一&#x27;</span>, <span class="string">&#x27;二&#x27;</span>, <span class="string">&#x27;三&#x27;</span>, <span class="string">&#x27;四&#x27;</span>, <span class="string">&#x27;五&#x27;</span>, <span class="string">&#x27;六&#x27;</span>, <span class="string">&#x27;七&#x27;</span>, <span class="string">&#x27;八&#x27;</span>, <span class="string">&#x27;九&#x27;</span>, <span class="string">&#x27;十&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> BB = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;十&#x27;</span>, <span class="string">&#x27;百&#x27;</span>, <span class="string">&#x27;仟&#x27;</span>, <span class="string">&#x27;萬&#x27;</span>, <span class="string">&#x27;億&#x27;</span>, <span class="string">&#x27;点&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> a = (<span class="string">&#x27;&#x27;</span> + num).replace(<span class="regexp">/(^0*)/g</span>, <span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> k = <span class="number">0</span></span><br><span class="line">  <span class="keyword">let</span> re = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = a[<span class="number">0</span>].length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (k) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        re = BB[<span class="number">7</span>] + re</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;0&#123;4&#125;//d&#123;&#x27;</span> + (a[<span class="number">0</span>].length - i - <span class="number">1</span>) + <span class="string">&#x27;&#125;$&#x27;</span>).test(a[<span class="number">0</span>])) &#123;</span><br><span class="line">          re = BB[<span class="number">4</span>] + re</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        re = BB[<span class="number">5</span>] + re</span><br><span class="line">        BB[<span class="number">7</span>] = BB[<span class="number">5</span>]</span><br><span class="line">        k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k % <span class="number">4</span> === <span class="number">2</span> &amp;&amp; a[<span class="number">0</span>].charAt(i + <span class="number">2</span>) !== <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>].charAt(i + <span class="number">1</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      re = AA[<span class="number">0</span>] + re</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">0</span>].charAt(i) !== <span class="number">0</span>) &#123;</span><br><span class="line">      re = AA[a[<span class="number">0</span>].charAt(i)] + BB[k % <span class="number">4</span>] + re</span><br><span class="line">    &#125;</span><br><span class="line">    k++</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (a.length &gt; <span class="number">1</span>) &#123; <span class="comment">// 加上小数部分(如果有小数部分)</span></span><br><span class="line">    re += BB[<span class="number">6</span>]</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; a[<span class="number">1</span>].length; i++) &#123;</span><br><span class="line">      re += AA[a[<span class="number">1</span>].charAt(i)]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (re === <span class="string">&#x27;一十&#x27;</span>) &#123;</span><br><span class="line">    re = <span class="string">&#x27;十&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (re.match(<span class="regexp">/^一/</span>) &amp;&amp; re.length === <span class="number">3</span>) &#123;</span><br><span class="line">    re = re.replace(<span class="string">&#x27;一&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> re</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="29-base64图片下载功能"><a href="#29-base64图片下载功能" class="headerlink" title="29. base64图片下载功能"></a>29. base64图片下载功能</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * base64图片下载功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> downloadFile = <span class="function"><span class="keyword">function</span>(<span class="params">base64, fileName</span>) </span>&#123; <span class="comment">//base64图片下载功能</span></span><br><span class="line">  <span class="keyword">let</span> base64ToBlob = <span class="function"><span class="keyword">function</span>(<span class="params">code</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> parts = code.split(<span class="string">&#x27;;base64,&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> contentType = parts[<span class="number">0</span>].split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">let</span> raw = <span class="built_in">window</span>.atob(parts[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">let</span> rawLength = raw.length;</span><br><span class="line">    <span class="keyword">let</span> uInt8Array = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(rawLength);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; rawLength; ++i) &#123;</span><br><span class="line">      uInt8Array[i] = raw.charCodeAt(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Blob([uInt8Array], &#123;</span><br><span class="line">      <span class="attr">type</span>: contentType</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> aLink = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> blob = base64ToBlob(base64); <span class="comment">//new Blob([content]);</span></span><br><span class="line">  <span class="keyword">let</span> evt = <span class="built_in">document</span>.createEvent(<span class="string">&quot;HTMLEvents&quot;</span>);</span><br><span class="line">  evt.initEvent(<span class="string">&quot;click&quot;</span>, <span class="literal">true</span>, <span class="literal">true</span>); <span class="comment">//initEvent不加后两个参数在FF下会报错  事件类型，是否冒泡，是否阻止浏览器的默认行为</span></span><br><span class="line">  aLink.download = fileName;</span><br><span class="line">  aLink.href = URL.createObjectURL(blob);</span><br><span class="line">  aLink.click();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="30-获取div高度"><a href="#30-获取div高度" class="headerlink" title="30. 获取div高度"></a>30. 获取div高度</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取div高度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="built_in">window</span>.getComputedStyle(div).getPropertyValue(<span class="string">&#x27;height&#x27;</span>);</span><br></pre></td></tr></table></figure>


<hr>
<h3 id="31-将base64转化成可用formData提交的文件"><a href="#31-将base64转化成可用formData提交的文件" class="headerlink" title="31. 将base64转化成可用formData提交的文件"></a>31. 将base64转化成可用formData提交的文件</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * convertBase64UrlToBlob 将base64转化成可用formdata提交的文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>urlData base64位的url</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> convertBase64UrlToBlob = <span class="function">(<span class="params">urlData</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//去掉url的头，并转换为byte</span></span><br><span class="line">  <span class="keyword">const</span> split = urlData.split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> bytes = <span class="built_in">window</span>.atob(split[<span class="number">1</span>]);</span><br><span class="line">  <span class="comment">//处理异常,将ascii码小于0的转换为大于0</span></span><br><span class="line">  <span class="keyword">const</span> ab = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(bytes.length);</span><br><span class="line">  <span class="keyword">const</span> ia = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(ab);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; bytes.length; i++) &#123;</span><br><span class="line">    ia[i] = bytes.charCodeAt(i);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Blob([ab], &#123; <span class="attr">type</span>: split[<span class="number">0</span>].match(<span class="regexp">/:(.*?);/</span>)[<span class="number">1</span>] &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="32-找到对象中所有可能存在的字符串，并替换掉其中的-lt-gt-分别为全角的＜＞（）"><a href="#32-找到对象中所有可能存在的字符串，并替换掉其中的-lt-gt-分别为全角的＜＞（）" class="headerlink" title="32. 找到对象中所有可能存在的字符串，并替换掉其中的&lt;, &gt;, (, )分别为全角的＜＞（）"></a>32. 找到对象中所有可能存在的字符串，并替换掉其中的&lt;, &gt;, (, )分别为全角的＜＞（）</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 找到对象中所有可能存在的字符串，并替换掉其中的&lt;, &gt;, (, )分别为全角的＜＞（）</span></span><br><span class="line"><span class="comment"> * 可以自定义拓展更多的规则</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;object&#125;</span> </span>obj 需要处理的对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;object&#125;</span> </span>aim obj</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> formatString = <span class="function">(<span class="params">obj</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!obj.hasOwnProperty(key)) <span class="keyword">return</span>; <span class="comment">// 排除掉原型继承而来的属性</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> obj[key] == <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">      obj[key] = obj[key]</span><br><span class="line">        .replace(<span class="regexp">/&lt;/g</span>, <span class="string">&#x27;＜&#x27;</span>)</span><br><span class="line">        .replace(<span class="regexp">/&gt;/g</span>, <span class="string">&#x27;＞&#x27;</span>)</span><br><span class="line">        .replace(<span class="regexp">/\(/g</span>, <span class="string">&#x27;（&#x27;</span>)</span><br><span class="line">        .replace(<span class="regexp">/\)/g</span>, <span class="string">&#x27;）&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> obj[key] == <span class="string">&#x27;object&#x27;</span> || <span class="keyword">typeof</span> obj[key] == <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">      formatString(obj[key]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> obj;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="33-将对象格式转化为get请求所需要的参数"><a href="#33-将对象格式转化为get请求所需要的参数" class="headerlink" title="33. 将对象格式转化为get请求所需要的参数"></a>33. 将对象格式转化为get请求所需要的参数</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * getParams 将对象格式转化为get请求所需要的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;object&#125;</span> </span>params 需要处理的对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;object&#125;</span> </span>aim obj</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getParams</span>(<span class="params">params</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> paramStr = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="built_in">Object</span>.keys(params).forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (paramStr === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">      paramStr = <span class="string">`<span class="subst">$&#123;item&#125;</span>=<span class="subst">$&#123;params[item]&#125;</span>`</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      paramStr = <span class="string">`<span class="subst">$&#123;paramStr&#125;</span>&amp;<span class="subst">$&#123;item&#125;</span>=<span class="subst">$&#123;params[item]&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> paramStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="34-获取图片真实的宽高（非真实渲染）"><a href="#34-获取图片真实的宽高（非真实渲染）" class="headerlink" title="34. 获取图片真实的宽高（非真实渲染）"></a>34. 获取图片真实的宽高（非真实渲染）</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * getImageSize 获取图片的宽高</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>url 需要处理的图片路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;object&#125;</span> <span class="type">&#123; width: number, height: number &#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getImageSize</span>(<span class="params">url: <span class="built_in">string</span></span>): <span class="title">Promise</span>&lt;<span class="title">any</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> image = <span class="keyword">new</span> Image();</span><br><span class="line">    image.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      resolve(&#123;</span><br><span class="line">        <span class="attr">width</span>: image.width, <span class="comment">// 或naturalWidth</span></span><br><span class="line">        <span class="attr">height</span>: image.height, <span class="comment">// 或naturalHeight</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 注释中这两个属性在Firefox/Chrome/Safari/Opera及IE9+里已经实现</span></span><br><span class="line">    &#125;;</span><br><span class="line">    image.onerror = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      reject(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;error&#x27;</span>));</span><br><span class="line">    &#125;;</span><br><span class="line">    image.src = url;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="35-递归拿出对象数组中所有指定的字段项，并返回新数组"><a href="#35-递归拿出对象数组中所有指定的字段项，并返回新数组" class="headerlink" title="35. 递归拿出对象数组中所有指定的字段项，并返回新数组"></a>35. 递归拿出对象数组中所有指定的字段项，并返回新数组</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 递归拿出所有指定的字段项</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Array&#125;</span> <span class="variable">list</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">key</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> <span class="variable">child</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;Array&#125;</span> </span>返回所有key的集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getKeyList</span>(<span class="params">list: <span class="built_in">Array</span>&lt;<span class="built_in">any</span>&gt;, key: <span class="built_in">string</span>, child = <span class="string">&#x27;children&#x27;</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> result: <span class="built_in">any</span>[] = [];</span><br><span class="line">  list.forEach(<span class="function">(<span class="params">listItem</span>) =&gt;</span> &#123;</span><br><span class="line">    listItem[key] &amp;&amp; result.push(listItem[key]);</span><br><span class="line">    <span class="keyword">if</span> (listItem[child] &amp;&amp; listItem[child].length) &#123;</span><br><span class="line">      result.push(...getKeyList(listItem[child], key, child));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端知识积累</category>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>懒人福音</tag>
        <tag>知识积累</tag>
      </tags>
  </entry>
  <entry>
    <title>安装Docker和Jenkins</title>
    <url>/post/21d0.html</url>
    <content><![CDATA[<p>自己动手实践部署jenkins记录</p>
<span id="more"></span>

<h3 id="什么是Docker"><a href="#什么是Docker" class="headerlink" title="什么是Docker"></a>什么是Docker</h3><p><code>Docker</code> 是一个开源的应用容器引擎。开发者可以将自己的应用打包在自己的镜像里面，然后迁移到其他平台的 <code>Docker</code> 中。镜像中可以存放你自己自定义的运行环境，文件，代码，设置等等内容，再也不用担心环境造成的运行问题。镜像共享运行机器的系统内核。</p>
<p>同样， <code>Docker</code> 也支持跨平台。你的镜像也可以加载在 <code>Windows</code> 和 <code>Linux</code>，实现快速运行和部署。</p>
<p><code>Docker</code> 的优势在于 快速，轻量，灵活。开发者可以制作一个自己自定义的镜像，也可以使用官方或者其他开发者的镜像来启动一个服务。通过将镜像创建为容器，容器之间相互隔离资源和进程不冲突。但硬件资源又是共享的。 创建的镜像也可以通过文件快速分享，也可以上传到镜像库进行存取和管理。同时 <code>Docker</code> 的镜像有 <code>分层策略</code> ，每次对镜像的更新操作，都会堆叠一个新层。当你拉取 / 推送新版本镜像时，只推送 / 拉取修改的部分。大大加快了镜像的传输效率</p>
<p>那么 <code>Docker</code> 在 <code>CI/CD</code> 中的作用是什么呢？</p>
<p><code>Docker</code> 贯穿 <code>CI/CD</code> 中整个流程。作为应用服务的载体有着非常重要的地位。</p>
<p>我们可以使用 <code>Docker</code> 将应用打包成一个镜像，交给 <code>Kubernetes</code> 去部署在目标服务集群。并且可以将镜像上传到自己的镜像仓库，做好版本分类处理。</p>
<h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>在了解了 <code>Docker</code> 的作用后，我们来开始安装 <code>Docker</code>。在开始安装之前，需要安装 <code>device-mapper-persistent-data</code> 和 <code>lvm2</code> 两个依赖。</p>
<p><code>device-mapper-persistent-data</code> 是 <code>Linux</code> 下的一个存储驱动， <code>Linux</code> 上的高级存储技术。 <code>Lvm</code> 的作用则是创建逻辑磁盘分区。这里我们使用 <code>CentOS</code> 的 <code>Yum</code> 包管理器安装两个依赖：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure>

<p>依赖安装完毕后，我们将阿里云的 <code>Docker</code> 镜像源添加进去。可以加速 <code>Docker</code> 的安装。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">yum install docker-ce -y</span><br></pre></td></tr></table></figure>

<p>安装完毕，我们就可以使用 <code>systemctl</code> 启动来启动 <code>Docker</code> 了。<code>systemctl</code> 是 <code>Linux</code> 的进程管理服务命令，他可以帮助我们启动 <code>docker</code> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure>

<p>接着执行一下 <code>docker -v</code> ，这条命令可以用来查看 <code>Docker</code> 安装的版本信息。当然也可以帮助我们查看 <code>docker</code> 安装状态。如果正常展示版本信息，代表 <code>Docker</code> 已经安装成功。</p>
<h4 id="配置阿里云镜像源"><a href="#配置阿里云镜像源" class="headerlink" title="配置阿里云镜像源"></a>配置阿里云镜像源</h4><p>在 <code>Docker</code> 安装完毕后，之后我们去拉取 <code>docker</code> 镜像时，一般默认会去 <code>docker</code> 官方源拉取镜像。但是国内出海网速实在是太慢，所以选择我们更换为 <code>阿里云镜像仓库</code> 源进行镜像下载加速。</p>
<p>登录阿里云官网，打开 <a href="https://link.juejin.cn/?target=https://cr.console.aliyun.com">阿里云容器镜像服务</a>。点击左侧菜单最下面的 <code>镜像加速器</code> ，选择 <code>CentOS</code> （如下图）。按照官网的提示执行命令，即可更换 <code>docker</code> 镜像源地址。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://vxedgf56.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>



<h3 id="安装Jenkins"><a href="#安装Jenkins" class="headerlink" title="安装Jenkins"></a>安装Jenkins</h3><p>在安装完 <code>Docker</code> 后，我们只是拥有了一个可以承载服务的载体。想实现自动化构建，还需要安装另一个构建工具 <code>Jenkins</code>。那什么是 <code>Jenkins</code> 呢？</p>
<p><code>Jenkins</code> 是一个基于 <code>Java</code> 语言开发的持续构建工具平台，主要用于持续、自动的构建/测试你的软件和项目。它可以执行你预先设定好的设置和构建脚本，也可以和 Git 代码库做集成，实现自动触发和定时触发构建。</p>
<h4 id="1-安装OpenJDK"><a href="#1-安装OpenJDK" class="headerlink" title="1. 安装OpenJDK"></a>1. 安装OpenJDK</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y java</span><br></pre></td></tr></table></figure>

<h4 id="2-使用Yum安装Jenkins"><a href="#2-使用Yum安装Jenkins" class="headerlink" title="2. 使用Yum安装Jenkins"></a>2. 使用Yum安装Jenkins</h4><p>由于 <code>Yum</code> 源不自带 <code>Jenkins</code> 的安装源，于是我们需要自己导入一份 <code>Jenkins</code> 安装源进行安装。导入后，使用 <code>Yum</code> 命令安装即可。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br><span class="line">sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br><span class="line">yum install jenkins</span><br></pre></td></tr></table></figure>

<p><code>TIP1:</code></p>
<p>执行第一条命令时有概率出现下面的错误，如果出现了，就执行解决中的命令，然后再导入秘钥（第二条）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR: cannot verify pkg.jenkins.io&#x27;s certificate, issued by ‘/C=US/O=Let&#x27;s Encrypt/CN=R3’:</span><br><span class="line">  Issued certificate has expired.</span><br><span class="line">To connect to pkg.jenkins.io insecurely, use `--no-check-certificate&#x27;.</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br></pre></td></tr></table></figure>

<p>然后重新执行后面的命令。</p>
<p><code>TIP2:</code></p>
<p>执行下载jenkens命令时很可能出现下面的错误：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.bfsu.edu.cn</span><br><span class="line"> * extras: mirrors.ustc.edu.cn</span><br><span class="line"> * updates: mirrors.bfsu.edu.cn</span><br><span class="line">No package jenkins available.</span><br><span class="line">/* 依赖检测失败 */</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<p><strong>安装epel-release</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure>

<p><strong>安装daemonize</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install daemonize</span><br></pre></td></tr></table></figure>

<p>然后重新下载jenkins</p>
<h4 id="3-启动Jenkins"><a href="#3-启动Jenkins" class="headerlink" title="3.启动Jenkins"></a>3.启动Jenkins</h4><p><code>Jenkins</code> 安装后，会将启动命令注册到系统 <code>Service</code> 命令中。所以我们直接使用系统 <code>service</code> 命令启动 <code>Jenkins</code> 即可。在这里，有三个命令可以使用，分别对应 启动 / 重启 / 停止 三个命令。</p>
<p>在这里，我们直接调用 <code>service jenkins start</code> 启动 Jenkins 即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service jenkins start</span><br><span class="line"># service jenkins restart restart 重启 Jenkins</span><br><span class="line"># service jenkins restart stop 停止 Jenkins</span><br></pre></td></tr></table></figure>

<h4 id="4-给Jenkins放行端口"><a href="#4-给Jenkins放行端口" class="headerlink" title="4.给Jenkins放行端口"></a>4.给Jenkins放行端口</h4><p>在启动 <code>Jenkins</code> 后，此时 <code>Jenkins</code> 会开启它的默认端口 <code>8080</code> 。但由于防火墙限制，我们需要手动让防火墙放行 <code>8080</code> 端口才能对外访问到界面。</p>
<p>这里我们在 <code>CentOS</code> 下的 <code>firewall-cmd</code> 防火墙添加端口放行规则，添加完后重启防火墙。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br><span class="line">firewall-cmd --zone=public --add-port=50000/tcp --permanent</span><br><span class="line"></span><br><span class="line">systemctl reload firewalld</span><br></pre></td></tr></table></figure>

<p>服务启动后，访问 <code>IP:8080</code> 。</p>
<p><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5gtzldgypj20yy0riq44.jpg" alt="WeChat8213c3f9330e1b618a64135d7d506987"></p>
<h4 id="5-初始化Jenkins配置"><a href="#5-初始化Jenkins配置" class="headerlink" title="5.初始化Jenkins配置"></a>5.初始化Jenkins配置</h4><p><strong>5.1 解锁Jenkins</strong></p>
<p>在 <code>Jenkins</code> 启动完成后，会自动跳转至<code>Jenkins</code> 的解锁界面，你需要输入存放在服务器的初始解锁密码才能进行下一步操作。</p>
<p><code>Jenkins</code> 启动后，会生成一个<strong>初始密码</strong>。该密码在服务器的文件内存放，我们可以进入服务器查看密码内容，将密码填写在 <code>Jenkins</code> 的管理员密码输入框内。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /var/lib/jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure>

<p><strong>5.2 下载插件</strong></p>
<p>因为 <code>Jenkins</code> 插件服务器在国外，所以速度不太理想。我们需要更换为清华大学的 <code>Jenkins</code> 插件源后，再安装插件，<strong>所以先不要点安装插件。</strong></p>
<p>更换方法很简单。进入服务器，将 <code>/var/lib/jenkins/updates/default.json</code> 内的插件源地址替换成清华大学的源地址，将 google 替换为 baidu 即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/http:\/\/updates.jenkins-ci.org\/download/https:\/\/mirrors.tuna.tsinghua.edu.cn\/jenkins/g&#x27; /var/lib/jenkins/updates/default.json &amp;&amp; sed -i &#x27;s/http:\/\/www.google.com/https:\/\/www.baidu.com/g&#x27; /var/lib/jenkins/updates/default.json</span><br></pre></td></tr></table></figure>

<p>接着点击 <code>安装推荐的插件</code> 即可。稍等一会插件安装完毕。</p>
<p><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5gtusazi3j20uj0u0dhp.jpg" alt="image-20211207193019958"></p>
<p><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5gu0l7hgbj21c10u0di6.jpg" alt="WechatIMG1256"></p>
<h4 id="6-测试安装"><a href="#6-测试安装" class="headerlink" title="6.测试安装"></a>6.测试安装</h4><p>到这里，我们的 Jenkins 算是启动成功了。但是，我们还需要对 <code>Jenkins</code> 做一点点简单的配置，才可以让它可以构建 <code>docker</code> 镜像。</p>
<p>我们点击 <code>Jenkins</code> 首页 -&gt; 左侧导航 -&gt; 新建任务 -&gt; <strong>Freestyle project</strong></p>
<p><strong><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5gu144il8j21no0u0786.jpg" alt="WeChatf1c493eccf9d6aff70b3f11b17e70d5a"></strong></p>
<p>新建完毕后，找到 <code>构建</code> 一项，选择 <code>增加构建步骤</code>，选择 <code>执行shell</code> ，输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker -v</span><br><span class="line">docker pull node:latest</span><br></pre></td></tr></table></figure>

<p>该命令会去拉取一个 <code>nodejs</code> 稳定版的镜像，我们可以来测试 <code>Docker</code> 的可用性。</p>
<p>保存后，我们点击左侧菜单的<strong>立即构建</strong>， <code>Jenkins</code> 就会开始构建。选择左侧历史记录第一项（最新的一项），点击控制台输出，查看构建日志。</p>
<p>执行后，我们发现提示无访问权限。这又是什么情况呢？这里就不得不提到 <code>Linux</code> 下的 <code>Unix Socket</code>权限问题了。</p>
<h4 id="7-Unix-Socket权限问题"><a href="#7-Unix-Socket权限问题" class="headerlink" title="7.Unix Socket权限问题"></a>7.Unix Socket权限问题</h4><p><code>docker</code> 的架构是 <code>C/S</code> 架构。在我们使用 <code>docker</code> 命令时，其实是命令使用 <code>socket</code> 与 <code>docker</code> 的守护进程进行通信，才能正常执行 <code>docker</code> 命令。</p>
<p>而在 <code>Linux</code> 中， <code>Unix socket</code> 属于 <code>root</code> 用户，因此需要 <code>root</code> 权限才能访问。官方是这么解释的：</p>
<blockquote>
<p>Manage Docker as a non-root user The docker daemon binds to a Unix socket instead of a TCP port. By default that Unix socket is owned by the user root and other users can only access it using sudo. The docker daemon always runs as the root user. If you don’t want to use sudo when you use the docker command, create a Unix group called docker and add users to it. When the docker daemon starts, it makes the ownership of the Unix socket read/writable by the docker group.</p>
</blockquote>
<p>但是在 <code>docker</code> 中， <code>docker</code> 提供了一个 <code>用户组</code> 的概念。我们可以将执行 <code>Shell</code> 的用户添加到名称为 <code>docker</code> 的用户组，则可以正常执行 <code>docker</code> 命令。</p>
<p>而在 <code>Jenkins</code> 中执行的终端用户做 <code>jenkins</code> ，所以我们只需要将 <code>jenkins</code> 加入到 <code>docker</code> 用户组即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo groupadd docker          #新增docker用户组</span><br><span class="line">sudo gpasswd -a jenkins docker  #将当前用户添加至docker用户组</span><br><span class="line">newgrp docker                 #更新docker用户组</span><br></pre></td></tr></table></figure>

<p>加入后，重启 <code>Jenkins</code> ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service jenkins restart</span><br></pre></td></tr></table></figure>

<p>刷新页面等待jenkins重新启动并登入账号密码：</p>
<p><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5gu1nsn7aj21480rmab5.jpg" alt="WeChatf7664d9dfaa1e741a63dacfc54a08b87"></p>
<p>之后重新登录成功后构建:</p>
<p><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h5gu206lt4j21by0u00wm.jpg" alt="WeChatf7664d9dfaa1e741a63dacfc54a08b87"></p>
]]></content>
      <categories>
        <category>服务端知识积累</category>
        <category>Docker / Jenkins</category>
      </categories>
      <tags>
        <tag>知识积累</tag>
      </tags>
  </entry>
  <entry>
    <title>持久化vuex</title>
    <url>/post/83d9.html</url>
    <content><![CDATA[<p>vue 项目中一般都需要存储用户的信息、用户保存的设置、一些操作的状态等等，大量的信息存储会选择数据库，但是像是用户下单状态、用户音视频通话状态、微信一键登录返回 code 等一些数据存储在数据库无疑是没有意义的。为了防止存储在 vuex 中的数据一经用户刷新页面就丢失导致体验不好的现象，我们可以对 vuex 进行持久化保存，同时可以区分一些数据是存储在 localStorage 中还是 sessionStorage 中。</p>
<span id="more"></span>

<hr>
<blockquote>
<p>原理： createStore 也就是创建 vuex 实例时，vuex 向外提供了 plugins 属性，plugins 的值是一个数据，它会向其中所有的元素注入 store 对象，为了方便实时获取到 store，并且会在 store 更新时触发所有 plugins 中的事件，用 subscribe 事件去监听每次 mutation 事件。</p>
</blockquote>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore&lt;RootState&gt;(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">strict</span>: <span class="literal">true</span>, <span class="comment">// 是否开启严格模式</span></span><br><span class="line">  <span class="attr">plugins</span>: [], <span class="comment">// 元素为函数，并且函数的第一个参数是store对象</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h5 id="如此一来，可以实时获取到-store，并能够在-store-更新时触发回调，就可以直接操作-store-的存与取了"><a href="#如此一来，可以实时获取到-store，并能够在-store-更新时触发回调，就可以直接操作-store-的存与取了" class="headerlink" title="如此一来，可以实时获取到 store，并能够在 store 更新时触发回调，就可以直接操作 store 的存与取了"></a>如此一来，可以实时获取到 store，并能够在 store 更新时触发回调，就可以直接操作 store 的存与取了</h5><p>这个是负责存储和取值的实现：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> Socket &#123;</span><br><span class="line">  <span class="attr">key</span>: <span class="built_in">string</span>;</span><br><span class="line">  modules: Modules;</span><br><span class="line">  modulesKeys: ModulesKeys;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Modules &#123;</span><br><span class="line">  [propName: <span class="built_in">string</span>]: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> ModulesKeys &#123;</span><br><span class="line">  <span class="attr">local</span>: <span class="built_in">string</span>[];</span><br><span class="line">  session: <span class="built_in">string</span>[];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> Mutation &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="built_in">any</span>;</span><br><span class="line">  payload: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> exclude = [<span class="string">&#x27;actions&#x27;</span>, <span class="string">&#x27;getters&#x27;</span>, <span class="string">&#x27;mutations&#x27;</span>, <span class="string">&#x27;namespaced&#x27;</span>];</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">Persistent</span>(<span class="params">&#123; key, modules, modulesKeys &#125;: Socket</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">store: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> localOldState = <span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(key) || <span class="string">&#x27;&#123;&#125;&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> sessionOldState = <span class="built_in">JSON</span>.parse(sessionStorage.getItem(key) || <span class="string">&#x27;&#123;&#125;&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> oldState: Modules = &#123;&#125;;</span><br><span class="line">    <span class="built_in">Object</span>.assign(oldState, localOldState, sessionOldState);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Object</span>.keys(oldState).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">const</span> oldKey <span class="keyword">in</span> oldState) &#123;</span><br><span class="line">        modules[oldKey] = oldState[oldKey];</span><br><span class="line">      &#125;</span><br><span class="line">      store.replaceState(modules);</span><br><span class="line">    &#125;</span><br><span class="line">    store.subscribe(<span class="function">(<span class="params">mutation: Mutation, state: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 判断是否需要缓存数据至localStorage</span></span><br><span class="line">      <span class="keyword">if</span> (modulesKeys.local.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> localData = setData(store.state, modulesKeys.local);</span><br><span class="line">        <span class="built_in">localStorage</span>.setItem(key, <span class="built_in">JSON</span>.stringify(localData));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">localStorage</span>.removeItem(key);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 判断是否需要缓存数据至sessionStorage</span></span><br><span class="line">      <span class="keyword">if</span> (modulesKeys.session.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> sessionData = setData(store.state, modulesKeys.session);</span><br><span class="line">        sessionStorage.setItem(key, <span class="built_in">JSON</span>.stringify(sessionData));</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        sessionStorage.removeItem(key);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setData</span>(<span class="params">state: <span class="built_in">any</span>, <span class="built_in">module</span>: <span class="built_in">string</span>[]</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data: Modules = &#123;&#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> i <span class="keyword">of</span> <span class="built_in">module</span>) &#123;</span><br><span class="line">    data[i] = state[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="同时推荐一个-createLogger-的-plugin，可以实时打印-store-的更改"><a href="#同时推荐一个-createLogger-的-plugin，可以实时打印-store-的更改" class="headerlink" title="同时推荐一个 createLogger 的 plugin，可以实时打印 store 的更改"></a>同时推荐一个 createLogger 的 plugin，可以实时打印 store 的更改</h4><p>这里我的文档结构为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| -- store</span><br><span class="line">  | -- modules</span><br><span class="line">    | -- app.ts</span><br><span class="line">    | -- user.ts</span><br><span class="line">  | -- plugins</span><br><span class="line">    | -- persistent.ts</span><br><span class="line">  index.ts</span><br></pre></td></tr></table></figure>
<p>最终的 store/index.ts 代码如下：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore, createLogger &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> Persistent <span class="keyword">from</span> <span class="string">&#x27;./plugins/persistent&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; userState &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/modules/user&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; appState &#125; <span class="keyword">from</span> <span class="string">&#x27;@/store/modules/app&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> debug = <span class="keyword">import</span>.meta.env.MODE !== <span class="string">&#x27;production&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> files = <span class="keyword">import</span>.meta.globEager(<span class="string">&#x27;./modules/*.ts&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里只是举例： user  app 模块</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> RootState &#123;</span><br><span class="line">  <span class="attr">user</span>: userState;</span><br><span class="line">  app: appState;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> modules: <span class="built_in">any</span> = &#123;&#125;;</span><br><span class="line"><span class="built_in">Object</span>.keys(files).forEach(<span class="function">(<span class="params">c: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="built_in">module</span> = files[c].default;</span><br><span class="line">  <span class="keyword">const</span> moduleName: <span class="built_in">string</span> = c.replace(<span class="regexp">/^\.\/(.*)\/(.*)\.\w+$/</span>, <span class="string">&#x27;$2&#x27;</span>);</span><br><span class="line">  modules[moduleName] = <span class="built_in">module</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这是一个vuex本地存储插件，默认把vuex所有数据都做存储了</span></span><br><span class="line"><span class="comment">// local代表存储在localStorage里面，进行永久存储</span></span><br><span class="line"><span class="comment">// session代表存储在sessionStorage里面，进行临时存储</span></span><br><span class="line"><span class="comment">// 都接收Modules的文件名数组，如：[&#x27;app&#x27;, &#x27;keepAlive&#x27;, &#x27;user&#x27;]</span></span><br><span class="line"><span class="comment">// 用户相关的数据建议直接存储在local里面，session里面会导致打开新窗口时获取不到token值，因为session只针对当前会话</span></span><br><span class="line"><span class="keyword">const</span> persistent = Persistent(&#123;</span><br><span class="line">  <span class="attr">key</span>: <span class="string">&#x27;vuex&#x27;</span>,</span><br><span class="line">  modules,</span><br><span class="line">  <span class="attr">modulesKeys</span>: &#123;</span><br><span class="line">    <span class="attr">local</span>: <span class="built_in">Object</span>.keys(modules).filter(<span class="function"><span class="params">item</span> =&gt;</span> item !== <span class="string">&#x27;call&#x27;</span>),</span><br><span class="line">    <span class="attr">session</span>: [<span class="string">&#x27;call&#x27;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> createStore&lt;RootState&gt;(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    ...modules,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">strict</span>: debug,</span><br><span class="line">  <span class="attr">plugins</span>: debug ? [createLogger(), persistent] : [persistent],</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端知识积累</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>知识积累</tag>
      </tags>
  </entry>
  <entry>
    <title>实用的Vue自定义指令（持续完善...）</title>
    <url>/post/a18d.html</url>
    <content><![CDATA[<p>常用的几个Vue自定义指令收集，持续更新…</p>
<span id="more"></span>


<h3 id="1-点击元素外部事件"><a href="#1-点击元素外部事件" class="headerlink" title="1. 点击元素外部事件"></a>1. 点击元素外部事件</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * v-clickOutside</span></span><br><span class="line"><span class="comment"> * 点击元素外部事件</span></span><br><span class="line"><span class="comment"> * 接收参数：function类型，点击外面时返回true,点击内部时返回false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; Directive, DirectiveBinding &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">interface</span> ElType <span class="keyword">extends</span> HTMLElement &#123;</span><br><span class="line">  <span class="attr">__handleClick__</span>: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> directive: Directive = &#123;</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params">el: ElType, binding: DirectiveBinding</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> binding.value !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="string">&#x27;callback must be a function&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    el.__handleClick__ = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (el.contains(e.target)) &#123;</span><br><span class="line">        binding.value(<span class="literal">false</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        binding.value(<span class="literal">true</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;click&#x27;</span>, el.__handleClick__);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">beforeUnmount</span>(<span class="params">el: ElType</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.removeEventListener(<span class="string">&#x27;click&#x27;</span>, el.__handleClick__);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> directive;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="2-复制某个值至剪贴板"><a href="#2-复制某个值至剪贴板" class="headerlink" title="2. 复制某个值至剪贴板"></a>2. 复制某个值至剪贴板</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * v-copy</span></span><br><span class="line"><span class="comment"> * 复制某个值至剪贴板</span></span><br><span class="line"><span class="comment"> * 接收参数：string类型/Ref&lt;string&gt;类型/Reactive&lt;string&gt;类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; Directive, DirectiveBinding &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ElMessage &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span>;</span><br><span class="line"><span class="keyword">interface</span> ElType <span class="keyword">extends</span> HTMLElement &#123;</span><br><span class="line">  <span class="attr">copyData</span>: <span class="built_in">string</span> | <span class="built_in">number</span>;</span><br><span class="line">  __handleClick__: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> directive: Directive = &#123;</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params">el: ElType, binding: DirectiveBinding</span>)</span> &#123;</span><br><span class="line">    el.copyData = binding.value;</span><br><span class="line">    el.addEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">updated</span>(<span class="params">el: ElType, binding: DirectiveBinding</span>)</span> &#123;</span><br><span class="line">    el.copyData = binding.value;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">beforeUnmount</span>(<span class="params">el: ElType</span>)</span> &#123;</span><br><span class="line">    el.removeEventListener(<span class="string">&#x27;click&#x27;</span>, el.__handleClick__);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleClick</span>(<span class="params"><span class="built_in">this</span>: ElType, ev: MouseEvent</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> input = <span class="built_in">document</span>.createElement(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">  input.value = <span class="built_in">this</span>.copyData.toLocaleString();</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(input);</span><br><span class="line">  input.select();</span><br><span class="line">  <span class="built_in">document</span>.execCommand(<span class="string">&#x27;Copy&#x27;</span>);</span><br><span class="line">  <span class="built_in">document</span>.body.removeChild(input);</span><br><span class="line">  ElMessage(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;复制成功&#x27;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> directive;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="3-按钮防抖指令-可扩展至input"><a href="#3-按钮防抖指令-可扩展至input" class="headerlink" title="3. 按钮防抖指令,可扩展至input"></a>3. 按钮防抖指令,可扩展至input</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * v-debounce</span></span><br><span class="line"><span class="comment"> * 按钮防抖指令，可自行扩展至input</span></span><br><span class="line"><span class="comment"> * 接收参数：function类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; Directive, DirectiveBinding &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">interface</span> ElType <span class="keyword">extends</span> HTMLElement &#123;</span><br><span class="line">  <span class="attr">__handleClick__</span>: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> directive: Directive = &#123;</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params">el: ElType, binding: DirectiveBinding</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> binding.value !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(<span class="string">&#x27;callback must be a function&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> timer: NodeJS.Timeout | <span class="literal">null</span> = <span class="literal">null</span>;</span><br><span class="line">    el.__handleClick__ = <span class="function"><span class="keyword">function</span> (<span class="params">e: ElType</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">      &#125;</span><br><span class="line">      timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        binding.value();</span><br><span class="line">      &#125;, <span class="number">200</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    el.addEventListener(<span class="string">&#x27;click&#x27;</span>, el.__handleClick__);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">beforeUnmount</span>(<span class="params">el: ElType</span>)</span> &#123;</span><br><span class="line">    el.removeEventListener(<span class="string">&#x27;click&#x27;</span>, el.__handleClick__);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> directive;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="4-窗口拖拽"><a href="#4-窗口拖拽" class="headerlink" title="4. 窗口拖拽"></a>4. 窗口拖拽</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可基于窗口各种拖拽使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; Directive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">interface</span> ElType <span class="keyword">extends</span> HTMLDivElement &#123;</span><br><span class="line">  <span class="attr">__mouseDown__</span>: <span class="built_in">any</span>;</span><br><span class="line">  __mouseUp__: <span class="built_in">any</span>;</span><br><span class="line">  __mouseMove__: <span class="built_in">any</span>;</span><br><span class="line">  __sizeChange__: <span class="built_in">any</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> DataDialog &#123;</span><br><span class="line">  <span class="attr">x</span>: <span class="built_in">number</span>;</span><br><span class="line">  y: <span class="built_in">number</span>;</span><br><span class="line">  width: <span class="built_in">number</span>;</span><br><span class="line">  height: <span class="built_in">number</span>;</span><br><span class="line">  marginTop?: <span class="built_in">string</span> | <span class="built_in">number</span>;</span><br><span class="line">  top?: <span class="built_in">number</span>;</span><br><span class="line">  bottom?: <span class="built_in">number</span>;</span><br><span class="line">  left?: <span class="built_in">number</span>;</span><br><span class="line">  right?: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> drag: Directive = &#123;</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params">el: ElType, binding</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (binding.value) &#123;</span><br><span class="line">      handleElShow(el);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">updated</span>(<span class="params">el, binding</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (binding.value) &#123;</span><br><span class="line">      handleElShow(el);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      handleElHide(el);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">beforeUnmount</span>(<span class="params">el: ElType</span>)</span> &#123;</span><br><span class="line">    handleElHide(el);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleElShow</span>(<span class="params">el: ElType</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> dialog = el.querySelector(<span class="string">&#x27;.el-dialog&#x27;</span>) <span class="keyword">as</span> HTMLElement;</span><br><span class="line">  <span class="keyword">if</span> (!dialog) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> header = el.querySelector(<span class="string">&#x27;.el-dialog__header&#x27;</span>) <span class="keyword">as</span> HTMLElement;</span><br><span class="line">  <span class="keyword">const</span> dialogMask = el.querySelector(<span class="string">&#x27;.el-overlay&#x27;</span>) <span class="keyword">as</span> HTMLElement;</span><br><span class="line">  dialogMask.style.cssText += <span class="string">&#x27;overflow: hidden;&#x27;</span>;</span><br><span class="line">  header.style.cursor = <span class="string">&#x27;move&#x27;</span>;</span><br><span class="line">  <span class="keyword">let</span> dragStatus = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">let</span> data = &#123;</span><br><span class="line">    <span class="comment">// 数据源，不变部分为：window信息、dialog信息、mouse初始值信息，可变部分为：拖拽坐标位移</span></span><br><span class="line">    <span class="attr">window</span>: &#123;</span><br><span class="line">      <span class="comment">// window信息</span></span><br><span class="line">      <span class="attr">width</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">dialog</span>: &#123;</span><br><span class="line">      <span class="attr">x</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">marginTop</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    &#125; <span class="keyword">as</span> DataDialog, <span class="comment">// dialog信息</span></span><br><span class="line">    <span class="attr">mouse</span>: &#123;</span><br><span class="line">      <span class="comment">// 鼠标初始信息</span></span><br><span class="line">      <span class="attr">x</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">drag</span>: &#123;</span><br><span class="line">      <span class="comment">// 拖拽过程信息</span></span><br><span class="line">      <span class="attr">x</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// 所有的监听只为了修改data数据</span></span><br><span class="line">  header.addEventListener(<span class="string">&#x27;mousedown&#x27;</span>, mouseDown);</span><br><span class="line">  <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, mouseMove);</span><br><span class="line">  <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;mouseup&#x27;</span>, mouseUp);</span><br><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;resize&#x27;</span>, sizeChange);</span><br><span class="line">  <span class="comment">// 边界处理，防止拖动位置溢出</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">handlePosition</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (data.mouse.x - data.drag.x &gt;= data.dialog.x) &#123;</span><br><span class="line">      data.drag.x = data.mouse.x - data.dialog.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (data.drag.x - data.mouse.x &gt;= data.window.width - (data.dialog.x + data.dialog.width)) &#123;</span><br><span class="line">      data.drag.x = data.mouse.x + data.window.width - data.dialog.x - data.dialog.width;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (data.mouse.y - data.drag.y &gt;= data.dialog.y) &#123;</span><br><span class="line">      data.drag.y = data.mouse.y - data.dialog.y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (data.drag.y - data.mouse.y &gt;= data.window.height - (data.dialog.y + data.dialog.height)) &#123;</span><br><span class="line">      data.drag.y = data.mouse.y + data.window.height - data.dialog.y - data.dialog.height;</span><br><span class="line">    &#125;</span><br><span class="line">    setPosition();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 根据data来设置拖动后的位置</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">setPosition</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> top = data.drag.y - data.mouse.y + data.dialog.y;</span><br><span class="line">    <span class="keyword">let</span> left = data.drag.x - data.mouse.x + data.dialog.x;</span><br><span class="line">    dialog.style.cssText += <span class="string">`position: absolute; top: calc(<span class="subst">$&#123;top&#125;</span>px - <span class="subst">$&#123;data.dialog.marginTop&#125;</span>); left: <span class="subst">$&#123;left&#125;</span>px;`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">mouseDown</span>(<span class="params">e: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取dialog目前的位置，坐标, 以及屏幕当前的宽高</span></span><br><span class="line">    <span class="comment">// 一切初始数据的获取应该放置于此，避免其他如：宽度修改等一系列的影响</span></span><br><span class="line">    <span class="keyword">if</span> (e.button !== <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    data.window = &#123;</span><br><span class="line">      <span class="attr">width</span>: <span class="built_in">document</span>.body.clientWidth,</span><br><span class="line">      <span class="attr">height</span>: <span class="built_in">document</span>.body.clientHeight,</span><br><span class="line">    &#125;;</span><br><span class="line">    data.dialog = dialog.getBoundingClientRect();</span><br><span class="line">    data.dialog.marginTop = <span class="built_in">window</span>.getComputedStyle(dialog).marginTop;</span><br><span class="line">    data.mouse = &#123;</span><br><span class="line">      <span class="attr">x</span>: e.clientX,</span><br><span class="line">      <span class="attr">y</span>: e.clientY,</span><br><span class="line">    &#125;;</span><br><span class="line">    dragStatus = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">mouseMove</span>(<span class="params">e: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dragStatus) &#123;</span><br><span class="line">      data.drag = &#123;</span><br><span class="line">        <span class="attr">x</span>: e.clientX,</span><br><span class="line">        <span class="attr">y</span>: e.clientY,</span><br><span class="line">      &#125;;</span><br><span class="line">      dialogMask.style.userSelect = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">      handlePosition();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">mouseUp</span>(<span class="params">e: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">    dialogMask.style.userSelect = <span class="string">&#x27;auto&#x27;</span>;</span><br><span class="line">    dragStatus = <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">sizeChange</span>(<span class="params">e: <span class="built_in">any</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// dialog.style.cssText += &#x27;position: static&#x27;;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 方便卸载使用</span></span><br><span class="line">  el.__mouseDown__ = mouseDown;</span><br><span class="line">  el.__mouseUp__ = mouseUp;</span><br><span class="line">  el.__mouseMove__ = mouseMove;</span><br><span class="line">  el.__sizeChange__ = sizeChange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleElHide</span>(<span class="params">el: ElType</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 避免重复开销，卸载所有的监听</span></span><br><span class="line">  <span class="comment">// 解决问题：多次创建新的实例 =》 监听不取消 =》 同时存在多个无用的监听，导致页面卡顿</span></span><br><span class="line">  <span class="built_in">document</span>.removeEventListener(<span class="string">&#x27;mousedown&#x27;</span>, el.__mouseDown__);</span><br><span class="line">  <span class="built_in">document</span>.removeEventListener(<span class="string">&#x27;mousemove&#x27;</span>, el.__mouseMove__);</span><br><span class="line">  <span class="built_in">document</span>.removeEventListener(<span class="string">&#x27;mouseup&#x27;</span>, el.__mouseUp__);</span><br><span class="line">  <span class="built_in">window</span>.removeEventListener(<span class="string">&#x27;resize&#x27;</span>, el.__sizeChange__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> drag;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="5-窗口拖拽2，可自定义父级"><a href="#5-窗口拖拽2，可自定义父级" class="headerlink" title="5. 窗口拖拽2，可自定义父级"></a>5. 窗口拖拽2，可自定义父级</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 支持父级，自定义父级，以及window作为父级</span></span><br><span class="line"><span class="comment"> * 使用示例：</span></span><br><span class="line"><span class="comment"> * 1. v-dragable</span></span><br><span class="line"><span class="comment"> * 2. v-dragable=&quot;&#x27;father&#x27;&quot; // 使用父级作为父级</span></span><br><span class="line"><span class="comment"> * 3. v-dragable=&quot;&#x27;body&#x27;&quot; // 使用body对象作为父级</span></span><br><span class="line"><span class="comment"> * 4. v-dragable=&quot;&#x27;#app&#x27;&quot; // 使用id作为父级</span></span><br><span class="line"><span class="comment"> * 5. v-dragable=&quot;&#x27;.list&#x27;&quot; // 使用class名作为父级</span></span><br><span class="line"><span class="comment"> * 3-5代表所有可被document.querySelector()解析的参数值</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; Directive, DirectiveBinding &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">interface</span> Position &#123;</span><br><span class="line">  <span class="attr">x</span>: <span class="built_in">number</span>;</span><br><span class="line">  y: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> Mouse &#123;</span><br><span class="line">  <span class="attr">down</span>: Position;</span><br><span class="line">  move: Position;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> ElType <span class="keyword">extends</span> HTMLElement &#123;</span><br><span class="line">  <span class="attr">__mouseDown__</span>: <span class="built_in">any</span>;</span><br><span class="line">  __mouseUp__: <span class="built_in">any</span>;</span><br><span class="line">  __mouseMove__: <span class="built_in">any</span>;</span><br><span class="line">  __parentDom__: HTMLElement;</span><br><span class="line">  __position__: Position;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> directive: Directive = &#123;</span><br><span class="line">  <span class="attr">mounted</span>: <span class="function">(<span class="params">el: ElType, binding: DirectiveBinding</span>) =&gt;</span> &#123;</span><br><span class="line">    setParentDom(el, binding, <span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// 子级元素位置处理</span></span><br><span class="line">    <span class="comment">// 1. 获取父子元素当前位置</span></span><br><span class="line">    <span class="keyword">let</span> parentDomRect: DOMRect;</span><br><span class="line">    <span class="keyword">let</span> elDomRect: DOMRect;</span><br><span class="line">    <span class="keyword">let</span> mouseData: Mouse = &#123;</span><br><span class="line">      <span class="attr">down</span>: &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span> &#125;,</span><br><span class="line">      <span class="attr">move</span>: &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">let</span> mouseDown: <span class="built_in">boolean</span> = <span class="literal">false</span>;</span><br><span class="line">    el.__position__ = &#123;</span><br><span class="line">      <span class="attr">x</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">let</span> bodyUserSelect: <span class="built_in">string</span> = <span class="string">&#x27;text&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">handleMouseDown</span>(<span class="params">e: MouseEvent</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (e.button !== <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      mouseData.down = &#123;</span><br><span class="line">        <span class="attr">x</span>: e.clientX,</span><br><span class="line">        <span class="attr">y</span>: e.clientY,</span><br><span class="line">      &#125;;</span><br><span class="line">      mouseDown = <span class="literal">true</span>;</span><br><span class="line">      parentDomRect = el.__parentDom__.getBoundingClientRect();</span><br><span class="line">      elDomRect = el.getBoundingClientRect();</span><br><span class="line">      bodyUserSelect = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;body&#x27;</span>)!.style.userSelect;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(<span class="string">&#x27;body&#x27;</span>)!.style.userSelect = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">handleMouseMove</span>(<span class="params">e: MouseEvent</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!mouseDown) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      mouseData.move = &#123;</span><br><span class="line">        <span class="attr">x</span>: e.clientX,</span><br><span class="line">        <span class="attr">y</span>: e.clientY,</span><br><span class="line">      &#125;;</span><br><span class="line">      setPosition();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">handleMouseUp</span>(<span class="params">e: MouseEvent</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (mouseDown) &#123;</span><br><span class="line">        mouseDown = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">&#x27;body&#x27;</span>)!.style.userSelect = bodyUserSelect;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 用于设置el元素的Position位置</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setPosition</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// 通过几何图形计算更佳，我就是通过几何画图计算出来的当前数据，使用者可以自行计算，得到这两个值</span></span><br><span class="line">      <span class="keyword">const</span> x = mouseData.move.x + elDomRect.x - parentDomRect.x - mouseData.down.x;</span><br><span class="line">      <span class="keyword">const</span> y = mouseData.move.y + elDomRect.y - parentDomRect.y - mouseData.down.y;</span><br><span class="line">      <span class="comment">// 进行x,y坐标边界处理判断</span></span><br><span class="line">      <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        el.__position__.x = <span class="number">0</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; parentDomRect.width - elDomRect.width) &#123;</span><br><span class="line">        el.__position__.x = parentDomRect.width - elDomRect.width;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        el.__position__.x = x;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (y &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        el.__position__.y = <span class="number">0</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (y &gt; parentDomRect.height - elDomRect.height) &#123;</span><br><span class="line">        el.__position__.y = parentDomRect.height - elDomRect.height;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        el.__position__.y = y;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 渲染到真实dom属性上</span></span><br><span class="line">      el.style.cssText += <span class="string">`</span></span><br><span class="line"><span class="string">        position: absolute;</span></span><br><span class="line"><span class="string">        z-index: 100;</span></span><br><span class="line"><span class="string">        left: <span class="subst">$&#123;el.__position__.x&#125;</span>px;</span></span><br><span class="line"><span class="string">        top: <span class="subst">$&#123;el.__position__.y&#125;</span>px;</span></span><br><span class="line"><span class="string">      `</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    el.__mouseDown__ = handleMouseDown;</span><br><span class="line">    el.__mouseMove__ = handleMouseMove;</span><br><span class="line">    el.__mouseUp__ = handleMouseUp;</span><br><span class="line">    <span class="comment">// 2. 监听拖拽事件</span></span><br><span class="line">    el.addEventListener(<span class="string">&#x27;mousedown&#x27;</span>, el.__mouseDown__);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;mousemove&#x27;</span>, el.__mouseMove__);</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">&#x27;mouseup&#x27;</span>, el.__mouseUp__);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">updated</span>(<span class="params">el, binding</span>)</span> &#123;</span><br><span class="line">    setParentDom(el, binding, <span class="literal">true</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">beforeUnmount</span>(<span class="params">el: ElType</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 避免重复开销，卸载所有的监听</span></span><br><span class="line">    <span class="comment">// 解决问题：多次创建新的实例 =》 监听不取消 =》 同时存在多个无用的监听，导致页面性能变差</span></span><br><span class="line">    <span class="built_in">document</span>.removeEventListener(<span class="string">&#x27;mousedown&#x27;</span>, el.__mouseDown__);</span><br><span class="line">    <span class="built_in">document</span>.removeEventListener(<span class="string">&#x27;mousemove&#x27;</span>, el.__mouseMove__);</span><br><span class="line">    <span class="built_in">document</span>.removeEventListener(<span class="string">&#x27;mouseup&#x27;</span>, el.__mouseUp__);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 设置parentDom，供mounted和update使用</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setParentDom</span>(<span class="params">el: ElType, binding: DirectiveBinding, updated: <span class="built_in">boolean</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> array = [&#123; <span class="attr">name</span>: <span class="string">&#x27;father&#x27;</span>, <span class="attr">dom</span>: el.parentElement &#125;];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取父级元素</span></span><br><span class="line">  <span class="keyword">let</span> parentDom: HTMLElement | HTMLBodyElement;</span><br><span class="line">  <span class="comment">// 以下if操作用于确保一定有一个parentDom</span></span><br><span class="line">  <span class="keyword">if</span> (binding.value) &#123;</span><br><span class="line">    <span class="keyword">const</span> findArr = array.find(<span class="function">(<span class="params">arr</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> arr.name === binding.value;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (findArr &amp;&amp; findArr.dom) &#123;</span><br><span class="line">      parentDom = findArr.dom;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      parentDom =</span><br><span class="line">        <span class="built_in">document</span>.querySelector(binding.value) || (array[<span class="number">0</span>].dom <span class="keyword">as</span> HTMLElement) || array[<span class="number">1</span>].dom;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    parentDom = (array[<span class="number">0</span>].dom <span class="keyword">as</span> HTMLElement) || array[<span class="number">1</span>].dom;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> parentDomRect = parentDom.getBoundingClientRect();</span><br><span class="line">  <span class="keyword">const</span> elDomRect = el.getBoundingClientRect();</span><br><span class="line">  <span class="comment">// 把以前的样式重置一下</span></span><br><span class="line">  <span class="keyword">if</span> (el.__parentDom__) &#123;</span><br><span class="line">    el.__parentDom__.style.position = <span class="string">&#x27;static&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  el.__parentDom__ = parentDom;</span><br><span class="line">  el.__parentDom__.style.position = <span class="string">&#x27;relative&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (updated) &#123;</span><br><span class="line">    el.__position__ = &#123;</span><br><span class="line">      <span class="attr">x</span>: elDomRect.x - parentDomRect.x,</span><br><span class="line">      <span class="attr">y</span>: elDomRect.y - parentDomRect.y,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// return</span></span><br><span class="line">    el.style.cssText += <span class="string">`</span></span><br><span class="line"><span class="string">      position: absolute;</span></span><br><span class="line"><span class="string">      z-index: 100;</span></span><br><span class="line"><span class="string">      left: <span class="subst">$&#123;el.__position__.x&#125;</span>px;</span></span><br><span class="line"><span class="string">      top: <span class="subst">$&#123;el.__position__.y&#125;</span>px;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> directive;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="6-长按指令，长按时触发事件"><a href="#6-长按指令，长按时触发事件" class="headerlink" title="6. 长按指令，长按时触发事件"></a>6. 长按指令，长按时触发事件</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * v-longpress</span></span><br><span class="line"><span class="comment"> * 长按指令，长按时触发事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; Directive, DirectiveBinding &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> directive: Directive = &#123;</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params">el: HTMLElement, binding: DirectiveBinding</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> binding.value !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="string">&#x27;callback must be a function&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 定义变量</span></span><br><span class="line">    <span class="keyword">let</span> pressTimer: <span class="built_in">any</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 创建计时器（ 2秒后执行函数 ）</span></span><br><span class="line">    <span class="keyword">let</span> start = <span class="function">(<span class="params">e: MouseEvent | TouchEvent</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (e.button) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.type === <span class="string">&#x27;click&#x27;</span> &amp;&amp; e.button !== <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (pressTimer === <span class="literal">null</span>) &#123;</span><br><span class="line">        pressTimer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          handler(e);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 取消计时器</span></span><br><span class="line">    <span class="keyword">let</span> cancel = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (pressTimer !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(pressTimer);</span><br><span class="line">        pressTimer = <span class="literal">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 运行函数</span></span><br><span class="line">    <span class="keyword">const</span> handler = <span class="function">(<span class="params">e: MouseEvent | TouchEvent</span>) =&gt;</span> &#123;</span><br><span class="line">      binding.value(e);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 添加事件监听器</span></span><br><span class="line">    el.addEventListener(<span class="string">&#x27;mousedown&#x27;</span>, start);</span><br><span class="line">    el.addEventListener(<span class="string">&#x27;touchstart&#x27;</span>, start);</span><br><span class="line">    <span class="comment">// 取消计时器</span></span><br><span class="line">    el.addEventListener(<span class="string">&#x27;click&#x27;</span>, cancel);</span><br><span class="line">    el.addEventListener(<span class="string">&#x27;mouseout&#x27;</span>, cancel);</span><br><span class="line">    el.addEventListener(<span class="string">&#x27;touchend&#x27;</span>, cancel);</span><br><span class="line">    el.addEventListener(<span class="string">&#x27;touchcancel&#x27;</span>, cancel);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> directive;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="7-设置水印效果"><a href="#7-设置水印效果" class="headerlink" title="7. 设置水印效果"></a>7. 设置水印效果</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * v-waterMarker可接收参数，均为非必填</span></span><br><span class="line"><span class="comment"> * &#123; text: &#x27;vue-admin-box&#x27;, font: &#x27;16px Microsoft JhengHei&#x27;, textColor: &#x27;#000&#x27; &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> &#123; Color, FontFamilyProperty, FontProperty &#125; <span class="keyword">from</span> <span class="string">&#x27;csstype&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; Directive, DirectiveBinding &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> directive: Directive = &#123;</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params">el: HTMLElement, binding: DirectiveBinding</span>)</span> &#123;</span><br><span class="line">    binding.value ? binding.value : (binding.value = &#123;&#125;);</span><br><span class="line">    addWaterMarker(binding.value.text, el, binding.value.font, binding.value.textColor);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addWaterMarker</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  str: <span class="built_in">string</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">  parentNode: HTMLElement,</span></span></span><br><span class="line"><span class="params"><span class="function">  font: FontProperty,</span></span></span><br><span class="line"><span class="params"><span class="function">  textColor: Color</span></span></span><br><span class="line"><span class="params"><span class="function"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 水印文字，父元素，字体，文字颜色</span></span><br><span class="line">  <span class="keyword">var</span> can = <span class="built_in">document</span>.createElement(<span class="string">&#x27;canvas&#x27;</span>) <span class="keyword">as</span> HTMLCanvasElement;</span><br><span class="line">  parentNode.appendChild(can);</span><br><span class="line">  can.width = <span class="number">300</span>;</span><br><span class="line">  can.height = <span class="number">225</span>;</span><br><span class="line">  can.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> cans = can.getContext(<span class="string">&#x27;2d&#x27;</span>) <span class="keyword">as</span> CanvasRenderingContext2D;</span><br><span class="line">  cans.rotate((-<span class="number">20</span> * <span class="built_in">Math</span>.PI) / <span class="number">180</span>);</span><br><span class="line">  cans.font = font || <span class="string">&#x27;16px Microsoft JhengHei&#x27;</span>;</span><br><span class="line">  cans.fillStyle = textColor || <span class="string">&#x27;rgba(180, 180, 180, 0.3)&#x27;</span>;</span><br><span class="line">  cans.textAlign = <span class="string">&#x27;left&#x27;</span>;</span><br><span class="line">  cans.textBaseline = <span class="string">&#x27;middle&#x27;</span>;</span><br><span class="line">  cans.fillText(str || <span class="string">&#x27;vue-admin-box&#x27;</span>, can.width / <span class="number">10</span>, can.height / <span class="number">2</span>);</span><br><span class="line">  parentNode.style.backgroundImage = <span class="string">&#x27;url(&#x27;</span> + can.toDataURL(<span class="string">&#x27;image/png&#x27;</span>) + <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> directive;</span><br></pre></td></tr></table></figure>

<hr>
]]></content>
      <categories>
        <category>前端知识积累</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>知识积累</tag>
        <tag>Vue积累</tag>
      </tags>
  </entry>
  <entry>
    <title>国密4加密算法JS版本</title>
    <url>/post/0.html</url>
    <content><![CDATA[<p>国密 4 加密算法，网上多是 JAVA 版本，偶然见到有一个 TS 版本的。为了和后端保持一致的加密算法，需要在前端处理一些加密信息，所以改写为 JS 版本，备份以防之后丢失。</p>
<span id="more"></span>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @描述: 国密4加密算法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Jingtaooo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2022/3/31 11:26 上午</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@FilePath</span>: /src/utils/system/SM4Util.js</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64js <span class="keyword">from</span> <span class="string">&#x27;base64-js&#x27;</span>; <span class="comment">// 用base64-js模块包代替下面的base64js方法，减少代码量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SM4_Context</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.mode = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">this</span>.isPadding = <span class="literal">true</span>;</span><br><span class="line">  <span class="built_in">this</span>.sk = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">32</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stringToByte = <span class="function"><span class="keyword">function</span> (<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> bytes = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">  <span class="keyword">var</span> len, c;</span><br><span class="line">  len = str.length;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    c = str.charCodeAt(i);</span><br><span class="line">    <span class="keyword">if</span> (c &gt;= <span class="number">0x010000</span> &amp;&amp; c &lt;= <span class="number">0x10ffff</span>) &#123;</span><br><span class="line">      bytes.push(((c &gt;&gt; <span class="number">18</span>) &amp; <span class="number">0x07</span>) | <span class="number">0xf0</span>);</span><br><span class="line">      bytes.push(((c &gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x3f</span>) | <span class="number">0x80</span>);</span><br><span class="line">      bytes.push(((c &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x3f</span>) | <span class="number">0x80</span>);</span><br><span class="line">      bytes.push((c &amp; <span class="number">0x3f</span>) | <span class="number">0x80</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c &gt;= <span class="number">0x000800</span> &amp;&amp; c &lt;= <span class="number">0x00ffff</span>) &#123;</span><br><span class="line">      bytes.push(((c &gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x0f</span>) | <span class="number">0xe0</span>);</span><br><span class="line">      bytes.push(((c &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x3f</span>) | <span class="number">0x80</span>);</span><br><span class="line">      bytes.push((c &amp; <span class="number">0x3f</span>) | <span class="number">0x80</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c &gt;= <span class="number">0x000080</span> &amp;&amp; c &lt;= <span class="number">0x0007ff</span>) &#123;</span><br><span class="line">      bytes.push(((c &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x1f</span>) | <span class="number">0xc0</span>);</span><br><span class="line">      bytes.push((c &amp; <span class="number">0x3f</span>) | <span class="number">0x80</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      bytes.push(c &amp; <span class="number">0xff</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> bytes;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SM4</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.SM4_ENCRYPT = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">this</span>.SM4_DECRYPT = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> SboxTable = [</span><br><span class="line">    <span class="number">0xd6</span>, <span class="number">0x90</span>, <span class="number">0xe9</span>, <span class="number">0xfe</span>, <span class="number">0xcc</span>, <span class="number">0xe1</span>, <span class="number">0x3d</span>, <span class="number">0xb7</span>, <span class="number">0x16</span>, <span class="number">0xb6</span>, <span class="number">0x14</span>, <span class="number">0xc2</span>, <span class="number">0x28</span>, <span class="number">0xfb</span>, <span class="number">0x2c</span>, <span class="number">0x05</span>, <span class="number">0x2b</span>, <span class="number">0x67</span>, <span class="number">0x9a</span>, <span class="number">0x76</span>, <span class="number">0x2a</span>, <span class="number">0xbe</span>, <span class="number">0x04</span>, <span class="number">0xc3</span>, <span class="number">0xaa</span>, <span class="number">0x44</span>, <span class="number">0x13</span>, <span class="number">0x26</span>, <span class="number">0x49</span>,</span><br><span class="line">    <span class="number">0x86</span>, <span class="number">0x06</span>, <span class="number">0x99</span>, <span class="number">0x9c</span>, <span class="number">0x42</span>, <span class="number">0x50</span>, <span class="number">0xf4</span>, <span class="number">0x91</span>, <span class="number">0xef</span>, <span class="number">0x98</span>, <span class="number">0x7a</span>, <span class="number">0x33</span>, <span class="number">0x54</span>, <span class="number">0x0b</span>, <span class="number">0x43</span>, <span class="number">0xed</span>, <span class="number">0xcf</span>, <span class="number">0xac</span>, <span class="number">0x62</span>, <span class="number">0xe4</span>, <span class="number">0xb3</span>, <span class="number">0x1c</span>, <span class="number">0xa9</span>, <span class="number">0xc9</span>, <span class="number">0x08</span>, <span class="number">0xe8</span>, <span class="number">0x95</span>, <span class="number">0x80</span>, <span class="number">0xdf</span>,</span><br><span class="line">    <span class="number">0x94</span>, <span class="number">0xfa</span>, <span class="number">0x75</span>, <span class="number">0x8f</span>, <span class="number">0x3f</span>, <span class="number">0xa6</span>, <span class="number">0x47</span>, <span class="number">0x07</span>, <span class="number">0xa7</span>, <span class="number">0xfc</span>, <span class="number">0xf3</span>, <span class="number">0x73</span>, <span class="number">0x17</span>, <span class="number">0xba</span>, <span class="number">0x83</span>, <span class="number">0x59</span>, <span class="number">0x3c</span>, <span class="number">0x19</span>, <span class="number">0xe6</span>, <span class="number">0x85</span>, <span class="number">0x4f</span>, <span class="number">0xa8</span>, <span class="number">0x68</span>, <span class="number">0x6b</span>, <span class="number">0x81</span>, <span class="number">0xb2</span>, <span class="number">0x71</span>, <span class="number">0x64</span>, <span class="number">0xda</span>,</span><br><span class="line">    <span class="number">0x8b</span>, <span class="number">0xf8</span>, <span class="number">0xeb</span>, <span class="number">0x0f</span>, <span class="number">0x4b</span>, <span class="number">0x70</span>, <span class="number">0x56</span>, <span class="number">0x9d</span>, <span class="number">0x35</span>, <span class="number">0x1e</span>, <span class="number">0x24</span>, <span class="number">0x0e</span>, <span class="number">0x5e</span>, <span class="number">0x63</span>, <span class="number">0x58</span>, <span class="number">0xd1</span>, <span class="number">0xa2</span>, <span class="number">0x25</span>, <span class="number">0x22</span>, <span class="number">0x7c</span>, <span class="number">0x3b</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0x78</span>, <span class="number">0x87</span>, <span class="number">0xd4</span>, <span class="number">0x00</span>, <span class="number">0x46</span>, <span class="number">0x57</span>,</span><br><span class="line">    <span class="number">0x9f</span>, <span class="number">0xd3</span>, <span class="number">0x27</span>, <span class="number">0x52</span>, <span class="number">0x4c</span>, <span class="number">0x36</span>, <span class="number">0x02</span>, <span class="number">0xe7</span>, <span class="number">0xa0</span>, <span class="number">0xc4</span>, <span class="number">0xc8</span>, <span class="number">0x9e</span>, <span class="number">0xea</span>, <span class="number">0xbf</span>, <span class="number">0x8a</span>, <span class="number">0xd2</span>, <span class="number">0x40</span>, <span class="number">0xc7</span>, <span class="number">0x38</span>, <span class="number">0xb5</span>, <span class="number">0xa3</span>, <span class="number">0xf7</span>, <span class="number">0xf2</span>, <span class="number">0xce</span>, <span class="number">0xf9</span>, <span class="number">0x61</span>, <span class="number">0x15</span>, <span class="number">0xa1</span>, <span class="number">0xe0</span>,</span><br><span class="line">    <span class="number">0xae</span>, <span class="number">0x5d</span>, <span class="number">0xa4</span>, <span class="number">0x9b</span>, <span class="number">0x34</span>, <span class="number">0x1a</span>, <span class="number">0x55</span>, <span class="number">0xad</span>, <span class="number">0x93</span>, <span class="number">0x32</span>, <span class="number">0x30</span>, <span class="number">0xf5</span>, <span class="number">0x8c</span>, <span class="number">0xb1</span>, <span class="number">0xe3</span>, <span class="number">0x1d</span>, <span class="number">0xf6</span>, <span class="number">0xe2</span>, <span class="number">0x2e</span>, <span class="number">0x82</span>, <span class="number">0x66</span>, <span class="number">0xca</span>, <span class="number">0x60</span>, <span class="number">0xc0</span>, <span class="number">0x29</span>, <span class="number">0x23</span>, <span class="number">0xab</span>, <span class="number">0x0d</span>, <span class="number">0x53</span>,</span><br><span class="line">    <span class="number">0x4e</span>, <span class="number">0x6f</span>, <span class="number">0xd5</span>, <span class="number">0xdb</span>, <span class="number">0x37</span>, <span class="number">0x45</span>, <span class="number">0xde</span>, <span class="number">0xfd</span>, <span class="number">0x8e</span>, <span class="number">0x2f</span>, <span class="number">0x03</span>, <span class="number">0xff</span>, <span class="number">0x6a</span>, <span class="number">0x72</span>, <span class="number">0x6d</span>, <span class="number">0x6c</span>, <span class="number">0x5b</span>, <span class="number">0x51</span>, <span class="number">0x8d</span>, <span class="number">0x1b</span>, <span class="number">0xaf</span>, <span class="number">0x92</span>, <span class="number">0xbb</span>, <span class="number">0xdd</span>, <span class="number">0xbc</span>, <span class="number">0x7f</span>, <span class="number">0x11</span>, <span class="number">0xd9</span>, <span class="number">0x5c</span>,</span><br><span class="line">    <span class="number">0x41</span>, <span class="number">0x1f</span>, <span class="number">0x10</span>, <span class="number">0x5a</span>, <span class="number">0xd8</span>, <span class="number">0x0a</span>, <span class="number">0xc1</span>, <span class="number">0x31</span>, <span class="number">0x88</span>, <span class="number">0xa5</span>, <span class="number">0xcd</span>, <span class="number">0x7b</span>, <span class="number">0xbd</span>, <span class="number">0x2d</span>, <span class="number">0x74</span>, <span class="number">0xd0</span>, <span class="number">0x12</span>, <span class="number">0xb8</span>, <span class="number">0xe5</span>, <span class="number">0xb4</span>, <span class="number">0xb0</span>, <span class="number">0x89</span>, <span class="number">0x69</span>, <span class="number">0x97</span>, <span class="number">0x4a</span>, <span class="number">0x0c</span>, <span class="number">0x96</span>, <span class="number">0x77</span>, <span class="number">0x7e</span>,</span><br><span class="line">    <span class="number">0x65</span>, <span class="number">0xb9</span>, <span class="number">0xf1</span>, <span class="number">0x09</span>, <span class="number">0xc5</span>, <span class="number">0x6e</span>, <span class="number">0xc6</span>, <span class="number">0x84</span>, <span class="number">0x18</span>, <span class="number">0xf0</span>, <span class="number">0x7d</span>, <span class="number">0xec</span>, <span class="number">0x3a</span>, <span class="number">0xdc</span>, <span class="number">0x4d</span>, <span class="number">0x20</span>, <span class="number">0x79</span>, <span class="number">0xee</span>, <span class="number">0x5f</span>, <span class="number">0x3e</span>, <span class="number">0xd7</span>, <span class="number">0xcb</span>, <span class="number">0x39</span>, <span class="number">0x48</span>,</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> FK = [<span class="number">0xa3b1bac6</span>, <span class="number">0x56aa3350</span>, <span class="number">0x677d9197</span>, <span class="number">0xb27022dc</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> CK = [</span><br><span class="line">    <span class="number">0x00070e15</span>, <span class="number">0x1c232a31</span>, <span class="number">0x383f464d</span>, <span class="number">0x545b6269</span>, <span class="number">0x70777e85</span>, <span class="number">0x8c939aa1</span>, <span class="number">0xa8afb6bd</span>, <span class="number">0xc4cbd2d9</span>, <span class="number">0xe0e7eef5</span>, <span class="number">0xfc030a11</span>, <span class="number">0x181f262d</span>, <span class="number">0x343b4249</span>, <span class="number">0x50575e65</span>, <span class="number">0x6c737a81</span>,</span><br><span class="line">    <span class="number">0x888f969d</span>, <span class="number">0xa4abb2b9</span>, <span class="number">0xc0c7ced5</span>, <span class="number">0xdce3eaf1</span>, <span class="number">0xf8ff060d</span>, <span class="number">0x141b2229</span>, <span class="number">0x30373e45</span>, <span class="number">0x4c535a61</span>, <span class="number">0x686f767d</span>, <span class="number">0x848b9299</span>, <span class="number">0xa0a7aeb5</span>, <span class="number">0xbcc3cad1</span>, <span class="number">0xd8dfe6ed</span>, <span class="number">0xf4fb0209</span>,</span><br><span class="line">    <span class="number">0x10171e25</span>, <span class="number">0x2c333a41</span>, <span class="number">0x484f565d</span>, <span class="number">0x646b7279</span>,</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.GET_ULONG_BE = <span class="function"><span class="keyword">function</span> (<span class="params">b, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ((b[i] &amp; <span class="number">0xff</span>) &lt;&lt; <span class="number">24</span>) | ((b[i + <span class="number">1</span>] &amp; <span class="number">0xff</span>) &lt;&lt; <span class="number">16</span>) | ((b[i + <span class="number">2</span>] &amp; <span class="number">0xff</span>) &lt;&lt; <span class="number">8</span>) | (b[i + <span class="number">3</span>] &amp; <span class="number">0xff</span> &amp; <span class="number">0xffffffff</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.PUT_ULONG_BE = <span class="function"><span class="keyword">function</span> (<span class="params">n, b, i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t1 = <span class="number">0xff</span> &amp; (n &gt;&gt; <span class="number">24</span>);</span><br><span class="line">    <span class="keyword">var</span> t2 = <span class="number">0xff</span> &amp; (n &gt;&gt; <span class="number">16</span>);</span><br><span class="line">    <span class="keyword">var</span> t3 = <span class="number">0xff</span> &amp; (n &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">var</span> t4 = <span class="number">0xff</span> &amp; n;</span><br><span class="line">    b[i] = t1 &gt; <span class="number">128</span> ? t1 - <span class="number">256</span> : t1;</span><br><span class="line">    b[i + <span class="number">1</span>] = t2 &gt; <span class="number">128</span> ? t2 - <span class="number">256</span> : t2;</span><br><span class="line">    b[i + <span class="number">2</span>] = t3 &gt; <span class="number">128</span> ? t3 - <span class="number">256</span> : t3;</span><br><span class="line">    b[i + <span class="number">3</span>] = t4 &gt; <span class="number">128</span> ? t4 - <span class="number">256</span> : t4;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.SHL = <span class="function"><span class="keyword">function</span> (<span class="params">x, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x &amp; <span class="number">0xffffffff</span>) &lt;&lt; n;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.ROTL = <span class="function"><span class="keyword">function</span> (<span class="params">x, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">this</span>.SHL(x, n);</span><br><span class="line">    <span class="keyword">var</span> ss = x &gt;&gt; (<span class="number">32</span> - n);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.SHL(x, n) | (x &gt;&gt; (<span class="number">32</span> - n));</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.sm4Lt = <span class="function"><span class="keyword">function</span> (<span class="params">ka</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">var</span> b = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">4</span>);</span><br><span class="line">    <span class="built_in">this</span>.PUT_ULONG_BE(ka, a, <span class="number">0</span>);</span><br><span class="line">    b[<span class="number">0</span>] = <span class="built_in">this</span>.sm4Sbox(a[<span class="number">0</span>]);</span><br><span class="line">    b[<span class="number">1</span>] = <span class="built_in">this</span>.sm4Sbox(a[<span class="number">1</span>]);</span><br><span class="line">    b[<span class="number">2</span>] = <span class="built_in">this</span>.sm4Sbox(a[<span class="number">2</span>]);</span><br><span class="line">    b[<span class="number">3</span>] = <span class="built_in">this</span>.sm4Sbox(a[<span class="number">3</span>]);</span><br><span class="line">    bb = <span class="built_in">this</span>.GET_ULONG_BE(b, <span class="number">0</span>);</span><br><span class="line">    c = bb ^ <span class="built_in">this</span>.ROTL(bb, <span class="number">2</span>) ^ <span class="built_in">this</span>.ROTL(bb, <span class="number">10</span>) ^ <span class="built_in">this</span>.ROTL(bb, <span class="number">18</span>) ^ <span class="built_in">this</span>.ROTL(bb, <span class="number">24</span>);</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.sm4F = <span class="function"><span class="keyword">function</span> (<span class="params">x0, x1, x2, x3, rk</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x0 ^ <span class="built_in">this</span>.sm4Lt(x1 ^ x2 ^ x3 ^ rk);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.sm4CalciRK = <span class="function"><span class="keyword">function</span> (<span class="params">ka</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> bb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> rk = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">var</span> b = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">4</span>);</span><br><span class="line">    <span class="built_in">this</span>.PUT_ULONG_BE(ka, a, <span class="number">0</span>);</span><br><span class="line">    b[<span class="number">0</span>] = <span class="built_in">this</span>.sm4Sbox(a[<span class="number">0</span>]);</span><br><span class="line">    b[<span class="number">1</span>] = <span class="built_in">this</span>.sm4Sbox(a[<span class="number">1</span>]);</span><br><span class="line">    b[<span class="number">2</span>] = <span class="built_in">this</span>.sm4Sbox(a[<span class="number">2</span>]);</span><br><span class="line">    b[<span class="number">3</span>] = <span class="built_in">this</span>.sm4Sbox(a[<span class="number">3</span>]);</span><br><span class="line">    bb = <span class="built_in">this</span>.GET_ULONG_BE(b, <span class="number">0</span>);</span><br><span class="line">    rk = bb ^ <span class="built_in">this</span>.ROTL(bb, <span class="number">13</span>) ^ <span class="built_in">this</span>.ROTL(bb, <span class="number">23</span>);</span><br><span class="line">    <span class="keyword">return</span> rk;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.sm4Sbox = <span class="function"><span class="keyword">function</span> (<span class="params">inch</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = inch &amp; <span class="number">0xff</span>;</span><br><span class="line">    <span class="keyword">var</span> retVal = SboxTable[i];</span><br><span class="line">    <span class="keyword">return</span> retVal &gt; <span class="number">128</span> ? retVal - <span class="number">256</span> : retVal;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.sm4_setkey_enc = <span class="function"><span class="keyword">function</span> (<span class="params">ctx, key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ctx == <span class="literal">null</span>) &#123;</span><br><span class="line">      alert(<span class="string">&#x27;ctx is null!&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (key == <span class="literal">null</span> || key.length != <span class="number">16</span>) &#123;</span><br><span class="line">      alert(<span class="string">&#x27;key error!&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ctx.mode = <span class="built_in">this</span>.SM4_ENCRYPT;</span><br><span class="line">    <span class="built_in">this</span>.sm4_setkey(ctx.sk, key);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.sm4_setkey = <span class="function"><span class="keyword">function</span> (<span class="params">SK, key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> MK = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">var</span> k = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">36</span>);</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    MK[<span class="number">0</span>] = <span class="built_in">this</span>.GET_ULONG_BE(key, <span class="number">0</span>);</span><br><span class="line">    MK[<span class="number">1</span>] = <span class="built_in">this</span>.GET_ULONG_BE(key, <span class="number">4</span>);</span><br><span class="line">    MK[<span class="number">2</span>] = <span class="built_in">this</span>.GET_ULONG_BE(key, <span class="number">8</span>);</span><br><span class="line">    MK[<span class="number">3</span>] = <span class="built_in">this</span>.GET_ULONG_BE(key, <span class="number">12</span>);</span><br><span class="line">    k[<span class="number">0</span>] = MK[<span class="number">0</span>] ^ FK[<span class="number">0</span>];</span><br><span class="line">    k[<span class="number">1</span>] = MK[<span class="number">1</span>] ^ FK[<span class="number">1</span>];</span><br><span class="line">    k[<span class="number">2</span>] = MK[<span class="number">2</span>] ^ FK[<span class="number">2</span>];</span><br><span class="line">    k[<span class="number">3</span>] = MK[<span class="number">3</span>] ^ FK[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</span><br><span class="line">      k[i + <span class="number">4</span>] = k[i] ^ <span class="built_in">this</span>.sm4CalciRK(k[i + <span class="number">1</span>] ^ k[i + <span class="number">2</span>] ^ k[i + <span class="number">3</span>] ^ CK[i]);</span><br><span class="line">      SK[i] = k[i + <span class="number">4</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="built_in">this</span>.padding = <span class="function"><span class="keyword">function</span> (<span class="params">input, mode</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="literal">null</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> ret = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="built_in">this</span>.SM4_ENCRYPT) &#123;</span><br><span class="line">      <span class="keyword">var</span> p = <span class="built_in">parseInt</span>(<span class="number">16</span> - (input.length % <span class="number">16</span>));</span><br><span class="line">      ret = input.slice(<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; p; i++) &#123;</span><br><span class="line">        ret[input.length + i] = p;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> p = input[input.length - <span class="number">1</span>];</span><br><span class="line">      ret = input.slice(<span class="number">0</span>, input.length - p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="built_in">this</span>.sm4_one_round = <span class="function"><span class="keyword">function</span> (<span class="params">sk, input, output</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> ulbuf = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">36</span>);</span><br><span class="line">    ulbuf[<span class="number">0</span>] = <span class="built_in">this</span>.GET_ULONG_BE(input, <span class="number">0</span>);</span><br><span class="line">    ulbuf[<span class="number">1</span>] = <span class="built_in">this</span>.GET_ULONG_BE(input, <span class="number">4</span>);</span><br><span class="line">    ulbuf[<span class="number">2</span>] = <span class="built_in">this</span>.GET_ULONG_BE(input, <span class="number">8</span>);</span><br><span class="line">    ulbuf[<span class="number">3</span>] = <span class="built_in">this</span>.GET_ULONG_BE(input, <span class="number">12</span>);</span><br><span class="line">    <span class="keyword">while</span> (i &lt; <span class="number">32</span>) &#123;</span><br><span class="line">      ulbuf[i + <span class="number">4</span>] = <span class="built_in">this</span>.sm4F(ulbuf[i], ulbuf[i + <span class="number">1</span>], ulbuf[i + <span class="number">2</span>], ulbuf[i + <span class="number">3</span>], sk[i]);</span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.PUT_ULONG_BE(ulbuf[<span class="number">35</span>], output, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">this</span>.PUT_ULONG_BE(ulbuf[<span class="number">34</span>], output, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">this</span>.PUT_ULONG_BE(ulbuf[<span class="number">33</span>], output, <span class="number">8</span>);</span><br><span class="line">    <span class="built_in">this</span>.PUT_ULONG_BE(ulbuf[<span class="number">32</span>], output, <span class="number">12</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.sm4_crypt_ecb = <span class="function"><span class="keyword">function</span> (<span class="params">ctx, input</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (input == <span class="literal">null</span>) &#123;</span><br><span class="line">      alert(<span class="string">&#x27;input is null!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ctx.isPadding &amp;&amp; ctx.mode == <span class="built_in">this</span>.SM4_ENCRYPT) &#123;</span><br><span class="line">      input = <span class="built_in">this</span>.padding(input, <span class="built_in">this</span>.SM4_ENCRYPT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> length = input.length;</span><br><span class="line">    <span class="keyword">var</span> bous = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    <span class="keyword">for</span> (; length &gt; <span class="number">0</span>; length -= <span class="number">16</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> out = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">16</span>);</span><br><span class="line">      <span class="keyword">var</span> ins = input.slice(i * <span class="number">16</span>, <span class="number">16</span> * (i + <span class="number">1</span>));</span><br><span class="line">      <span class="built_in">this</span>.sm4_one_round(ctx.sk, ins, out);</span><br><span class="line">      bous = bous.concat(out);</span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> output = bous;</span><br><span class="line">    <span class="keyword">if</span> (ctx.isPadding &amp;&amp; ctx.mode == <span class="built_in">this</span>.SM4_DECRYPT) &#123;</span><br><span class="line">      output = <span class="built_in">this</span>.padding(output, <span class="built_in">this</span>.SM4_DECRYPT);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; output.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (output[i] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        output[i] = output[i] + <span class="number">256</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> output;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">this</span>.sm4_crypt_cbc = <span class="function"><span class="keyword">function</span> (<span class="params">ctx, iv, input</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (iv == <span class="literal">null</span> || iv.length != <span class="number">16</span>) &#123;</span><br><span class="line">      alert(<span class="string">&#x27;iv error!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (input == <span class="literal">null</span>) &#123;</span><br><span class="line">      alert(<span class="string">&#x27;input is null!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ctx.isPadding &amp;&amp; ctx.mode == <span class="built_in">this</span>.SM4_ENCRYPT) &#123;</span><br><span class="line">      input = <span class="built_in">this</span>.padding(input, <span class="built_in">this</span>.SM4_ENCRYPT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> length = input.length;</span><br><span class="line">    <span class="keyword">var</span> bous = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    <span class="keyword">if</span> (ctx.mode == <span class="built_in">this</span>.SM4_ENCRYPT) &#123;</span><br><span class="line">      <span class="keyword">var</span> k = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (; length &gt; <span class="number">0</span>; length -= <span class="number">16</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> out = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">var</span> out1 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">var</span> ins = input.slice(k * <span class="number">16</span>, <span class="number">16</span> * (k + <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">          out[i] = ins[i] ^ iv[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.sm4_one_round(ctx.sk, out, out1);</span><br><span class="line">        iv = out1.slice(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line">        bous = bous.concat(out1);</span><br><span class="line">        k++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> temp = [];</span><br><span class="line">      <span class="keyword">var</span> k = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (; length &gt; <span class="number">0</span>; length -= <span class="number">16</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> out = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">var</span> out1 = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">var</span> ins = input.slice(k * <span class="number">16</span>, <span class="number">16</span> * (k + <span class="number">1</span>));</span><br><span class="line">        temp = ins.slice(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line">        sm4_one_round(ctx.sk, ins, out);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">          out1[i] = out[i] ^ iv[i];</span><br><span class="line">        &#125;</span><br><span class="line">        iv = temp.slice(<span class="number">0</span>, <span class="number">16</span>);</span><br><span class="line">        bous = bous.concat(out1);</span><br><span class="line">        k++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> output = bous;</span><br><span class="line">    <span class="keyword">if</span> (ctx.isPadding &amp;&amp; ctx.mode == <span class="built_in">this</span>.SM4_DECRYPT) &#123;</span><br><span class="line">      output = <span class="built_in">this</span>.padding(output, <span class="built_in">this</span>.SM4_DECRYPT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; output.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (output[i] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        output[i] = output[i] + <span class="number">256</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> output;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> secretKey = <span class="string">&#x27;w7bqTgHGZH5PD0cy&#x27;</span>;</span><br><span class="line"><span class="comment">// const iv = &#x27;&#x27;;</span></span><br><span class="line"><span class="comment">// const hexString = false;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">encryptData_ECB</span>(<span class="params">plainText</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> sm4 = <span class="keyword">new</span> SM4();</span><br><span class="line">    <span class="keyword">var</span> ctx = <span class="keyword">new</span> SM4_Context();</span><br><span class="line">    ctx.isPadding = <span class="literal">true</span>;</span><br><span class="line">    ctx.mode = sm4.SM4_ENCRYPT;</span><br><span class="line">    <span class="keyword">var</span> keyBytes = stringToByte(secretKey);</span><br><span class="line">    sm4.sm4_setkey_enc(ctx, keyBytes);</span><br><span class="line">    <span class="keyword">var</span> encrypted = sm4.sm4_crypt_ecb(ctx, stringToByte(plainText));</span><br><span class="line">    <span class="keyword">var</span> cipherText = base64js.fromByteArray(encrypted);</span><br><span class="line">    <span class="keyword">if</span> (cipherText != <span class="literal">null</span> &amp;&amp; cipherText.trim().length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      cipherText.replace(<span class="regexp">/(\s*|\t|\r|\n)/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cipherText;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * base64js</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * base64js</span></span><br><span class="line"><span class="comment"> * base64js.toByteArray(d.input)</span></span><br><span class="line"><span class="comment"> * base64js.fromByteArray(c);</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//  (function(r) &#123;</span></span><br><span class="line"><span class="comment">//   if (typeof exports === &quot;object&quot; &amp;&amp; typeof module !== &quot;undefined&quot;) &#123;</span></span><br><span class="line"><span class="comment">//     module.exports = r();</span></span><br><span class="line"><span class="comment">//   &#125; else &#123;</span></span><br><span class="line"><span class="comment">//     if (typeof define === &quot;function&quot; &amp;&amp; define.amd) &#123;</span></span><br><span class="line"><span class="comment">//       define([], r);</span></span><br><span class="line"><span class="comment">//     &#125; else &#123;</span></span><br><span class="line"><span class="comment">//       var e;</span></span><br><span class="line"><span class="comment">//       if (typeof window !== &quot;undefined&quot;) &#123;</span></span><br><span class="line"><span class="comment">//         e = window;</span></span><br><span class="line"><span class="comment">//       &#125; else &#123;</span></span><br><span class="line"><span class="comment">//         if (typeof global !== &quot;undefined&quot;) &#123;</span></span><br><span class="line"><span class="comment">//           e = global;</span></span><br><span class="line"><span class="comment">//         &#125; else &#123;</span></span><br><span class="line"><span class="comment">//           if (typeof self !== &quot;undefined&quot;) &#123;</span></span><br><span class="line"><span class="comment">//             e = self;</span></span><br><span class="line"><span class="comment">//           &#125; else &#123;</span></span><br><span class="line"><span class="comment">//             e = this;</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//       &#125;</span></span><br><span class="line"><span class="comment">//       e.base64js = r();</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;)(function() &#123;</span></span><br><span class="line"><span class="comment">//   var r, e, t;</span></span><br><span class="line"><span class="comment">//   return (function r(e, t, n) &#123;</span></span><br><span class="line"><span class="comment">//     function o(i, a) &#123;</span></span><br><span class="line"><span class="comment">//       if (!t[i]) &#123;</span></span><br><span class="line"><span class="comment">//         if (!e[i]) &#123;</span></span><br><span class="line"><span class="comment">//           var u = typeof require == &quot;function&quot; &amp;&amp; require;</span></span><br><span class="line"><span class="comment">//           if (!a &amp;&amp; u) &#123;</span></span><br><span class="line"><span class="comment">//             return u(i, !0);</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//           if (f) &#123;</span></span><br><span class="line"><span class="comment">//             return f(i, !0);</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//           var d = new Error(&quot;Cannot find module &#x27;&quot; + i + &quot;&#x27;&quot;);</span></span><br><span class="line"><span class="comment">//           throw ((d.code = &quot;MODULE_NOT_FOUND&quot;), d);</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//         var c = (t[i] = &#123; exports: &#123;&#125; &#125;);</span></span><br><span class="line"><span class="comment">//         e[i][0].call(</span></span><br><span class="line"><span class="comment">//           c.exports,</span></span><br><span class="line"><span class="comment">//           function(r) &#123;</span></span><br><span class="line"><span class="comment">//             var t = e[i][1][r];</span></span><br><span class="line"><span class="comment">//             return o(t ? t : r);</span></span><br><span class="line"><span class="comment">//           &#125;,</span></span><br><span class="line"><span class="comment">//           c,</span></span><br><span class="line"><span class="comment">//           c.exports,</span></span><br><span class="line"><span class="comment">//           r,</span></span><br><span class="line"><span class="comment">//           e,</span></span><br><span class="line"><span class="comment">//           t,</span></span><br><span class="line"><span class="comment">//           n</span></span><br><span class="line"><span class="comment">//         );</span></span><br><span class="line"><span class="comment">//       &#125;</span></span><br><span class="line"><span class="comment">//       return t[i].exports;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     var f = typeof require == &quot;function&quot; &amp;&amp; require;</span></span><br><span class="line"><span class="comment">//     for (var i = 0; i &lt; n.length; i++) &#123;</span></span><br><span class="line"><span class="comment">//       o(n[i]);</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     return o;</span></span><br><span class="line"><span class="comment">//   &#125;)(</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//       &quot;/&quot;: [</span></span><br><span class="line"><span class="comment">//         function(r, e, t) &#123;</span></span><br><span class="line"><span class="comment">//           t.byteLength = c;</span></span><br><span class="line"><span class="comment">//           t.toByteArray = v;</span></span><br><span class="line"><span class="comment">//           t.fromByteArray = s;</span></span><br><span class="line"><span class="comment">//           var n = [];</span></span><br><span class="line"><span class="comment">//           var o = [];</span></span><br><span class="line"><span class="comment">//           var f = typeof Uint8Array !== &quot;undefined&quot; ? Uint8Array : Array;</span></span><br><span class="line"><span class="comment">//           var i =</span></span><br><span class="line"><span class="comment">//             &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;;</span></span><br><span class="line"><span class="comment">//           for (var a = 0, u = i.length; a &lt; u; ++a) &#123;</span></span><br><span class="line"><span class="comment">//             n[a] = i[a];</span></span><br><span class="line"><span class="comment">//             o[i.charCodeAt(a)] = a;</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//           o[&quot;-&quot;.charCodeAt(0)] = 62;</span></span><br><span class="line"><span class="comment">//           o[&quot;_&quot;.charCodeAt(0)] = 63;</span></span><br><span class="line"><span class="comment">//           function d(r) &#123;</span></span><br><span class="line"><span class="comment">//             var e = r.length;</span></span><br><span class="line"><span class="comment">//             if (e % 4 &gt; 0) &#123;</span></span><br><span class="line"><span class="comment">//               throw new Error(&quot;Invalid string. Length must be a multiple of 4&quot;);</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             return r[e - 2] === &quot;=&quot; ? 2 : r[e - 1] === &quot;=&quot; ? 1 : 0;</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//           function c(r) &#123;</span></span><br><span class="line"><span class="comment">//             return (r.length * 3) / 4 - d(r);</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//           function v(r) &#123;</span></span><br><span class="line"><span class="comment">//             var e, t, n, i, a;</span></span><br><span class="line"><span class="comment">//             var u = r.length;</span></span><br><span class="line"><span class="comment">//             i = d(r);</span></span><br><span class="line"><span class="comment">//             a = new f((u * 3) / 4 - i);</span></span><br><span class="line"><span class="comment">//             t = i &gt; 0 ? u - 4 : u;</span></span><br><span class="line"><span class="comment">//             var c = 0;</span></span><br><span class="line"><span class="comment">//             for (e = 0; e &lt; t; e += 4) &#123;</span></span><br><span class="line"><span class="comment">//               n =</span></span><br><span class="line"><span class="comment">//                 (o[r.charCodeAt(e)] &lt;&lt; 18) |</span></span><br><span class="line"><span class="comment">//                 (o[r.charCodeAt(e + 1)] &lt;&lt; 12) |</span></span><br><span class="line"><span class="comment">//                 (o[r.charCodeAt(e + 2)] &lt;&lt; 6) |</span></span><br><span class="line"><span class="comment">//                 o[r.charCodeAt(e + 3)];</span></span><br><span class="line"><span class="comment">//               a[c++] = (n &gt;&gt; 16) &amp; 255;</span></span><br><span class="line"><span class="comment">//               a[c++] = (n &gt;&gt; 8) &amp; 255;</span></span><br><span class="line"><span class="comment">//               a[c++] = n &amp; 255;</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             if (i === 2) &#123;</span></span><br><span class="line"><span class="comment">//               n = (o[r.charCodeAt(e)] &lt;&lt; 2) | (o[r.charCodeAt(e + 1)] &gt;&gt; 4);</span></span><br><span class="line"><span class="comment">//               a[c++] = n &amp; 255;</span></span><br><span class="line"><span class="comment">//             &#125; else &#123;</span></span><br><span class="line"><span class="comment">//               if (i === 1) &#123;</span></span><br><span class="line"><span class="comment">//                 n =</span></span><br><span class="line"><span class="comment">//                   (o[r.charCodeAt(e)] &lt;&lt; 10) |</span></span><br><span class="line"><span class="comment">//                   (o[r.charCodeAt(e + 1)] &lt;&lt; 4) |</span></span><br><span class="line"><span class="comment">//                   (o[r.charCodeAt(e + 2)] &gt;&gt; 2);</span></span><br><span class="line"><span class="comment">//                 a[c++] = (n &gt;&gt; 8) &amp; 255;</span></span><br><span class="line"><span class="comment">//                 a[c++] = n &amp; 255;</span></span><br><span class="line"><span class="comment">//               &#125;</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             return a;</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//           function l(r) &#123;</span></span><br><span class="line"><span class="comment">//             return (</span></span><br><span class="line"><span class="comment">//               n[(r &gt;&gt; 18) &amp; 63] +</span></span><br><span class="line"><span class="comment">//               n[(r &gt;&gt; 12) &amp; 63] +</span></span><br><span class="line"><span class="comment">//               n[(r &gt;&gt; 6) &amp; 63] +</span></span><br><span class="line"><span class="comment">//               n[r &amp; 63]</span></span><br><span class="line"><span class="comment">//             );</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//           function h(r, e, t) &#123;</span></span><br><span class="line"><span class="comment">//             var n;</span></span><br><span class="line"><span class="comment">//             var o = [];</span></span><br><span class="line"><span class="comment">//             for (var f = e; f &lt; t; f += 3) &#123;</span></span><br><span class="line"><span class="comment">//               n = (r[f] &lt;&lt; 16) + (r[f + 1] &lt;&lt; 8) + r[f + 2];</span></span><br><span class="line"><span class="comment">//               o.push(l(n));</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             return o.join(&quot;&quot;);</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//           function s(r) &#123;</span></span><br><span class="line"><span class="comment">//             var e;</span></span><br><span class="line"><span class="comment">//             var t = r.length;</span></span><br><span class="line"><span class="comment">//             var o = t % 3;</span></span><br><span class="line"><span class="comment">//             var f = &quot;&quot;;</span></span><br><span class="line"><span class="comment">//             var i = [];</span></span><br><span class="line"><span class="comment">//             var a = 16383;</span></span><br><span class="line"><span class="comment">//             for (var u = 0, d = t - o; u &lt; d; u += a) &#123;</span></span><br><span class="line"><span class="comment">//               i.push(h(r, u, u + a &gt; d ? d : u + a));</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             if (o === 1) &#123;</span></span><br><span class="line"><span class="comment">//               e = r[t - 1];</span></span><br><span class="line"><span class="comment">//               f += n[e &gt;&gt; 2];</span></span><br><span class="line"><span class="comment">//               f += n[(e &lt;&lt; 4) &amp; 63];</span></span><br><span class="line"><span class="comment">//               f += &quot;==&quot;;</span></span><br><span class="line"><span class="comment">//             &#125; else &#123;</span></span><br><span class="line"><span class="comment">//               if (o === 2) &#123;</span></span><br><span class="line"><span class="comment">//                 e = (r[t - 2] &lt;&lt; 8) + r[t - 1];</span></span><br><span class="line"><span class="comment">//                 f += n[e &gt;&gt; 10];</span></span><br><span class="line"><span class="comment">//                 f += n[(e &gt;&gt; 4) &amp; 63];</span></span><br><span class="line"><span class="comment">//                 f += n[(e &lt;&lt; 2) &amp; 63];</span></span><br><span class="line"><span class="comment">//                 f += &quot;=&quot;;</span></span><br><span class="line"><span class="comment">//               &#125;</span></span><br><span class="line"><span class="comment">//             &#125;</span></span><br><span class="line"><span class="comment">//             i.push(f);</span></span><br><span class="line"><span class="comment">//             return i.join(&quot;&quot;);</span></span><br><span class="line"><span class="comment">//           &#125;</span></span><br><span class="line"><span class="comment">//         &#125;,</span></span><br><span class="line"><span class="comment">//         &#123;&#125;,</span></span><br><span class="line"><span class="comment">//       ],</span></span><br><span class="line"><span class="comment">//     &#125;,</span></span><br><span class="line"><span class="comment">//     &#123;&#125;,</span></span><br><span class="line"><span class="comment">//     []</span></span><br><span class="line"><span class="comment">//   )(&quot;/&quot;);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>个人备份</category>
      </categories>
      <tags>
        <tag>备份</tag>
      </tags>
  </entry>
  <entry>
    <title>关于跨域，我想说.....</title>
    <url>/post/9ff3.html</url>
    <content><![CDATA[<p>初始跨域的时候比较费解头疼，所以记录下来自己对跨域的理解。</p>
<span id="more"></span>

<h2 id="什么是跨域？什么是浏览器同源政策？"><a href="#什么是跨域？什么是浏览器同源政策？" class="headerlink" title="什么是跨域？什么是浏览器同源政策？"></a>什么是跨域？什么是浏览器同源政策？</h2><blockquote>
<p> 跨域：<br>​      浏览器可能存放用户信息，为了保护用户信息，禁止非同源请求来获取本网站的信息，为了解决同源限制所作出的行为叫做跨域。<br> 同源政策:<br>   两个ip地址，只有符合以下三个条件时才可以叫做同源，同源的地址之间互相访问不存在跨域问题；<br>   1.协议相同<br>   2.域名相同<br>   3.端口相同<br>   只要有一个条件不符合，就会发生跨域问题。</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//www.baidu.com/a   //http:默认端口是8080</span></span><br><span class="line">https:<span class="comment">//www.baidu/com/b  //https:默认端口是443</span></span><br><span class="line">A.同源 B.不同源，协议不同 C.不同源，端口不同 &#123;D.不同源，协议和端口不同&#125;</span><br></pre></td></tr></table></figure>

<h2 id="跨域方式有哪些？"><a href="#跨域方式有哪些？" class="headerlink" title="跨域方式有哪些？"></a>跨域方式有哪些？</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.open(<span class="string">&quot;get&quot;</span>,<span class="string">&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=%E8%BE%A3%E6%9D%A1&quot;</span>);</span><br><span class="line">xhr.send();</span><br><span class="line"></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">         <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里会显示出现跨域阻止</span></span><br></pre></td></tr></table></figure>

<h3 id="跨域问题的第一种解决方式"><a href="#跨域问题的第一种解决方式" class="headerlink" title="跨域问题的第一种解决方式"></a>跨域问题的第一种解决方式</h3><p>这里以自己搭建的淘宝和京东后台模拟为例</p>
<ul>
<li>1.淘宝</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//淘宝----------前端js代码</span></span><br><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">//这里默认的请求地址是 http://localhost:8080/getInfo</span></span><br><span class="line"><span class="comment">// xhr.open(&quot;get&quot;,&quot;/getInfo&quot;);</span></span><br><span class="line"><span class="comment">//现在想要请求京东的资源</span></span><br><span class="line">xhr.open(<span class="string">&quot;get&quot;</span>,<span class="string">&quot;http://localhost:9000/getInfo&quot;</span>);</span><br><span class="line">xhr.send();</span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">&quot;span&quot;</span>).innerText = xhr.responseText;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//淘宝----------后端js代码</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> web = express();</span><br><span class="line">web.use(express.static(<span class="string">&quot;public&quot;</span>));</span><br><span class="line"></span><br><span class="line">web.get(<span class="string">&quot;/getInfo&quot;</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> goodList = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;雷神电脑&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">9999</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;苹果手机&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">6999</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;耐克球鞋&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">999</span></span><br><span class="line">    &#125;</span><br><span class="line">  ];</span><br><span class="line">  res.send(goodList);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">web.listen(<span class="string">&quot;8080&quot;</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;8080端口启动&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>京东</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//京东----------前端js代码 和淘宝的一致</span></span><br><span class="line"><span class="comment">//京东请求自己网站的数据，没有同源限制也就没有跨域问题</span></span><br><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">  xhr.open(<span class="string">&quot;get&quot;</span>,<span class="string">&quot;/getInfo&quot;</span>);</span><br><span class="line">  xhr.send();</span><br><span class="line">  xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(<span class="string">&quot;span&quot;</span>).innerText = xhr.responseText;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//京东----------后端js代码</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> web = express();</span><br><span class="line">web.use(express.static(<span class="string">&quot;public&quot;</span>));</span><br><span class="line"></span><br><span class="line">web.get(<span class="string">&quot;/getInfo&quot;</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//-------------------------------------------------------- </span></span><br><span class="line">  res.set(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;http://localhost:8080&quot;</span>)</span><br><span class="line">  <span class="comment">//-------------------------------------------------------- </span></span><br><span class="line">  <span class="keyword">const</span> bookList = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;海王&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">99.99</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;海贼王&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">699</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;海尔兄弟&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">111</span></span><br><span class="line">    &#125;</span><br><span class="line">  ];</span><br><span class="line">  res.send(bookList);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">web.listen(<span class="string">&quot;9000&quot;</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;9000端口启动&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在这里，淘宝网站想要请求京东网站的资源时，发生了跨域请求。如果没有解决这个问题是没法请求到京东的数据的。</p>
<p>这里就有了第一种解决的方案，在京东的后端接口中声明，</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">res.set(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;希望可以被请求的地址&quot;</span>)  </span><br><span class="line"><span class="comment">//这里可以写* 代表所有的不同源的网站</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>总结：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">这里请求京东的资源会发生跨域请求,由于浏览器的同源限制，会拦截跨域请求</span><br><span class="line">*  控制台输出：</span><br><span class="line">*    已拦截跨源请求：同源策略禁止读取位于 http:<span class="comment">//localhost:9000/getInfo 的远程资源。</span></span><br><span class="line">*    （原因：CORS 头缺少 <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>）。</span><br><span class="line">*  只需要在对应的接口中设置：</span><br><span class="line">*    res.set(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;希望可以被请求的地址&quot;</span>)  这里可以写* 代表所有的不同源的网站</span><br></pre></td></tr></table></figure>

<h3 id="跨域问题的第二种解决方式"><a href="#跨域问题的第二种解决方式" class="headerlink" title="跨域问题的第二种解决方式"></a>跨域问题的第二种解决方式</h3><blockquote>
<p>问题剖析：</p>
<p>​    跨域问题最根本产生的原因就是浏览器为了保护用户信息而设置了同源限制，只有同源的情况下才可以访问数据。同源限制也只是在浏览器中存在，在app等环境下运行就不会有同源限制，所以只需要想办法让请求发生不在浏览器中就可以。这里可以使用后台来请求外部资源，然后再返回给前端就可以解决跨域问题。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 前端代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">请输入您要查询的关键字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;getInfo()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> keywords = <span class="built_in">document</span>.querySelector(<span class="string">&quot;input&quot;</span>).value;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">    <span class="comment">//现在想要请求动态的资源,链接中的q参数是可变的，传入一个参数给后端</span></span></span><br><span class="line"><span class="javascript">    xhr.open(<span class="string">&quot;get&quot;</span>, <span class="string">&quot;/getInfo?keyWords=&quot;</span> + keywords);</span></span><br><span class="line"><span class="javascript">    xhr.send();</span></span><br><span class="line"><span class="javascript">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">&quot;span&quot;</span>).innerText = xhr.responseText;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> web = express();</span><br><span class="line">web.use(express.static(<span class="string">&quot;public&quot;</span>));</span><br><span class="line"><span class="keyword">const</span> https = <span class="built_in">require</span>(<span class="string">&quot;https&quot;</span>)</span><br><span class="line"></span><br><span class="line">web.get(<span class="string">&quot;/getInfo&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> keywords = req.query.keyWords; <span class="comment">// 这个keywords是一个汉字字符,拼接成的url是带有中文的，需要编码</span></span><br><span class="line">  <span class="keyword">let</span> url = <span class="string">&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=&quot;</span> + keywords;</span><br><span class="line">  <span class="comment">//https请求不能解析带有中文的地址</span></span><br><span class="line">  url = <span class="built_in">encodeURI</span>(url);</span><br><span class="line">  <span class="comment">//在这里请求外部数据</span></span><br><span class="line">  <span class="comment">//请求淘宝的一个搜索关键字的资源</span></span><br><span class="line">  https.get(url, <span class="function"><span class="keyword">function</span> (<span class="params">httpsRes</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> bufferData = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    httpsRes.on(<span class="string">&quot;data&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      bufferData += data;</span><br><span class="line">    &#125;);</span><br><span class="line">    httpsRes.on(<span class="string">&quot;end&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">//此时bufferData是一个buffer类型的数据</span></span><br><span class="line">      bufferData = <span class="built_in">JSON</span>.parse(bufferData);</span><br><span class="line">      <span class="comment">//将拼接到的资源返回给前端</span></span><br><span class="line">      res.send(bufferData);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">web.listen(<span class="string">&quot;8080&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;8080端口启动&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="跨域问题的第三种解决方式"><a href="#跨域问题的第三种解决方式" class="headerlink" title="跨域问题的第三种解决方式"></a>跨域问题的第三种解决方式</h3><blockquote>
<p>在以往的html中，也有请求外部资源的时候</p>
</blockquote>
<p>比如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;地址&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;地址&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;地址&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这些请求都可以请求成功，说明浏览器对于标签的外部资源请求是没有限制的，那么我们使用标签的形式进行请求跨域资源。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">myCallBack</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(data);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//data里面存放了&#123;result:[Array(数据)]&#125;</span></span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=%E8%BE%A3%E6%9D%A1&amp;callback=myCallBack&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>


<blockquote>
<p>在标签中进行跨域请求就不需要在接口中增加一行 res.set(“Access-Control-Allow-Origin”,”允许的对象”)<br>也不需要通过后台的方式进行跨域请求<br>只需要在标签中声明请求的目标资源地址就可以了，更加方便</p>
<p>但是这种方式也有一个问题：<br>    怎么才能得到请求到的资源?<br>    这里需要给请求的资源地址后面添加一个callback 回调函数</p>
</blockquote>
<h3 id="跨域问题的第四个解决方式"><a href="#跨域问题的第四个解决方式" class="headerlink" title="跨域问题的第四个解决方式"></a>跨域问题的第四个解决方式</h3><blockquote>
<p>搭配jquery中的dataType : jsonp解决跨域问题</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./jQuery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">url</span> : <span class="string">&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=%E8%BE%A3%E6%9D%A1&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">type</span> : <span class="string">&quot;get&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">dataType</span> : <span class="string">&quot;jsonP&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">success</span>(<span class="params">res</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(res.result)</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="跨域问题的第五个解决方式（vue）"><a href="#跨域问题的第五个解决方式（vue）" class="headerlink" title="跨域问题的第五个解决方式（vue）"></a>跨域问题的第五个解决方式（vue）</h3><p>下面的例子中创建一个home.vue组件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;sendQuest&quot;&gt;发送跨域请求&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 这里需要安装axios模块 npm install axios</span><br><span class="line">import axios from &quot;axios&quot;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;home&quot;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    sendQuest() &#123;</span><br><span class="line">      // 这里发生了跨域请求，请求不到数据。在config/index中进行配置</span><br><span class="line">      // axios.get(&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=%E9%A6%99%E6%B0%B4&quot;)</span><br><span class="line">      axios.get(&quot;/taoBao/sug?code=utf-8&amp;q=%E9%A6%99%E6%B0%B4&quot;)</span><br><span class="line">      .then(function (data) &#123;</span><br><span class="line">        // 请求成功</span><br><span class="line">        console.log(data);</span><br><span class="line">      &#125;,function (err) &#123;</span><br><span class="line">        // 请求错误</span><br><span class="line">        console.log(err);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;!-- 当点击按钮的时候进行数据跨域请求， --&gt;</span><br></pre></td></tr></table></figure>

<p>在config/index.js/dev/proxyTable中进行配置：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// proxy 代理  table 表  代理表 </span></span><br><span class="line"><span class="comment">// vue当中使用代理表进行跨域  （反向代理）</span></span><br><span class="line"><span class="comment">// 代理表跨域 是把url当中相同的部分截取出来</span></span><br><span class="line"><span class="attr">proxyTable</span>: &#123;</span><br><span class="line">  <span class="string">&#x27;/taoBao&#x27;</span>:&#123;</span><br><span class="line">    <span class="comment">// target目标</span></span><br><span class="line">     <span class="attr">target</span>:<span class="string">&quot;https://suggest.taobao.com&quot;</span> , </span><br><span class="line">    <span class="comment">//  是否改变请求源</span></span><br><span class="line">     <span class="attr">changeOrigin</span>:<span class="literal">true</span> , </span><br><span class="line">    <span class="comment">//  路径重写</span></span><br><span class="line">     <span class="attr">pathRewrite</span>:&#123;</span><br><span class="line">        <span class="string">&#x27;^/taoBao&#x27;</span>:<span class="string">&quot;&quot;</span></span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这样就可以实现vue中的跨域请求</p>
</blockquote>
]]></content>
      <categories>
        <category>前端知识积累</category>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>filter、map、reduce的使用</title>
    <url>/post/4109.html</url>
    <content><![CDATA[<p>记录数组的三个API对比。</p>
<span id="more"></span>

<!-- ############################################## 1. filter、map、reduce的使用 ############################################## -->

<p>直接使用一个小的案例去说明他们的关系：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">111</span>, <span class="number">444</span>, <span class="number">40</span>, <span class="number">50</span>];</span><br><span class="line"><span class="comment">// 对于数据nums现有三个需求：</span></span><br><span class="line"><span class="comment">// 1.取出所有小于100的数字</span></span><br><span class="line"><span class="comment">// 2.将所有小于100的数字进行转化 --乘以2</span></span><br><span class="line"><span class="comment">// 3.将所有的newNums2数字相加得到最后的结果。</span></span><br></pre></td></tr></table></figure>

<h2 id="使用普通-for-循环去处理以上需求"><a href="#使用普通-for-循环去处理以上需求" class="headerlink" title="使用普通 for 循环去处理以上需求"></a>使用普通 for 循环去处理以上需求</h2><blockquote>
<p>需求 1：取出所有小于 100 的数字</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> newNums = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> n <span class="keyword">of</span> nums) &#123;</span><br><span class="line">  <span class="keyword">if</span> (n &lt; <span class="number">100</span>) &#123;</span><br><span class="line">    newNums.push(n);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需求 2： 将所有小于 100 的数字进行转化 –乘以 2</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> newNums2 = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> n <span class="keyword">of</span> newNums) &#123;</span><br><span class="line">  newNums2.push(n * <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需求 3： 将所有的 newNums2 数字相加得到最后的结果。</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> n <span class="keyword">of</span> newNums2) &#123;</span><br><span class="line">  total += n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="filter-map-reduce-完成以上需求"><a href="#filter-map-reduce-完成以上需求" class="headerlink" title="filter / map / reduce 完成以上需求"></a>filter / map / reduce 完成以上需求</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//需求1：取出所有小于100的数字</span></span><br><span class="line">nums.filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//filter中的回调函数有一个要求：必须返回一个boolean值</span></span><br><span class="line">  <span class="comment">//当返回true时，函数内部会自动将本次回调的n加入到一个新的数组中</span></span><br><span class="line">  <span class="comment">//当返回为false时，函数内部会过滤掉这次的n</span></span><br><span class="line">  <span class="keyword">return</span> n &lt; <span class="number">100</span>; <span class="comment">//这里就可以直接满足第一个需求</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//这里会返回一个新的数组，就是包含nums中所有值小于100的新数组</span></span><br><span class="line"><span class="keyword">let</span> newNums = nums.filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n &lt; <span class="number">100</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(newNums); <span class="comment">// [10,20,40,50]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//需求2： 将所有小于100的数字进行转化 --乘以2</span></span><br><span class="line"><span class="keyword">let</span> newNums2 = newNums.map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n * <span class="number">2</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(newNums2); <span class="comment">// [20,40,80,100]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//需求3：将所有的newNums2数字相加得到最后的结果</span></span><br><span class="line"><span class="comment">//reduce作用：对数组中所有的内容进行汇总</span></span><br><span class="line">newNums2.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue, n</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//preValue 是上一次返回的值</span></span><br><span class="line">  <span class="comment">//return 100; //对应下面的过程</span></span><br><span class="line">  <span class="keyword">return</span> preValue + n;</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//reduce(参数1，参数2); 会返回最后汇总的结果; 参数1：整合数据操作、参数2：初始值</span></span><br><span class="line"><span class="comment">//这里面的function会执行4次，</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	第一次： preValue-&gt;0 ; n -&gt; 20;</span></span><br><span class="line"><span class="comment">	第二次： preValue-&gt;100 ; n -&gt;40;</span></span><br><span class="line"><span class="comment">	第二次： preValue-&gt;100 ; n -&gt;80;</span></span><br><span class="line"><span class="comment">	第二次： preValue-&gt;100 ; n -&gt;100;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>计算最终的结果</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> total = nums</span><br><span class="line">  .filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &lt; <span class="number">100</span>;</span><br><span class="line">  &#125;)</span><br><span class="line">  .map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n * <span class="number">2</span>;</span><br><span class="line">  &#125;)</span><br><span class="line">  .reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preValue + n;</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p>这样的话就很好的简化了代码，逻辑也会更加清楚。<br>什么？还是不够简化？那下面的代码呢？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> total = nums</span><br><span class="line">  .filter(<span class="function"><span class="params">n</span> =&gt;</span> n &lt; <span class="number">100</span>)</span><br><span class="line">  .map(<span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>)</span><br><span class="line">  .reduce(<span class="function">(<span class="params">preValue, n</span>) =&gt;</span> preValue + n);</span><br><span class="line"><span class="built_in">console</span>.log(total); <span class="comment">// total = 240;</span></span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote>
<p>filter: 对数组进行过滤，当返回值为 true 时，才会返回当前处理的元素。</p>
</blockquote>
<blockquote>
<p>map: 映射，可以对数组中每个元素进行操作，并逐一返回，生成一个新的数组。</p>
</blockquote>
<blockquote>
<p>reduce: 接收一个函数作为累加器，数组中的每个值（从左到右）开始合并，最终返回一个值。<br>reduce 可接收的参数: reduce((参数 1,参数 2,参数 3,参数 4) =&gt; {}, 参数 5)<br>&nbsp;&nbsp;参数 1. previousValue(上一次调用回调函数返回的值，或者是提供的初始值（initialValue）)<br>&nbsp;&nbsp;参数 2. currentValue(数组中当前被处理的元素)<br>&nbsp;&nbsp;参数 3. index（当前元素在数组中的索引）<br>&nbsp;&nbsp;参数 4. array（调用 reduce 的数组）<br>并且 reduce 可以传入一个初始值（参数 5），初始值的格式随意定义，如果不传，默认是 previousValue</p>
</blockquote>
<!-- *** -->
<!-- ############################################## 1. end ############################################## -->
]]></content>
      <categories>
        <category>前端知识积累</category>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>前端开发</tag>
        <tag>知识积累</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo + volantis 搭建个人博客?</title>
    <url>/post/9487.html</url>
    <content><![CDATA[<p>使用hexo快速搭建个人博客</p>
<span id="more"></span>

<p><strong>搭建博客的框架很多，个人比较偏向于hexo框架：</strong></p>
<ul>
<li>hexo只需要专注于写文档而不需要过分担心别的问题。</li>
<li>hexo比较成熟，如果遇到问题也可以得到很好的解决。</li>
<li>hexo使用github pages进行部署，不需要购买自己的服务器就可以部署到线上。</li>
<li>hexo有很好的主题，如：volantis， yilia….</li>
</ul>
<p><a href="https://hexo.io/zh-cn/">hexo中文网站</a>      <a href="https://volantis.js.org/">volantis主题官方文档</a></p>
<h3 id="1-搭建hexo环境"><a href="#1-搭建hexo环境" class="headerlink" title="1. 搭建hexo环境"></a>1. 搭建hexo环境</h3><p> <strong>hexo是基于node开发的，首先需要安装node ，其次如果想要部署到github pages 需要安装git</strong></p>
<figure class="highlight powershell"><figcaption><span><1>安装淘宝镜像</span></figcaption><table><tr><td class="code"><pre><span class="line">sudo npm install <span class="literal">-g</span> cnpm -<span class="literal">-registry</span>=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><figcaption><span><2>安装hexo-cli</span></figcaption><table><tr><td class="code"><pre><span class="line">sudo cnpm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><figcaption><span><3>检查是否安装成功</span></figcaption><table><tr><td class="code"><pre><span class="line">hexo <span class="literal">-v</span></span><br></pre></td></tr></table></figure>


<h3 id="2-创建hexo项目"><a href="#2-创建hexo项目" class="headerlink" title="2. 创建hexo项目"></a>2. 创建hexo项目</h3><p><strong>首先创建一个空的文件夹用于存放hexo项目代码，并在创建的目录中打开终端</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mkdir &lt;floder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;floder&gt;</span><br><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">// 或者直接借助hexo去实现</span><br><span class="line"></span><br><span class="line">hexo init &lt;floder&gt; // 这里hexo会自动创建文件夹并初始化项目</span><br></pre></td></tr></table></figure>

<p><strong>安装依赖</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>


<h3 id="3-启动项目"><a href="#3-启动项目" class="headerlink" title="3. 启动项目"></a>3. 启动项目</h3><p><strong>启动项目常用的命令</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo clean // 清除项目中的临时文件</span><br><span class="line">hexo g   // OR  hexo generate 生成临时文件</span><br><span class="line">hexo s   // OR  hexo <span class="built_in">start</span>  启动项目</span><br></pre></td></tr></table></figure>

<p><strong>此时页面可以看到一个默认的博客模板并且有一篇默认的hello world 文章</strong></p>
<h3 id="4-新建一篇文章"><a href="#4-新建一篇文章" class="headerlink" title="4. 新建一篇文章"></a>4. 新建一篇文章</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new &quot;如何搭建个人博客&quot;</span><br></pre></td></tr></table></figure>

<h3 id="5-切换自己喜欢的主题"><a href="#5-切换自己喜欢的主题" class="headerlink" title="5. 切换自己喜欢的主题"></a>5. 切换自己喜欢的主题</h3><p><strong>这里以Volantis主题为例，具体的主题需要参照具体的官方文档来做</strong></p>
<ul>
<li><p><strong>下载主题插件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-theme-volantis </span><br></pre></td></tr></table></figure></li>
<li><p><strong>修改_config.yml中的 <span style="color:rgb(205,0,0)">theme</span> 字段为volantis</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">volantis</span></span><br></pre></td></tr></table></figure></li>
<li><p><strong>安装 Hexo 搜索的依赖包</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-generator-search hexo-generator-json-content</span><br></pre></td></tr></table></figure></li>
<li><p><strong>安装 Stylus 渲染器</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-renderer-stylus</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>这样就可以看到精美的主题啦，之后的细节慢慢去调试成自己喜欢的样子（参考对应的官方文档）</strong></p>
<h3 id="6-部署到github-pages"><a href="#6-部署到github-pages" class="headerlink" title="6. 部署到github pages"></a>6. 部署到github pages</h3><p>第一步： 在github上新建一个仓库，仓库的名字为：&lt;用户名&gt;.github.io  （必须）</p>
<p>第二步： 修改项目根目录下的_config.yml中的 <span style="color:rgb(205,0,0)">deploy</span> 字段为：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">//</span> <span class="string">这里修改成自己的github仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>第三步： 将代码部署到github pages </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g // OR hexo generate</span><br><span class="line">hexo d // OR hexo deploy</span><br></pre></td></tr></table></figure>
<p>此时控制台会报错：<span style="color:rgb(255,0,0)">ERROR</span> Deployer not found: git<br>这是因为项目缺少git部署的插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>
<p>执行以上的语句即可～～～～～～～然后重复第三步<br>此时就可以看到git仓库中已经有了一部分代码,神奇的是：<br>此时去访问：&lt;用户名&gt;.github.io 就可以看到线上的博客样式了。</p>
<a href="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/github.png" title="" target="">github pages demo, JingTao-Li.github.io,</a>


<h3 id="7-修改github-page-为自定义的域名"><a href="#7-修改github-page-为自定义的域名" class="headerlink" title="7. 修改github page 为自定义的域名"></a>7. 修改github page 为自定义的域名</h3><p><img src="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/my-yuming.png" alt="我的域名"><br><strong>点击解析，添加对应的IP地址和CNAME</strong><br><img src="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/yuming-parse.png" alt="我的域名解析设置"><br>然后在当前项目的 source/ 目录下创建一个名叫 CNAME 的文件，里面的内容就是你的域名地址。接着重新部署一下就可以了。</p>
<h3 id="8-如何在项目中引入本地图片"><a href="#8-如何在项目中引入本地图片" class="headerlink" title="8. 如何在项目中引入本地图片"></a>8. 如何在项目中引入本地图片</h3><p><strong>第一步：</strong>安装插件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p><strong>第二步：</strong>打开根目录下的 _config.yml 文件，修改 <span style="color:rgb(205,0,0)">post_asset_folder</span> 字段为 <strong>true</strong></p>
<p><strong>第三步：</strong>打开 /node_modules/hexo-asset-image/index.js 文件，替换为以下代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="built_in">String</span>(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">        <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">    <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">            <span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">            <span class="keyword">var</span> src = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;</span><br><span class="line">               !<span class="regexp">/^\s*\//</span>.test(src)) &#123;</span><br><span class="line">              <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">              <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">              <span class="keyword">var</span> linkArray = link.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">var</span> srcArray = src.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">                srcArray.shift();</span><br><span class="line">              src = srcArray.join(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">              $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class="line">              <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info($(<span class="built_in">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><strong>第四步：</strong>之后在新建一个新的文档内容的时候会自动生成一个同名文件夹，里面就可以放本页面需要的图片源文件，在需要的地方引入：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">这是代替图片的文字，随便写</span>](<span class="link">图片名字</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>搭建个人博客</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/post/3eeb.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
