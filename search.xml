<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JS常用工具类汇总(持续更新....)</title>
    <url>/post/535a.html</url>
    <content><![CDATA[<p>整理项目开发中经常使用的js片段</p>
<span id="more"></span>


<!-- ############################################ 2.封装一个函数：创建a标签并打开新网页 ############################################ -->

<h3 id="创建a标签-打开新页面"><a href="#创建a标签-打开新页面" class="headerlink" title="创建a标签,打开新页面"></a>创建a标签,打开新页面</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建a标签,打开新页面 openURL()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>url 目标地址</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">openURL</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> aLabel = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">  <span class="comment">//设置链接</span></span><br><span class="line">  aLabel.setAttribute(<span class="string">&#x27;href&#x27;</span>, url);</span><br><span class="line">  <span class="comment">//新窗口打开链接</span></span><br><span class="line">  aLabel.setAttribute(<span class="string">&#x27;target&#x27;</span>, <span class="string">&#x27;_blank&#x27;</span>);</span><br><span class="line">  <span class="comment">//设置标签ID</span></span><br><span class="line">  aLabel.setAttribute(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;reportpoint&#x27;</span>);</span><br><span class="line">  <span class="comment">// 防止反复添加</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&#x27;reportpoint&#x27;</span>)) &#123;</span><br><span class="line">    <span class="built_in">document</span>.body.removeChild(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;reportpoint&#x27;</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(aLabel);</span><br><span class="line">  aLabel.click();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- ############################################ 2.end ############################################ -->

<!-- ############################################ 3.封装防抖函数 ############################################ -->

<h3 id="防抖函数"><a href="#防抖函数" class="headerlink" title="防抖函数"></a>防抖函数</h3><p>防抖函数的原理就是通过延时器控制用户在短时间内进行重复操作的时候取消上一次操作</p>
<figure class="highlight js"><figcaption><span>防抖函数</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防抖函数 debounce()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;function&#125;</span> </span>fn 事件触发的操作</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>delay 多少毫秒内连续触发事件，不会执行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;Function&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span> ;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="built_in">this</span> ; <span class="comment">// 注意this指向</span></span><br><span class="line">    args = <span class="built_in">arguments</span>; <span class="comment">// 拿到函数的入参</span></span><br><span class="line"></span><br><span class="line">    timer &amp;&amp; <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      fn.apply(self, args);</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 假设现有以下点击事件，clickEvent()</span></span><br><span class="line"><span class="keyword">let</span> input1 = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;input1&#x27;</span>);</span><br><span class="line">input1.addEventListener(<span class="string">&#x27;keyup&#x27;</span>,debounce(action1,<span class="number">1000</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">action1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(input1.value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- ############################################ 3.end ############################################ -->

<!-- ############################################ 4.封装节流函数 ############################################ -->

<h3 id="节流函数"><a href="#节流函数" class="headerlink" title="节流函数"></a>节流函数</h3><p>节流函数的原理就是通过控制延时器,当高频事件触发，n秒内只会执行一次</p>
<figure class="highlight js"><figcaption><span>节流函数</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节流函数 throttle()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;function&#125;</span> </span>fn 事件触发的操作</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>delay 多少毫秒内连续触发事件，只会执行一次</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;Function&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn, delay</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span> ;</span><br><span class="line">  <span class="keyword">let</span> flag = <span class="literal">true</span> ; <span class="comment">// 当前是否正在执行...</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!flag) <span class="keyword">return</span></span><br><span class="line">    flag = <span class="literal">false</span>; </span><br><span class="line">    <span class="keyword">let</span> self = <span class="built_in">this</span> ; <span class="comment">// 注意this指向</span></span><br><span class="line">    args = <span class="built_in">arguments</span>; <span class="comment">// 拿到函数的入参</span></span><br><span class="line"></span><br><span class="line">    timer &amp;&amp; <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      flag = <span class="literal">true</span>; <span class="comment">// 时间到了，可以继续执行下一次事件</span></span><br><span class="line">      fn.apply(self, args);</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用的规则同 <a href='#防抖函数'> 防抖函数 </a></p>
<hr>
<!-- ############################################ 4.end ############################################ -->

<!-- #################################### 5.将字符串运行成js脚本的几种方式 #################################### -->

<h3 id="将字符串运行成js脚本的几种方式"><a href="#将字符串运行成js脚本的几种方式" class="headerlink" title="将字符串运行成js脚本的几种方式"></a>将字符串运行成js脚本的几种方式</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="built_in">eval</span>(<span class="string">&#x27;字符串&#x27;</span>)</span><br><span class="line"><span class="number">2.</span> <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">&#x27;字符串&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> <span class="built_in">setTimeout</span>(<span class="string">&#x27;字符串&#x27;</span>, <span class="number">1000</span>)</span><br><span class="line"><span class="number">4.</span> <span class="built_in">setInterval</span>(<span class="string">&#x27;字符串&#x27;</span>, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 5.end #################################### -->

<!-- #################################### 6.浏览器复制内容到剪切板 #################################### -->

<h3 id="浏览器复制内容到剪切板"><a href="#浏览器复制内容到剪切板" class="headerlink" title="浏览器复制内容到剪切板"></a>浏览器复制内容到剪切板</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 浏览器复制内容到剪切板 copyText()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>text 需要复制的内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> copyText = <span class="function">(<span class="params">text</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> range = <span class="built_in">document</span>.createRange();</span><br><span class="line">  <span class="keyword">var</span> copyDOM = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">  copyDOM.innerHTML = text;</span><br><span class="line">  <span class="built_in">window</span>.getSelection().removeAllRanges();</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(copyDOM)</span><br><span class="line">  range.selectNode(copyDOM);</span><br><span class="line">  <span class="built_in">window</span>.getSelection().addRange(range);</span><br><span class="line">  <span class="keyword">var</span> successful = <span class="built_in">document</span>.execCommand(<span class="string">&#x27;copy&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span>(successful)&#123;</span><br><span class="line">    <span class="comment">// 复制成功到剪切板</span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 复制失败，一般是因为浏览器不支持复制</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">document</span>.body.removeChild(copyDOM)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 6.end #################################### -->

<!-- #################################### 7.取随机字符串 #################################### -->

<h3 id="取随机字符串"><a href="#取随机字符串" class="headerlink" title="取随机字符串"></a>取随机字符串</h3><p>取随机字符串根据业务的不同会有不一样的取值方式，用作签名的一部分、用做随机密码….<br>这里我采用的是获取长度不定、去除容易混淆的字符oOLl,9gq,Vv,Uu,I1的随机位数的随机字符</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取随机字符串 randomString()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>len 随机字符串的长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="variable">null</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomString</span>(<span class="params">len</span>) </span>&#123;</span><br><span class="line">  len = len || <span class="number">32</span>; <span class="comment">// 默认随机生成32位长度字符串</span></span><br><span class="line">  <span class="keyword">var</span> $chars = <span class="string">&#x27;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&#x27;</span>;    <span class="comment">/****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/</span></span><br><span class="line">  <span class="keyword">var</span> maxPos = $chars.length;</span><br><span class="line">  <span class="keyword">var</span> randomStr = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    randomStr += $chars.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * maxPos));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> randomStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 7.end #################################### -->

<!-- #################################### 8.异步加载一段js脚本 #################################### -->

<h3 id="异步加载一段js脚本"><a href="#异步加载一段js脚本" class="headerlink" title="异步加载一段js脚本"></a>异步加载一段js脚本</h3><p>如： 异步引入网页悬浮脚本、异步引入高德地图、腾讯地图等。</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description </span>异步加载  一段js放在 header</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;object&#125;</span> <span class="variable">url</span></span> - js 的 url</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;function&#125;</span> <span class="variable">callback</span></span> - 成功回调</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123; promise&lt;any&gt;&#125;</span></span>&#125; promise</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> loadScript = <span class="function">(<span class="params">url: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> script: <span class="built_in">any</span> = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>)</span><br><span class="line">      script.type = <span class="string">&#x27;text/javascript&#x27;</span></span><br><span class="line">      <span class="keyword">if</span> (script.readyState) &#123;</span><br><span class="line">        <span class="comment">//IE</span></span><br><span class="line">        script.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (</span><br><span class="line">            script.readyState == <span class="string">&#x27;loaded&#x27;</span> ||</span><br><span class="line">            script.readyState == <span class="string">&#x27;complete&#x27;</span></span><br><span class="line">          ) &#123;</span><br><span class="line">            script.onreadystatechange = <span class="literal">null</span></span><br><span class="line">            <span class="built_in">Promise</span>.resolve(<span class="number">0</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//Others: Firefox, Safari, Chrome, and Opera</span></span><br><span class="line">        script.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">Promise</span>.resolve(<span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      script.src = url</span><br><span class="line">      <span class="built_in">document</span>.body.appendChild(script)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">      <span class="built_in">Promise</span>.reject(e)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 8.end #################################### -->

<!-- #################################### 9.获取页面高度 #################################### -->

<h3 id="获取页面高度"><a href="#获取页面高度" class="headerlink" title="获取页面高度"></a>获取页面高度</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get page height</span></span><br><span class="line"><span class="keyword">const</span> getPageHeight = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> g = <span class="built_in">document</span></span><br><span class="line">  <span class="keyword">const</span> a = g.body</span><br><span class="line">  <span class="keyword">const</span> f = g.documentElement</span><br><span class="line">  <span class="keyword">const</span> d = g.compatMode === <span class="string">&#x27;BackCompat&#x27;</span> ? a : g.documentElement</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.max(f.scrollHeight, a.scrollHeight, d.clientHeight)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 9.end #################################### -->

<!-- #################################### 10.获取页面可视高度 #################################### -->

<h3 id="获取页面可视高度"><a href="#获取页面可视高度" class="headerlink" title="获取页面可视高度"></a>获取页面可视高度</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get page view height</span></span><br><span class="line"><span class="keyword">const</span> getPageViewHeight = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> d = <span class="built_in">document</span></span><br><span class="line">  <span class="keyword">const</span> a = d.compatMode === <span class="string">&#x27;BackCompat&#x27;</span> ? d.body : d.documentElement</span><br><span class="line">  <span class="keyword">return</span> a.clientHeight</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 10.end #################################### -->

<!-- #################################### 11.获取页面可视宽度 #################################### -->

<h3 id="获取页面可视宽度"><a href="#获取页面可视宽度" class="headerlink" title="获取页面可视宽度"></a>获取页面可视宽度</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get page view width</span></span><br><span class="line"><span class="keyword">const</span> getPageViewWidth = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> d = <span class="built_in">document</span></span><br><span class="line">  <span class="keyword">const</span> a = d.compatMode === <span class="string">&#x27;BackCompat&#x27;</span> ? d.body : d.documentElement</span><br><span class="line">  <span class="keyword">return</span> a.clientWidth</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 11.end #################################### -->

<!-- #################################### 12.获取页面宽度 #################################### -->

<h3 id="获取页面宽度"><a href="#获取页面宽度" class="headerlink" title="获取页面宽度"></a>获取页面宽度</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get page width</span></span><br><span class="line"><span class="keyword">const</span> getPageWidth = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> g = <span class="built_in">document</span></span><br><span class="line">  <span class="keyword">const</span> a = g.body</span><br><span class="line">  <span class="keyword">const</span> f = g.documentElement</span><br><span class="line">  <span class="keyword">const</span> d = g.compatMode === <span class="string">&#x27;BackCompat&#x27;</span> ? a : g.documentElement</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Math</span>.max(f.scrollWidth, a.scrollWidth, d.clientWidth)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 12.end #################################### -->

<!-- #################################### 13.判断当前设备 #################################### -->

<h3 id="判断当前设备"><a href="#判断当前设备" class="headerlink" title="判断当前设备"></a>判断当前设备</h3><h4 id="是否为安卓设备"><a href="#是否为安卓设备" class="headerlink" title="是否为安卓设备"></a>是否为安卓设备</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isAndroidMobileDevice = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="regexp">/android/i</span>.test(navigator.userAgent.toLowerCase())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="是否为苹果设备"><a href="#是否为苹果设备" class="headerlink" title="是否为苹果设备"></a>是否为苹果设备</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isAppleMobileDevice = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="regexp">/iphone|ipod|ipad|Macintosh/i</span>.test(navigator.userAgent.toLowerCase())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="是否为iPhoneX"><a href="#是否为iPhoneX" class="headerlink" title="是否为iPhoneX"></a>是否为iPhoneX</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isIphonex = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// X XS, XS Max, XR</span></span><br><span class="line">  <span class="keyword">const</span> xSeriesConfig = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">devicePixelRatio</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">375</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">812</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">devicePixelRatio</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">414</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">896</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">devicePixelRatio</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">width</span>: <span class="number">414</span>,</span><br><span class="line">      <span class="attr">height</span>: <span class="number">896</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span> !== <span class="string">&#x27;undefined&#x27;</span> &amp;&amp; <span class="built_in">window</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> isIOS = <span class="regexp">/iphone/gi</span>.test(<span class="built_in">window</span>.navigator.userAgent)</span><br><span class="line">    <span class="keyword">if</span> (!isIOS) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="keyword">const</span> &#123; devicePixelRatio, screen &#125; = <span class="built_in">window</span></span><br><span class="line">    <span class="keyword">const</span> &#123; width, height &#125; = screen</span><br><span class="line">    <span class="keyword">return</span> xSeriesConfig.some(</span><br><span class="line">      <span class="function">(<span class="params">item</span>) =&gt;</span></span><br><span class="line">        item.devicePixelRatio === devicePixelRatio &amp;&amp;</span><br><span class="line">        item.width === width &amp;&amp;</span><br><span class="line">        item.height === height</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="是否为手机设备"><a href="#是否为手机设备" class="headerlink" title="是否为手机设备"></a>是否为手机设备</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> isMobileUserAgent = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="regexp">/iphone|ipod|android.*mobile|windows.*phone|blackberry.*mobile/i</span>.test(</span><br><span class="line">    <span class="built_in">window</span>.navigator.userAgent.toLowerCase()</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 13.end #################################### -->

<!-- #################################### 14.设置cookie #################################### -->

<h3 id="设置cookie"><a href="#设置cookie" class="headerlink" title="设置cookie"></a>设置cookie</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description </span>设置 cookie</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params <span class="type">&#123;string&#125;</span> <span class="variable">cookie</span></span> -键名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params <span class="type">&#123;any&#125;</span> <span class="variable">value</span></span> -存入的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@params <span class="type">&#123;Hours&#125;</span> <span class="variable">number</span></span> -有效期限</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> setCookie = <span class="function">(<span class="params">name: <span class="built_in">string</span>, value: <span class="built_in">any</span>, Hours: <span class="built_in">number</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">  <span class="keyword">const</span> offset = <span class="number">8</span></span><br><span class="line">  <span class="keyword">const</span> utc = d.getTime() + d.getTimezoneOffset() * <span class="number">60000</span></span><br><span class="line">  <span class="keyword">const</span> nd = utc + <span class="number">3600000</span> * offset</span><br><span class="line">  <span class="keyword">const</span> exp = <span class="keyword">new</span> <span class="built_in">Date</span>(nd)</span><br><span class="line">  exp.setTime(exp.getTime() + Hours * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>)</span><br><span class="line">  <span class="built_in">document</span>.cookie =</span><br><span class="line">    name +</span><br><span class="line">    <span class="string">&#x27;=&#x27;</span> +</span><br><span class="line">    <span class="built_in">escape</span>(value) +</span><br><span class="line">    <span class="string">&#x27;;path=/;expires=&#x27;</span> +</span><br><span class="line">    exp.toUTCString() +</span><br><span class="line">    <span class="string">&#x27;;domain=360doc.com;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 14.end #################################### -->

<!-- #################################### 15.获取字符串对应的字节数 #################################### -->

<h3 id="获取字符串对应的字节数"><a href="#获取字符串对应的字节数" class="headerlink" title="获取字符串对应的字节数"></a>获取字符串对应的字节数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description </span>获取字节数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>s 字符串</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> getBytesLength = <span class="function">(<span class="params">s: string</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> s.replace(<span class="regexp">/[^\x00-\xff]/gi</span>, <span class="string">&#x27;--&#x27;</span>).length</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<!-- #################################### 15.end #################################### -->

<!-- #################################### 16.获取本地的时间 #################################### -->

<h3 id="获取本地的时间"><a href="#获取本地的时间" class="headerlink" title="获取本地的时间"></a>获取本地的时间</h3><figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取本地的时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> getServerTime = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> xmlHttp: XMLHttpRequest</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">srvTime</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// FF, Opera, Safari, Chrome</span></span><br><span class="line">      xmlHttp = <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err1) &#123;</span><br><span class="line">      <span class="comment">// IE</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        xmlHttp = <span class="keyword">new</span> ActiveXObject(<span class="string">&#x27;Msxml2.XMLHTTP&#x27;</span>)</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err2) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          xmlHttp = <span class="keyword">new</span> ActiveXObject(<span class="string">&#x27;Microsoft.XMLHTTP&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (eerr3) &#123;</span><br><span class="line">          <span class="comment">// AJAX not supported, use CPU time.</span></span><br><span class="line">          alert(<span class="string">&#x27;AJAX not supported&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    xmlHttp.open(<span class="string">&#x27;HEAD&#x27;</span>, <span class="built_in">window</span>.location.href.toString(), <span class="literal">false</span>)</span><br><span class="line">    xmlHttp.setRequestHeader(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html&#x27;</span>)</span><br><span class="line">    xmlHttp.send(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> xmlHttp.getResponseHeader(<span class="string">&#x27;Date&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> st = srvTime()</span><br><span class="line">  <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(st <span class="keyword">as</span> <span class="built_in">string</span>)</span><br><span class="line">  <span class="keyword">var</span> timestamp = date.getTime()</span><br><span class="line">  <span class="keyword">return</span> timestamp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<!-- #################################### 16.end #################################### -->

<hr>
<h3 id="获取浏览器的Cookie的值"><a href="#获取浏览器的Cookie的值" class="headerlink" title="获取浏览器的Cookie的值"></a>获取浏览器的Cookie的值</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取浏览器的Cookie的值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> cookie = <span class="function"><span class="params">name</span> =&gt;</span> <span class="string">`; <span class="subst">$&#123;<span class="built_in">document</span>.cookie&#125;</span>`</span>.split(<span class="string">`; <span class="subst">$&#123;name&#125;</span>=`</span>).pop().split(<span class="string">&#x27;;&#x27;</span>).shift();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取token </span></span><br><span class="line">cookie(<span class="string">&#x27;TOKEN&#x27;</span>)</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="颜色RGB转十六进制"><a href="#颜色RGB转十六进制" class="headerlink" title="颜色RGB转十六进制"></a>颜色RGB转十六进制</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 颜色RGB转十六进制</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> rgbToHex = <span class="function">(<span class="params">r, g, b</span>) =&gt;</span> <span class="string">&quot;#&quot;</span> + ((<span class="number">1</span> &lt;&lt; <span class="number">24</span>) + (r &lt;&lt; <span class="number">16</span>) + (g &lt;&lt; <span class="number">8</span>) + b).toString(<span class="number">16</span>).slice(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">rgbToHex(<span class="number">0</span>, <span class="number">51</span>, <span class="number">255</span>); </span><br><span class="line"><span class="comment">// Result: #0033ff</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="复制到剪贴板-新的API"><a href="#复制到剪贴板-新的API" class="headerlink" title="复制到剪贴板(新的API)"></a>复制到剪贴板(新的API)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 复制到剪贴板</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> copyToClipboard = <span class="function">(<span class="params">text</span>) =&gt;</span> navigator.clipboard.writeText(text);</span><br><span class="line">    </span><br><span class="line">copyToClipboard(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="清除所有Cookie"><a href="#清除所有Cookie" class="headerlink" title="清除所有Cookie"></a>清除所有Cookie</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 清除所有Cookie</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> clearCookies = <span class="built_in">document</span>.cookie.split(<span class="string">&#x27;;&#x27;</span>).forEach(<span class="function"><span class="params">cookie</span> =&gt;</span> <span class="built_in">document</span>.cookie = cookie.replace(<span class="regexp">/^ +/</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="regexp">/=.*/</span>, <span class="string">`=;expires=<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">0</span>).toUTCString()&#125;</span>;path=/`</span>));</span><br></pre></td></tr></table></figure>

<hr>
<hr>
<h3 id="生成随机十六进制颜色"><a href="#生成随机十六进制颜色" class="headerlink" title="生成随机十六进制颜色"></a>生成随机十六进制颜色</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成随机十六进制颜色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> randomHex = <span class="function">() =&gt;</span> <span class="string">`#<span class="subst">$&#123;<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">0xffffff</span>).toString(<span class="number">16</span>).padEnd(<span class="number">6</span>, <span class="string">&quot;0&quot;</span>)&#125;</span>`</span>;</span><br><span class="line">    </span><br><span class="line"> <span class="built_in">console</span>.log(randomHex());</span><br><span class="line"><span class="comment">// Result: #92b008</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="从URL获取查询参数-–-JS"><a href="#从URL获取查询参数-–-JS" class="headerlink" title="从URL获取查询参数 – JS"></a>从URL获取查询参数 – JS</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从URL获取查询参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> getParameters = <span class="function">(<span class="params">URL</span>) =&gt;</span> &#123;</span><br><span class="line">  URL = <span class="built_in">JSON</span>.parse(</span><br><span class="line">    <span class="string">&#x27;&#123;&quot;&#x27;</span> +</span><br><span class="line">      <span class="built_in">decodeURI</span>(URL.split(<span class="string">&quot;?&quot;</span>)[<span class="number">1</span>])</span><br><span class="line">        .replace(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;\\&quot;&#x27;</span>)</span><br><span class="line">        .replace(<span class="regexp">/&amp;/g</span>, <span class="string">&#x27;&quot;,&quot;&#x27;</span>)</span><br><span class="line">        .replace(<span class="regexp">/=/g</span>, <span class="string">&#x27;&quot;:&quot;&#x27;</span>) +</span><br><span class="line">      <span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line">  );</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">JSON</span>.stringify(URL);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">getParameters(<span class="built_in">window</span>.location);</span><br><span class="line"><span class="comment">// Result: &#123; search : &quot;easy&quot;, page : 3 &#125;</span></span><br></pre></td></tr></table></figure>

<p>或者： </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从URL获取查询参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">Object</span>.fromEntries(<span class="keyword">new</span> URLSearchParams(<span class="built_in">window</span>.location.search))</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="检查用户的设备是否在暗黑模式"><a href="#检查用户的设备是否在暗黑模式" class="headerlink" title="检查用户的设备是否在暗黑模式"></a>检查用户的设备是否在暗黑模式</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 检查用户的设备是否在暗黑模式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="variable">Boolean</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> isDarkMode = <span class="built_in">window</span>.matchMedia &amp;&amp; <span class="built_in">window</span>.matchMedia(<span class="string">&#x27;(prefers-color-scheme: dark)&#x27;</span>).matches</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="下载一个Excel文档"><a href="#下载一个Excel文档" class="headerlink" title="下载一个Excel文档"></a>下载一个Excel文档</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载一个链接</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params">link, name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!name)&#123;</span><br><span class="line">    name = link.slice(link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> eleLink = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">  eleLink.download = name</span><br><span class="line">  eleLink.style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">  eleLink.href = link</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(eleLink)</span><br><span class="line">  eleLink.click()</span><br><span class="line">  <span class="built_in">document</span>.body.removeChild(eleLink)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下载excel</span></span><br><span class="line">download(<span class="string">&#x27;http://111.229.14.189/file/1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="浏览器中下载一些DOM内容-JSON文件"><a href="#浏览器中下载一些DOM内容-JSON文件" class="headerlink" title="浏览器中下载一些DOM内容/JSON文件"></a>浏览器中下载一些DOM内容/JSON文件</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 浏览器下载静态文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>name 文件名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>content 文件内容</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">downloadFile</span>(<span class="params">name, content</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> name == <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;The first parameter name is a must&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> content == <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;The second parameter content is a must&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!(content <span class="keyword">instanceof</span> Blob)) &#123;</span><br><span class="line">    content = <span class="keyword">new</span> Blob([content])</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> link = URL.createObjectURL(content)</span><br><span class="line">  download(link, name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用下载</span></span><br><span class="line">downloadFile(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;lalalallalalla&#x27;</span>)</span><br><span class="line">downloadFile(<span class="string">&#x27;1.json&#x27;</span>,<span class="built_in">JSON</span>.stringify(&#123;<span class="attr">name</span>:<span class="string">&#x27;hahahha&#x27;</span>&#125;))</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="浏览器下载MP4-PDF-图片等"><a href="#浏览器下载MP4-PDF-图片等" class="headerlink" title="浏览器下载MP4/PDF/图片等"></a>浏览器下载MP4/PDF/图片等</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 浏览器下载MP4/PDF/图片等</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="comment">//提供一个link，完成文件下载，link可以是  http://xxx.com/xxx.xls</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">downloadByLink</span>(<span class="params">link,fileName</span>)</span>&#123;</span><br><span class="line">  axios.request(&#123;</span><br><span class="line">    <span class="attr">url</span>: link,</span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&#x27;blob&#x27;</span> <span class="comment">// 关键代码，让axios把响应改成blob</span></span><br><span class="line">  &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> link = URL.createObjectURL(res.data)</span><br><span class="line">    download(link, fileName)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：会有同源策略的限制，需要配置转发</p>
<hr>
<h3 id="去除对象中的空元素"><a href="#去除对象中的空元素" class="headerlink" title="去除对象中的空元素"></a>去除对象中的空元素</h3><p>给后端发送数据的时候，要判断某个属性是不是空字符串，然后给后端拼参数，这块逻辑抽离出来就是<code>cleanObject</code>，代码实现如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * cleanObject 去除对象中的空元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> cleanObject = <span class="function">(<span class="params">object</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// Object.assign(&#123;&#125;, object)</span></span><br><span class="line">  <span class="keyword">if</span> (!object) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> result = &#123; ...object &#125;;</span><br><span class="line">  <span class="built_in">Object</span>.keys(result).forEach(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> value = result[key];</span><br><span class="line">    <span class="keyword">if</span> (isVoid(value)) &#123;</span><br><span class="line">      <span class="keyword">delete</span> result[key];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否为空</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isVoid = <span class="function">(<span class="params">value</span>) =&gt;</span></span><br><span class="line">  value === <span class="literal">undefined</span> || value === <span class="literal">null</span> || value === <span class="string">&quot;&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>使用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> res = cleanObject(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">pageSize</span>:<span class="number">10</span>,</span><br><span class="line">    <span class="attr">page</span>:<span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;res&quot;</span>, res) <span class="comment">// 输出 &#123; page:1,pageSize:10 &#125;</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="常用的正则验证"><a href="#常用的正则验证" class="headerlink" title="常用的正则验证"></a>常用的正则验证</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 常用的正则验证</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> checkStr = <span class="function"><span class="keyword">function</span>(<span class="params">str, type</span>) </span>&#123; <span class="comment">// 常用正则验证，注意type大小写</span></span><br><span class="line">  <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;phone&#x27;</span>: <span class="comment">// 手机号码</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^1[3|4|5|6|7|8|9][0-9]&#123;9&#125;$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;tel&#x27;</span>: <span class="comment">// 座机</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^(0\d&#123;2,3&#125;-\d&#123;7,8&#125;)(-\d&#123;1,4&#125;)?$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;card&#x27;</span>: <span class="comment">// 身份证</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/(^\d&#123;15&#125;$)|(^\d&#123;18&#125;$)|(^\d&#123;17&#125;(\d|X|x)$)/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>: <span class="comment">// 密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[a-zA-Z]\w&#123;5,17&#125;$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;postal&#x27;</span>: <span class="comment">// 邮政编码</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/[1-9]\d&#123;5&#125;(?!\d)/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;QQ&#x27;</span>: <span class="comment">// QQ号</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[1-9][0-9]&#123;4,9&#125;$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;email&#x27;</span>: <span class="comment">// 邮箱</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[\w-]+(.[\w-]+)*@[\w-]+(.[\w-]+)+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;money&#x27;</span>: <span class="comment">// 金额(小数点2位)</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^\d*(?:.\d&#123;0,2&#125;)?$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;URL&#x27;</span>: <span class="comment">// 网址</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/(http|ftp|https):/</span><span class="regexp">/[\w-_]+(.[\w-_]+)+([\w-.,@?^=%&amp;:/~+#]*[\w-@?^=%&amp;/~+#])?/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;IP&#x27;</span>: <span class="comment">// IP</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/((?:(?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.)&#123;3&#125;(?:25[0-5]|2[0-4]\d|[01]?\d?\d))/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;date&#x27;</span>: <span class="comment">// 日期时间</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;) (\d&#123;2&#125;)(?::\d&#123;2&#125;|:(\d&#123;2&#125;):(\d&#123;2&#125;))$/</span>.test(str) ||</span><br><span class="line">        <span class="regexp">/^(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;number&#x27;</span>: <span class="comment">// 数字</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[0-9]$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;english&#x27;</span>: <span class="comment">// 英文</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[a-zA-Z]+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;chinese&#x27;</span>: <span class="comment">// 中文</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[\u4E00-\u9FA5]+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;lower&#x27;</span>: <span class="comment">// 小写</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[a-z]+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upper&#x27;</span>: <span class="comment">// 大写</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/^[A-Z]+$/</span>.test(str)</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;HTML&#x27;</span>: <span class="comment">// HTML标记</span></span><br><span class="line">      <span class="keyword">return</span> <span class="regexp">/&lt;(&quot;[^&quot;]*&quot;|&#x27;[^&#x27;]*&#x27;|[^&#x27;&quot;&gt;])*&gt;/</span>.test(str)</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="阿拉伯数字转中文大写数字"><a href="#阿拉伯数字转中文大写数字" class="headerlink" title="阿拉伯数字转中文大写数字"></a>阿拉伯数字转中文大写数字</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 阿拉伯数字转中文大写数字</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> numberToChinese = <span class="function"><span class="keyword">function</span>(<span class="params">num</span>) </span>&#123; <span class="comment">// 将阿拉伯数字翻译成中文的大写数字</span></span><br><span class="line">  <span class="keyword">let</span> AA = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;零&#x27;</span>, <span class="string">&#x27;一&#x27;</span>, <span class="string">&#x27;二&#x27;</span>, <span class="string">&#x27;三&#x27;</span>, <span class="string">&#x27;四&#x27;</span>, <span class="string">&#x27;五&#x27;</span>, <span class="string">&#x27;六&#x27;</span>, <span class="string">&#x27;七&#x27;</span>, <span class="string">&#x27;八&#x27;</span>, <span class="string">&#x27;九&#x27;</span>, <span class="string">&#x27;十&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> BB = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;十&#x27;</span>, <span class="string">&#x27;百&#x27;</span>, <span class="string">&#x27;仟&#x27;</span>, <span class="string">&#x27;萬&#x27;</span>, <span class="string">&#x27;億&#x27;</span>, <span class="string">&#x27;点&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> a = (<span class="string">&#x27;&#x27;</span> + num).replace(<span class="regexp">/(^0*)/g</span>, <span class="string">&#x27;&#x27;</span>).split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">  <span class="keyword">let</span> k = <span class="number">0</span></span><br><span class="line">  <span class="keyword">let</span> re = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = a[<span class="number">0</span>].length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (k) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        re = BB[<span class="number">7</span>] + re</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;0&#123;4&#125;//d&#123;&#x27;</span> + (a[<span class="number">0</span>].length - i - <span class="number">1</span>) + <span class="string">&#x27;&#125;$&#x27;</span>).test(a[<span class="number">0</span>])) &#123;</span><br><span class="line">          re = BB[<span class="number">4</span>] + re</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">        re = BB[<span class="number">5</span>] + re</span><br><span class="line">        BB[<span class="number">7</span>] = BB[<span class="number">5</span>]</span><br><span class="line">        k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k % <span class="number">4</span> === <span class="number">2</span> &amp;&amp; a[<span class="number">0</span>].charAt(i + <span class="number">2</span>) !== <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>].charAt(i + <span class="number">1</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">      re = AA[<span class="number">0</span>] + re</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">0</span>].charAt(i) !== <span class="number">0</span>) &#123;</span><br><span class="line">      re = AA[a[<span class="number">0</span>].charAt(i)] + BB[k % <span class="number">4</span>] + re</span><br><span class="line">    &#125;</span><br><span class="line">    k++</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (a.length &gt; <span class="number">1</span>) &#123; <span class="comment">// 加上小数部分(如果有小数部分)</span></span><br><span class="line">    re += BB[<span class="number">6</span>]</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; a[<span class="number">1</span>].length; i++) &#123;</span><br><span class="line">      re += AA[a[<span class="number">1</span>].charAt(i)]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (re === <span class="string">&#x27;一十&#x27;</span>) &#123;</span><br><span class="line">    re = <span class="string">&#x27;十&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (re.match(<span class="regexp">/^一/</span>) &amp;&amp; re.length === <span class="number">3</span>) &#123;</span><br><span class="line">    re = re.replace(<span class="string">&#x27;一&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> re</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="base64图片下载功能"><a href="#base64图片下载功能" class="headerlink" title="base64图片下载功能"></a>base64图片下载功能</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * base64图片下载功能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> downloadFile = <span class="function"><span class="keyword">function</span>(<span class="params">base64, fileName</span>) </span>&#123; <span class="comment">//base64图片下载功能</span></span><br><span class="line">  <span class="keyword">let</span> base64ToBlob = <span class="function"><span class="keyword">function</span>(<span class="params">code</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> parts = code.split(<span class="string">&#x27;;base64,&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> contentType = parts[<span class="number">0</span>].split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">let</span> raw = <span class="built_in">window</span>.atob(parts[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">let</span> rawLength = raw.length;</span><br><span class="line">    <span class="keyword">let</span> uInt8Array = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(rawLength);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; rawLength; ++i) &#123;</span><br><span class="line">      uInt8Array[i] = raw.charCodeAt(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Blob([uInt8Array], &#123;</span><br><span class="line">      <span class="attr">type</span>: contentType</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> aLink = <span class="built_in">document</span>.createElement(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> blob = base64ToBlob(base64); <span class="comment">//new Blob([content]);</span></span><br><span class="line">  <span class="keyword">let</span> evt = <span class="built_in">document</span>.createEvent(<span class="string">&quot;HTMLEvents&quot;</span>);</span><br><span class="line">  evt.initEvent(<span class="string">&quot;click&quot;</span>, <span class="literal">true</span>, <span class="literal">true</span>); <span class="comment">//initEvent不加后两个参数在FF下会报错  事件类型，是否冒泡，是否阻止浏览器的默认行为</span></span><br><span class="line">  aLink.download = fileName;</span><br><span class="line">  aLink.href = URL.createObjectURL(blob);</span><br><span class="line">  aLink.click();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>开发</category>
        <category>懒人福音</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>开发</tag>
        <tag>前端</tag>
        <tag>懒人福音</tag>
      </tags>
  </entry>
  <entry>
    <title>关于跨域，我想说.....</title>
    <url>/post/9ff3.html</url>
    <content><![CDATA[<h2 id="什么是跨域？什么是浏览器同源政策？"><a href="#什么是跨域？什么是浏览器同源政策？" class="headerlink" title="什么是跨域？什么是浏览器同源政策？"></a>什么是跨域？什么是浏览器同源政策？</h2><blockquote>
<p> 跨域：<br>​      浏览器可能存放用户信息，为了保护用户信息，禁止非同源请求来获取本网站的信息，为了解决同源限制所作出的行为叫做跨域。<br> 同源政策:<br>   两个ip地址，只有符合以下三个条件时才可以叫做同源，同源的地址之间互相访问不存在跨域问题；<br>   1.协议相同<br>   2.域名相同<br>   3.端口相同<br>   只要有一个条件不符合，就会发生跨域问题。</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//www.baidu.com/a   //http:默认端口是8080</span></span><br><span class="line">https:<span class="comment">//www.baidu/com/b  //https:默认端口是443</span></span><br><span class="line">A.同源 B.不同源，协议不同 C.不同源，端口不同 &#123;D.不同源，协议和端口不同&#125;</span><br></pre></td></tr></table></figure>

<h2 id="跨域方式有哪些？"><a href="#跨域方式有哪些？" class="headerlink" title="跨域方式有哪些？"></a>跨域方式有哪些？</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.open(<span class="string">&quot;get&quot;</span>,<span class="string">&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=%E8%BE%A3%E6%9D%A1&quot;</span>);</span><br><span class="line">xhr.send();</span><br><span class="line"></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">         <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里会显示出现跨域阻止</span></span><br></pre></td></tr></table></figure>

<h3 id="跨域问题的第一种解决方式"><a href="#跨域问题的第一种解决方式" class="headerlink" title="跨域问题的第一种解决方式"></a>跨域问题的第一种解决方式</h3><p>这里以自己搭建的淘宝和京东后台模拟为例</p>
<ul>
<li>1.淘宝</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//淘宝----------前端js代码</span></span><br><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">//这里默认的请求地址是 http://localhost:8080/getInfo</span></span><br><span class="line"><span class="comment">// xhr.open(&quot;get&quot;,&quot;/getInfo&quot;);</span></span><br><span class="line"><span class="comment">//现在想要请求京东的资源</span></span><br><span class="line">xhr.open(<span class="string">&quot;get&quot;</span>,<span class="string">&quot;http://localhost:9000/getInfo&quot;</span>);</span><br><span class="line">xhr.send();</span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="string">&quot;span&quot;</span>).innerText = xhr.responseText;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//淘宝----------后端js代码</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> web = express();</span><br><span class="line">web.use(express.static(<span class="string">&quot;public&quot;</span>));</span><br><span class="line"></span><br><span class="line">web.get(<span class="string">&quot;/getInfo&quot;</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> goodList = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;雷神电脑&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">9999</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;苹果手机&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">6999</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;耐克球鞋&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">999</span></span><br><span class="line">    &#125;</span><br><span class="line">  ];</span><br><span class="line">  res.send(goodList);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">web.listen(<span class="string">&quot;8080&quot;</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;8080端口启动&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<ul>
<li>京东</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//京东----------前端js代码 和淘宝的一致</span></span><br><span class="line"><span class="comment">//京东请求自己网站的数据，没有同源限制也就没有跨域问题</span></span><br><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">  xhr.open(<span class="string">&quot;get&quot;</span>,<span class="string">&quot;/getInfo&quot;</span>);</span><br><span class="line">  xhr.send();</span><br><span class="line">  xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(xhr.responseText);</span><br><span class="line">      <span class="built_in">document</span>.querySelector(<span class="string">&quot;span&quot;</span>).innerText = xhr.responseText;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//京东----------后端js代码</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> web = express();</span><br><span class="line">web.use(express.static(<span class="string">&quot;public&quot;</span>));</span><br><span class="line"></span><br><span class="line">web.get(<span class="string">&quot;/getInfo&quot;</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//-------------------------------------------------------- </span></span><br><span class="line">  res.set(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;http://localhost:8080&quot;</span>)</span><br><span class="line">  <span class="comment">//-------------------------------------------------------- </span></span><br><span class="line">  <span class="keyword">const</span> bookList = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;海王&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">99.99</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;海贼王&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">699</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">name</span> : <span class="string">&quot;海尔兄弟&quot;</span>,</span><br><span class="line">      <span class="attr">price</span> : <span class="number">111</span></span><br><span class="line">    &#125;</span><br><span class="line">  ];</span><br><span class="line">  res.send(bookList);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">web.listen(<span class="string">&quot;9000&quot;</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;9000端口启动&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在这里，淘宝网站想要请求京东网站的资源时，发生了跨域请求。如果没有解决这个问题是没法请求到京东的数据的。</p>
<p>这里就有了第一种解决的方案，在京东的后端接口中声明，</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">res.set(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;希望可以被请求的地址&quot;</span>)  </span><br><span class="line"><span class="comment">//这里可以写* 代表所有的不同源的网站</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>总结：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">这里请求京东的资源会发生跨域请求,由于浏览器的同源限制，会拦截跨域请求</span><br><span class="line">*  控制台输出：</span><br><span class="line">*    已拦截跨源请求：同源策略禁止读取位于 http:<span class="comment">//localhost:9000/getInfo 的远程资源。</span></span><br><span class="line">*    （原因：CORS 头缺少 <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>）。</span><br><span class="line">*  只需要在对应的接口中设置：</span><br><span class="line">*    res.set(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;希望可以被请求的地址&quot;</span>)  这里可以写* 代表所有的不同源的网站</span><br></pre></td></tr></table></figure>

<h3 id="跨域问题的第二种解决方式"><a href="#跨域问题的第二种解决方式" class="headerlink" title="跨域问题的第二种解决方式"></a>跨域问题的第二种解决方式</h3><blockquote>
<p>问题剖析：</p>
<p>​    跨域问题最根本产生的原因就是浏览器为了保护用户信息而设置了同源限制，只有同源的情况下才可以访问数据。同源限制也只是在浏览器中存在，在app等环境下运行就不会有同源限制，所以只需要想办法让请求发生不在浏览器中就可以。这里可以使用后台来请求外部资源，然后再返回给前端就可以解决跨域问题。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 前端代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">请输入您要查询的关键字：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;getInfo()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> keywords = <span class="built_in">document</span>.querySelector(<span class="string">&quot;input&quot;</span>).value;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">    <span class="comment">//现在想要请求动态的资源,链接中的q参数是可变的，传入一个参数给后端</span></span></span><br><span class="line"><span class="javascript">    xhr.open(<span class="string">&quot;get&quot;</span>, <span class="string">&quot;/getInfo?keyWords=&quot;</span> + keywords);</span></span><br><span class="line"><span class="javascript">    xhr.send();</span></span><br><span class="line"><span class="javascript">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">&quot;span&quot;</span>).innerText = xhr.responseText;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> web = express();</span><br><span class="line">web.use(express.static(<span class="string">&quot;public&quot;</span>));</span><br><span class="line"><span class="keyword">const</span> https = <span class="built_in">require</span>(<span class="string">&quot;https&quot;</span>)</span><br><span class="line"></span><br><span class="line">web.get(<span class="string">&quot;/getInfo&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> keywords = req.query.keyWords; <span class="comment">// 这个keywords是一个汉字字符,拼接成的url是带有中文的，需要编码</span></span><br><span class="line">  <span class="keyword">let</span> url = <span class="string">&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=&quot;</span> + keywords;</span><br><span class="line">  <span class="comment">//https请求不能解析带有中文的地址</span></span><br><span class="line">  url = <span class="built_in">encodeURI</span>(url);</span><br><span class="line">  <span class="comment">//在这里请求外部数据</span></span><br><span class="line">  <span class="comment">//请求淘宝的一个搜索关键字的资源</span></span><br><span class="line">  https.get(url, <span class="function"><span class="keyword">function</span> (<span class="params">httpsRes</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> bufferData = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    httpsRes.on(<span class="string">&quot;data&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      bufferData += data;</span><br><span class="line">    &#125;);</span><br><span class="line">    httpsRes.on(<span class="string">&quot;end&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">//此时bufferData是一个buffer类型的数据</span></span><br><span class="line">      bufferData = <span class="built_in">JSON</span>.parse(bufferData);</span><br><span class="line">      <span class="comment">//将拼接到的资源返回给前端</span></span><br><span class="line">      res.send(bufferData);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">web.listen(<span class="string">&quot;8080&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;8080端口启动&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="跨域问题的第三种解决方式"><a href="#跨域问题的第三种解决方式" class="headerlink" title="跨域问题的第三种解决方式"></a>跨域问题的第三种解决方式</h3><blockquote>
<p>在以往的html中，也有请求外部资源的时候</p>
</blockquote>
<p>比如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;地址&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;地址&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;地址&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这些请求都可以请求成功，说明浏览器对于标签的外部资源请求是没有限制的，那么我们使用标签的形式进行请求跨域资源。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">myCallBack</span>(<span class="params">data</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(data);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//data里面存放了&#123;result:[Array(数据)]&#125;</span></span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=%E8%BE%A3%E6%9D%A1&amp;callback=myCallBack&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>


<blockquote>
<p>在标签中进行跨域请求就不需要在接口中增加一行 res.set(“Access-Control-Allow-Origin”,”允许的对象”)<br>也不需要通过后台的方式进行跨域请求<br>只需要在标签中声明请求的目标资源地址就可以了，更加方便</p>
<p>但是这种方式也有一个问题：<br>    怎么才能得到请求到的资源?<br>    这里需要给请求的资源地址后面添加一个callback 回调函数</p>
</blockquote>
<h3 id="跨域问题的第四个解决方式"><a href="#跨域问题的第四个解决方式" class="headerlink" title="跨域问题的第四个解决方式"></a>跨域问题的第四个解决方式</h3><blockquote>
<p>搭配jquery中的dataType : jsonp解决跨域问题</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./jQuery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">url</span> : <span class="string">&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=%E8%BE%A3%E6%9D%A1&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">type</span> : <span class="string">&quot;get&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">dataType</span> : <span class="string">&quot;jsonP&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">success</span>(<span class="params">res</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(res.result)</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="跨域问题的第五个解决方式（vue）"><a href="#跨域问题的第五个解决方式（vue）" class="headerlink" title="跨域问题的第五个解决方式（vue）"></a>跨域问题的第五个解决方式（vue）</h3><p>下面的例子中创建一个home.vue组件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;sendQuest&quot;&gt;发送跨域请求&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 这里需要安装axios模块 npm install axios</span><br><span class="line">import axios from &quot;axios&quot;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;home&quot;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    sendQuest() &#123;</span><br><span class="line">      // 这里发生了跨域请求，请求不到数据。在config/index中进行配置</span><br><span class="line">      // axios.get(&quot;https://suggest.taobao.com/sug?code=utf-8&amp;q=%E9%A6%99%E6%B0%B4&quot;)</span><br><span class="line">      axios.get(&quot;/taoBao/sug?code=utf-8&amp;q=%E9%A6%99%E6%B0%B4&quot;)</span><br><span class="line">      .then(function (data) &#123;</span><br><span class="line">        // 请求成功</span><br><span class="line">        console.log(data);</span><br><span class="line">      &#125;,function (err) &#123;</span><br><span class="line">        // 请求错误</span><br><span class="line">        console.log(err);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;!-- 当点击按钮的时候进行数据跨域请求， --&gt;</span><br></pre></td></tr></table></figure>

<p>在config/index.js/dev/proxyTable中进行配置：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// proxy 代理  table 表  代理表 </span></span><br><span class="line"><span class="comment">// vue当中使用代理表进行跨域  （反向代理）</span></span><br><span class="line"><span class="comment">// 代理表跨域 是把url当中相同的部分截取出来</span></span><br><span class="line"><span class="attr">proxyTable</span>: &#123;</span><br><span class="line">  <span class="string">&#x27;/taoBao&#x27;</span>:&#123;</span><br><span class="line">    <span class="comment">// target目标</span></span><br><span class="line">     <span class="attr">target</span>:<span class="string">&quot;https://suggest.taobao.com&quot;</span> , </span><br><span class="line">    <span class="comment">//  是否改变请求源</span></span><br><span class="line">     <span class="attr">changeOrigin</span>:<span class="literal">true</span> , </span><br><span class="line">    <span class="comment">//  路径重写</span></span><br><span class="line">     <span class="attr">pathRewrite</span>:&#123;</span><br><span class="line">        <span class="string">&#x27;^/taoBao&#x27;</span>:<span class="string">&quot;&quot;</span></span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这样就可以实现vue中的跨域请求</p>
</blockquote>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>开发</tag>
        <tag>前端</tag>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>前端常见面试题积累</title>
    <url>/post/f36c.html</url>
    <content><![CDATA[<p>分享个人面试过程中常见的问题，也包含自己对问题的理解。不断完善…..</p>
<span id="more"></span>

<!-- ########################## 1.在js中当对象使用new关键字的时候，程序内部都做了什么？ ########################## -->
<h3 id="new关键字的原理"><a href="#new关键字的原理" class="headerlink" title="new关键字的原理"></a>new关键字的原理</h3><p>当对象使用new关键字创建的时候，程序内部都做了什么？<br>&nbsp;&nbsp;&nbsp;1.开辟内存地址，里面放置一个空的对象<br>&nbsp;&nbsp;&nbsp;2.this指向了空的对象<br>&nbsp;&nbsp;&nbsp;3.构造函数的参数给空的对象赋值<br>&nbsp;&nbsp;&nbsp;4.将赋值后的对象返回给外面使用</p>
<hr>
<!-- ########################## 1.end ########################## -->

<!-- ########################## 2.跨域问题 ########################## -->
<h3 id="跨域的产生原因和如何解决？"><a href="#跨域的产生原因和如何解决？" class="headerlink" title="跨域的产生原因和如何解决？"></a>跨域的产生原因和如何解决？</h3><p>关于跨域，我想要整理一篇独立的文章去解释的理解，这里直接链接到 <a href="/post/9ff3.html">关于跨域，我想说…..</a></p>
<!-- *** -->

]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>开发</tag>
        <tag>前端</tag>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>filter、map、reduce的使用</title>
    <url>/post/4109.html</url>
    <content><![CDATA[<p>在项目开发中，会有大量的对数组、对象的操作，合理地利用部分高阶函数会让你的代码看起来更加优雅。</p>
<span id="more"></span>



<!-- ############################################## 1. filter、map、reduce的使用 ############################################## -->
<p>直接使用一个小的案例去说明他们的关系：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">111</span>,<span class="number">444</span>,<span class="number">40</span>,<span class="number">50</span>];</span><br><span class="line"><span class="comment">// 对于数据nums现有三个需求：</span></span><br><span class="line">    <span class="comment">// 1.取出所有小于100的数字 </span></span><br><span class="line">    <span class="comment">// 2.将所有小于100的数字进行转化 --乘以2</span></span><br><span class="line">    <span class="comment">// 3.将所有的newNums2数字相加得到最后的结果。</span></span><br></pre></td></tr></table></figure>

<h2 id="使用普通for循环去处理以上需求"><a href="#使用普通for循环去处理以上需求" class="headerlink" title="使用普通for循环去处理以上需求"></a>使用普通for循环去处理以上需求</h2><blockquote>
<p>需求1：取出所有小于100的数字 </p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> newNums = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> n <span class="keyword">of</span> nums) &#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">100</span>) &#123;</span><br><span class="line">        newNums.push(n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需求2： 将所有小于100的数字进行转化 –乘以2</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> newNums2 = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> n <span class="keyword">of</span> newNums) &#123;</span><br><span class="line">    newNums2.push(n * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需求3： 将所有的newNums2数字相加得到最后的结果。</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> total = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> n <span class="keyword">of</span> newNums2) &#123;</span><br><span class="line">    total += n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="filter-map-reduce-完成以上需求"><a href="#filter-map-reduce-完成以上需求" class="headerlink" title="filter / map / reduce  完成以上需求"></a>filter / map / reduce  完成以上需求</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//需求1：取出所有小于100的数字</span></span><br><span class="line">nums.filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//filter中的回调函数有一个要求：必须返回一个boolean值</span></span><br><span class="line">    <span class="comment">//当返回true时，函数内部会自动将本次回调的n加入到一个新的数组中</span></span><br><span class="line">    <span class="comment">//当返回为false时，函数内部会过滤掉这次的n</span></span><br><span class="line">    <span class="keyword">return</span> n &lt; <span class="number">100</span>; <span class="comment">//这里就可以直接满足第一个需求</span></span><br><span class="line">&#125;); </span><br><span class="line"><span class="comment">//这里会返回一个新的数组，就是包含nums中所有值小于100的新数组</span></span><br><span class="line"><span class="keyword">let</span> newNums = nums.filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &lt; <span class="number">100</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(newNums); <span class="comment">// [10,20,40,50]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//需求2： 将所有小于100的数字进行转化 --乘以2</span></span><br><span class="line"><span class="keyword">let</span> newNums2 = newNums.map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n * <span class="number">2</span> ;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(newNums2); <span class="comment">// [20,40,80,100]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//需求3：将所有的newNums2数字相加得到最后的结果</span></span><br><span class="line"><span class="comment">//reduce作用：对数组中所有的内容进行汇总</span></span><br><span class="line">newNums2.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue , n</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//preValue 是上一次返回的值</span></span><br><span class="line">    <span class="comment">//return 100; //对应下面的过程</span></span><br><span class="line">    <span class="keyword">return</span> preValue + n;</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="comment">//reduce(参数1，参数2); 会返回最后汇总的结果; 参数1：整合数据操作、参数2：初始值</span></span><br><span class="line"><span class="comment">//这里面的function会执行4次，</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	第一次： preValue-&gt;0 ; n -&gt; 20;</span></span><br><span class="line"><span class="comment">	第二次： preValue-&gt;100 ; n -&gt;40;</span></span><br><span class="line"><span class="comment">	第二次： preValue-&gt;100 ; n -&gt;80;</span></span><br><span class="line"><span class="comment">	第二次： preValue-&gt;100 ; n -&gt;100;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>计算最终的结果</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> total = nums.filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &lt; <span class="number">100</span>;</span><br><span class="line">&#125;).map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n * <span class="number">2</span>;</span><br><span class="line">&#125;).reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue , n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preValue + n;</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<p>这样的话就很好的简化了代码，逻辑也会更加清楚。<br>什么？还是不够简化？那下面的代码呢？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> total = nums.filter(<span class="function"><span class="params">n</span> =&gt;</span> n &lt; <span class="number">100</span>).map(<span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>).reduce(<span class="function">(<span class="params">preValue,n</span>) =&gt;</span> preValue + n);</span><br><span class="line"><span class="built_in">console</span>.log(total); <span class="comment">// total = 240;</span></span><br></pre></td></tr></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote>
<p>filter: 对数组进行过滤，当返回值为true时，才会返回当前处理的元素。</p>
</blockquote>
<blockquote>
<p>map: 映射，可以对数组中每个元素进行操作，并逐一返回，生成一个新的数组。</p>
</blockquote>
<blockquote>
<p>reduce: 接收一个函数作为累加器，数组中的每个值（从左到右）开始合并，最终返回一个值。<br>reduce可接收的参数: reduce((参数1,参数2,参数3,参数4) =&gt; {}, 参数5)<br>&nbsp;&nbsp;参数1. previousValue(上一次调用回调函数返回的值，或者是提供的初始值（initialValue）)<br>&nbsp;&nbsp;参数2. currentValue(数组中当前被处理的元素)<br>&nbsp;&nbsp;参数3. index（当前元素在数组中的索引）<br>&nbsp;&nbsp;参数4. array（调用reduce的数组）<br>并且reduce可以传入一个初始值（参数5），初始值的格式随意定义，如果不传，默认是previousValue</p>
</blockquote>
<!-- *** -->
<!-- ############################################## 1. end ############################################## -->
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>开发</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>那些开发中的css技巧</title>
    <url>/post/cc46.html</url>
    <content><![CDATA[<p>在开发中合理利用css，可以大大提高开发效率</p>
<span id="more"></span>


<h3 id="去除safari浏览器输入框的小图标以及密码输入的钥匙图标"><a href="#去除safari浏览器输入框的小图标以及密码输入的钥匙图标" class="headerlink" title="去除safari浏览器输入框的小图标以及密码输入的钥匙图标"></a>去除safari浏览器输入框的小图标以及密码输入的钥匙图标</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 去掉Safari浏览器下密码输入框自带的小钥匙图标 */</span></span><br><span class="line"><span class="selector-tag">input</span>::-webkit-credentials-auto-fill-button &#123;</span><br><span class="line">  display: none <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 去掉safari浏览器input右边的小图标/小按钮 */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>::-webkit-contacts-auto-fill-button&#123;</span><br><span class="line">  opacity: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="调整浏览器滚动条的样式"><a href="#调整浏览器滚动条的样式" class="headerlink" title="调整浏览器滚动条的样式"></a>调整浏览器滚动条的样式</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/</span></span><br><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">  /* width: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">5px</span>; */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义滚动条轨道 内阴影+圆角*/</span></span><br><span class="line">::-webkit-scrollbar-track &#123;</span><br><span class="line">  border-radius: <span class="number">999px</span>;</span><br><span class="line">  <span class="attribute">border</span>:<span class="number">0px</span> solid transparent;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,.<span class="number">2</span>) inset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义滑块 内阴影+圆角*/</span></span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  border-radius: <span class="number">999px</span>;<span class="attribute">border</span>:<span class="number">0px</span> solid transparent;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-clip</span>: content-box;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,.<span class="number">5</span>) inset;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>:<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,.<span class="number">5</span>) inset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-corner &#123;</span><br><span class="line">  background:transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="毛玻璃效果"><a href="#毛玻璃效果" class="headerlink" title="毛玻璃效果"></a>毛玻璃效果</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">hsla</span>(<span class="number">0</span>, <span class="number">0%</span>, <span class="number">100%</span>, .<span class="number">75</span>);</span><br><span class="line">  -webkit-backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>);    </span><br><span class="line">  backdrop-<span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="手机端点开多选框出现蓝色块"><a href="#手机端点开多选框出现蓝色块" class="headerlink" title="手机端点开多选框出现蓝色块"></a>手机端点开多选框出现蓝色块</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  -webkit-tap-highlight-<span class="attribute">color</span>:transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="鼠标放上出现一个白色的框-带动画"><a href="#鼠标放上出现一个白色的框-带动画" class="headerlink" title="鼠标放上出现一个白色的框(带动画)"></a>鼠标放上出现一个白色的框(带动画)</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 默认样式 -- 不显示 */</span></span><br><span class="line"><span class="selector-class">.border</span>:before &#123;</span><br><span class="line">  content: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#FFFFFF</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">3s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.4</span>,<span class="number">0</span>,<span class="number">0.2</span>,<span class="number">1</span>) <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* hover时改变 */</span></span><br><span class="line"><span class="selector-class">.border</span><span class="selector-pseudo">:hover</span>:before &#123;</span><br><span class="line">  transform: <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>效果图</strong><br><img src="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/%E9%82%A3%E4%BA%9B%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84css%E6%8A%80%E5%B7%A7/border-animation.gif" alt="边框效果图"></p>
<hr>
<h3 id="flex布局实现简单的瀑布流"><a href="#flex布局实现简单的瀑布流" class="headerlink" title="flex布局实现简单的瀑布流"></a>flex布局实现简单的瀑布流</h3><p><strong>html部分</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这里需要将文档结构处理成类似的结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;*&amp;^%^%&amp;%*&amp;*&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是item1的描述信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;*&amp;^%^%&amp;%*&amp;*&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题2<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是item2的描述信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;*&amp;^%^%&amp;%*&amp;*&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题3<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是item3的描述信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-item&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;*&amp;^%^%&amp;%*&amp;*&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>标题4<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是item4的描述信息<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>css部分</strong></p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">column-count</span>: <span class="number">4</span>; <span class="comment">/* 瀑布流的列数 */</span></span><br><span class="line">  <span class="attribute">column-gap</span>: <span class="number">0</span>; <span class="comment">/* 每列之间的间距 如： 10px;*/</span></span><br><span class="line"></span><br><span class="line">  &amp;-item &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>前端开发</category>
        <category>懒人福音</category>
      </categories>
      <tags>
        <tag>开发</tag>
        <tag>前端</tag>
        <tag>CSS</tag>
        <tag>懒人福音</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo + volantis 搭建个人博客?</title>
    <url>/post/9487.html</url>
    <content><![CDATA[<p>使用hexo搭建个人博客</p>
<span id="more"></span>

<p><strong>搭建博客的框架很多，个人比较偏向于hexo框架：</strong></p>
<ul>
<li>hexo只需要专注于写文档而不需要过分担心别的问题。</li>
<li>hexo比较成熟，如果遇到问题也可以得到很好的解决。</li>
<li>hexo使用github pages进行部署，不需要购买自己的服务器就可以部署到线上。</li>
<li>hexo有很好的主题，如：volantis， yilia….</li>
</ul>
<p><a href="https://hexo.io/zh-cn/">hexo中文网站</a>      <a href="https://volantis.js.org/">volantis主题官方文档</a></p>
<h3 id="1-搭建hexo环境"><a href="#1-搭建hexo环境" class="headerlink" title="1. 搭建hexo环境"></a>1. 搭建hexo环境</h3><p> <strong>hexo是基于node开发的，首先需要安装node ，其次如果想要部署到github pages 需要安装git</strong></p>
<figure class="highlight powershell"><figcaption><span><1>安装淘宝镜像</span></figcaption><table><tr><td class="code"><pre><span class="line">sudo npm install <span class="literal">-g</span> cnpm -<span class="literal">-registry</span>=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><figcaption><span><2>安装hexo-cli</span></figcaption><table><tr><td class="code"><pre><span class="line">sudo cnpm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure>

<figure class="highlight powershell"><figcaption><span><3>检查是否安装成功</span></figcaption><table><tr><td class="code"><pre><span class="line">hexo <span class="literal">-v</span></span><br></pre></td></tr></table></figure>


<h3 id="2-创建hexo项目"><a href="#2-创建hexo项目" class="headerlink" title="2. 创建hexo项目"></a>2. 创建hexo项目</h3><p><strong>首先创建一个空的文件夹用于存放hexo项目代码，并在创建的目录中打开终端</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">mkdir &lt;floder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;floder&gt;</span><br><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">// 或者直接借助hexo去实现</span><br><span class="line"></span><br><span class="line">hexo init &lt;floder&gt; // 这里hexo会自动创建文件夹并初始化项目</span><br></pre></td></tr></table></figure>

<p><strong>安装依赖</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>


<h3 id="3-启动项目"><a href="#3-启动项目" class="headerlink" title="3. 启动项目"></a>3. 启动项目</h3><p><strong>启动项目常用的命令</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo clean // 清除项目中的临时文件</span><br><span class="line">hexo g   // OR  hexo generate 生成临时文件</span><br><span class="line">hexo s   // OR  hexo <span class="built_in">start</span>  启动项目</span><br></pre></td></tr></table></figure>

<p><strong>此时页面可以看到一个默认的博客模板并且有一篇默认的hello world 文章</strong></p>
<h3 id="4-新建一篇文章"><a href="#4-新建一篇文章" class="headerlink" title="4. 新建一篇文章"></a>4. 新建一篇文章</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new &quot;如何搭建个人博客&quot;</span><br></pre></td></tr></table></figure>

<h3 id="5-切换自己喜欢的主题"><a href="#5-切换自己喜欢的主题" class="headerlink" title="5. 切换自己喜欢的主题"></a>5. 切换自己喜欢的主题</h3><p><strong>这里以Volantis主题为例，具体的主题需要参照具体的官方文档来做</strong></p>
<ul>
<li><p><strong>下载主题插件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-theme-volantis </span><br></pre></td></tr></table></figure></li>
<li><p><strong>修改_config.yml中的 <span style="color:rgb(205,0,0)">theme</span> 字段为volantis</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">volantis</span></span><br></pre></td></tr></table></figure></li>
<li><p><strong>安装 Hexo 搜索的依赖包</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-generator-search hexo-generator-json-content</span><br></pre></td></tr></table></figure></li>
<li><p><strong>安装 Stylus 渲染器</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-renderer-stylus</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>这样就可以看到精美的主题啦，之后的细节慢慢去调试成自己喜欢的样子（参考对应的官方文档）</strong></p>
<h3 id="6-部署到github-pages"><a href="#6-部署到github-pages" class="headerlink" title="6. 部署到github pages"></a>6. 部署到github pages</h3><p>第一步： 在github上新建一个仓库，仓库的名字为：&lt;用户名&gt;.github.io  （必须）</p>
<p>第二步： 修改项目根目录下的_config.yml中的 <span style="color:rgb(205,0,0)">deploy</span> 字段为：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">//</span> <span class="string">这里修改成自己的github仓库地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>第三步： 将代码部署到github pages </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g // OR hexo generate</span><br><span class="line">hexo d // OR hexo deploy</span><br></pre></td></tr></table></figure>
<p>此时控制台会报错：<span style="color:rgb(255,0,0)">ERROR</span> Deployer not found: git<br>这是因为项目缺少git部署的插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>
<p>执行以上的语句即可～～～～～～～然后重复第三步<br>此时就可以看到git仓库中已经有了一部分代码,神奇的是：<br>此时去访问：&lt;用户名&gt;.github.io 就可以看到线上的博客样式了。</p>
<a href="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/github.png" title="" target="">github pages demo, JingTao-Li.github.io,</a>


<h3 id="7-修改github-page-为自定义的域名"><a href="#7-修改github-page-为自定义的域名" class="headerlink" title="7. 修改github page 为自定义的域名"></a>7. 修改github page 为自定义的域名</h3><p><img src="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/my-yuming.png" alt="我的域名"><br><strong>点击解析，添加对应的IP地址和CNAME</strong><br><img src="https://myblogger-1305472061.cos.ap-shanghai.myqcloud.com/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/yuming-parse.png" alt="我的域名解析设置"><br>然后在当前项目的 source/ 目录下创建一个名叫 CNAME 的文件，里面的内容就是你的域名地址。接着重新部署一下就可以了。</p>
<h3 id="8-如何在项目中引入本地图片"><a href="#8-如何在项目中引入本地图片" class="headerlink" title="8. 如何在项目中引入本地图片"></a>8. 如何在项目中引入本地图片</h3><p><strong>第一步：</strong>安装插件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p><strong>第二步：</strong>打开根目录下的 _config.yml 文件，修改 <span style="color:rgb(205,0,0)">post_asset_folder</span> 字段为 <strong>true</strong></p>
<p><strong>第三步：</strong>打开 /node_modules/hexo-asset-image/index.js 文件，替换为以下代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPosition</span>(<span class="params">str, m, i</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="built_in">String</span>(hexo.version).split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.config;</span><br><span class="line">  <span class="keyword">if</span>(config.post_asset_folder)&#123;</span><br><span class="line">        <span class="keyword">var</span> link = data.permalink;</span><br><span class="line">    <span class="keyword">if</span>(version.length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">var</span> beginPos = getPosition(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">    <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.load(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">            <span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">            <span class="keyword">var</span> src = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>).replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;</span><br><span class="line">               !<span class="regexp">/^\s*\//</span>.test(src)) &#123;</span><br><span class="line">              <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">              <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">              <span class="keyword">var</span> linkArray = link.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">var</span> srcArray = src.split(<span class="string">&#x27;/&#x27;</span>).filter(<span class="function"><span class="keyword">function</span>(<span class="params">elem</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">              &#125;);</span><br><span class="line">              <span class="keyword">if</span>(srcArray.length &gt; <span class="number">1</span>)</span><br><span class="line">                srcArray.shift();</span><br><span class="line">              src = srcArray.join(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">              $(<span class="built_in">this</span>).attr(<span class="string">&#x27;src&#x27;</span>, config.root + link + src);</span><br><span class="line">              <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">            <span class="built_in">console</span>.info&amp;&amp;<span class="built_in">console</span>.info($(<span class="built_in">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><strong>第四步：</strong>之后在新建一个新的文档内容的时候会自动生成一个同名文件夹，里面就可以放本页面需要的图片源文件，在需要的地方引入：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">这是代替图片的文字，随便写</span>](<span class="link">图片名字</span>)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>搭建个人博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/post/3eeb.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
